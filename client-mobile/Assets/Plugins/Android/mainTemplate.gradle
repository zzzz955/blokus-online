// ---- MODULE (unityLibrary) build.gradle template ----
apply plugin: 'com.android.library'

android {
    ndkPath "**NDKPATH**"
    compileSdkVersion **APIVERSION**
    ndkVersion "**NDKVERSION**"
    namespace '**APPLICATIONID**'

    defaultConfig {
        minSdkVersion **MINSDKVERSION**
        targetSdkVersion **TARGETSDKVERSION**
        versionCode **VERSIONCODE**
        versionName '**VERSIONNAME**'
        ndk { abiFilters **ABI_FILTERS** }
        consumerProguardFiles 'proguard-unity.txt'**USER_PROGUARD**
        multiDexEnabled true
    }

    androidResources { noCompress += unityStreamingAssets.tokenize(', ') }

    packagingOptions {
        jniLibs { useLegacyPackaging true }
        resources { excludes += ['META-INF/*'] }
    }

    lintOptions { abortOnError false }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.multidex:multidex:2.0.1'
    **DEPS**
}

afterEvaluate {
    configurations.configureEach { conf ->
        try {
            conf.dependencies.removeAll { dep ->
                dep instanceof org.gradle.api.artifacts.ProjectDependency &&
                (dep.dependencyProject?.path == ':BlokusConfig.androidlib' ||
                 dep.dependencyProject?.path == ':mobilenotifications.androidlib')
            }
        } catch (ignored) { }
    }
    def ensureProj = { String p ->
        def has = configurations.implementation.allDependencies.find {
            it instanceof org.gradle.api.artifacts.ProjectDependency && it.dependencyProject?.path == p
        } != null
        if (!has) dependencies.add("implementation", project(p))
    }
    ensureProj(':unityLibrary:BlokusConfig.androidlib')
    ensureProj(':unityLibrary:mobilenotifications.androidlib')
}
