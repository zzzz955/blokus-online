// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: auth.proto
// Protobuf C++ Version: 5.29.3

#include "auth.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace blokus {

inline constexpr RegisterRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        email_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        display_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        country_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        language_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        email_verification_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        referral_code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        client_version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        platform_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        terms_accepted_{false},
        privacy_accepted_{false},
        marketing_accepted_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterRequest::RegisterRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegisterRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterRequestDefaultTypeInternal() {}
  union {
    RegisterRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterRequestDefaultTypeInternal _RegisterRequest_default_instance_;

inline constexpr PasswordResetRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : email_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        captcha_response_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PasswordResetRequest::PasswordResetRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PasswordResetRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PasswordResetRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PasswordResetRequestDefaultTypeInternal() {}
  union {
    PasswordResetRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PasswordResetRequestDefaultTypeInternal _PasswordResetRequest_default_instance_;

inline constexpr PasswordChangeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : current_password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        new_password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reset_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        session_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PasswordChangeRequest::PasswordChangeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PasswordChangeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PasswordChangeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PasswordChangeRequestDefaultTypeInternal() {}
  union {
    PasswordChangeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PasswordChangeRequestDefaultTypeInternal _PasswordChangeRequest_default_instance_;

inline constexpr LogoutRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : session_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        logout_all_sessions_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LogoutRequest::LogoutRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LogoutRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogoutRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogoutRequestDefaultTypeInternal() {}
  union {
    LogoutRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogoutRequestDefaultTypeInternal _LogoutRequest_default_instance_;

inline constexpr EmailVerificationRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : verification_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        email_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EmailVerificationRequest::EmailVerificationRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EmailVerificationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmailVerificationRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmailVerificationRequestDefaultTypeInternal() {}
  union {
    EmailVerificationRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmailVerificationRequestDefaultTypeInternal _EmailVerificationRequest_default_instance_;

inline constexpr AuthRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        email_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        session_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        guest_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        client_version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        platform_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_agent_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        captcha_response_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        method_{static_cast< ::blokus::AuthMethod >(0)},
        remember_me_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AuthRequest::AuthRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AuthRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthRequestDefaultTypeInternal() {}
  union {
    AuthRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthRequestDefaultTypeInternal _AuthRequest_default_instance_;

inline constexpr SessionValidationRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        session_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        last_activity_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SessionValidationRequest::SessionValidationRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SessionValidationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SessionValidationRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SessionValidationRequestDefaultTypeInternal() {}
  union {
    SessionValidationRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SessionValidationRequestDefaultTypeInternal _SessionValidationRequest_default_instance_;

inline constexpr HeartbeatRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        client_time_{nullptr},
        sequence_number_{0u},
        cpu_usage_{0},
        memory_usage_mb_{0u},
        fps_{0u},
        is_window_focused_{false} {}

template <typename>
PROTOBUF_CONSTEXPR HeartbeatRequest::HeartbeatRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HeartbeatRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeartbeatRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeartbeatRequestDefaultTypeInternal() {}
  union {
    HeartbeatRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeartbeatRequestDefaultTypeInternal _HeartbeatRequest_default_instance_;

inline constexpr AccountStatusInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        violation_history_{},
        status_reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        appeal_url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_since_{nullptr},
        status_until_{nullptr},
        status_{static_cast< ::blokus::AccountStatus >(0)},
        warning_count_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AccountStatusInfo::AccountStatusInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AccountStatusInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AccountStatusInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AccountStatusInfoDefaultTypeInternal() {}
  union {
    AccountStatusInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AccountStatusInfoDefaultTypeInternal _AccountStatusInfo_default_instance_;

inline constexpr WelcomeMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        available_game_modes_{},
        daily_rewards_{},
        achievements_{},
        friend_online_{},
        system_notifications_{},
        motd_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_info_{nullptr},
        server_info_{nullptr},
        recommended_room_count_{0},
        rank_position_{0},
        total_players_{0},
        win_rate_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WelcomeMessage::WelcomeMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WelcomeMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WelcomeMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WelcomeMessageDefaultTypeInternal() {}
  union {
    WelcomeMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WelcomeMessageDefaultTypeInternal _WelcomeMessage_default_instance_;

inline constexpr SessionValidationResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        new_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{nullptr},
        expires_at_{nullptr},
        is_valid_{false},
        requires_renewal_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SessionValidationResponse::SessionValidationResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SessionValidationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SessionValidationResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SessionValidationResponseDefaultTypeInternal() {}
  union {
    SessionValidationResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SessionValidationResponseDefaultTypeInternal _SessionValidationResponse_default_instance_;

inline constexpr RegisterResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        validation_errors_{},
        conflicting_fields_{},
        user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        verification_email_sent_to_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        session_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{nullptr},
        token_expires_at_{nullptr},
        user_info_{nullptr},
        email_verification_required_{false} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterResponse::RegisterResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegisterResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterResponseDefaultTypeInternal() {}
  union {
    RegisterResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterResponseDefaultTypeInternal _RegisterResponse_default_instance_;

inline constexpr PasswordResetResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        masked_email_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{nullptr},
        email_sent_{false} {}

template <typename>
PROTOBUF_CONSTEXPR PasswordResetResponse::PasswordResetResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PasswordResetResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PasswordResetResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PasswordResetResponseDefaultTypeInternal() {}
  union {
    PasswordResetResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PasswordResetResponseDefaultTypeInternal _PasswordResetResponse_default_instance_;

inline constexpr PasswordChangeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{nullptr},
        requires_relogin_{false} {}

template <typename>
PROTOBUF_CONSTEXPR PasswordChangeResponse::PasswordChangeResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PasswordChangeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PasswordChangeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PasswordChangeResponseDefaultTypeInternal() {}
  union {
    PasswordChangeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PasswordChangeResponseDefaultTypeInternal _PasswordChangeResponse_default_instance_;

inline constexpr LogoutResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{nullptr},
        logged_out_at_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR LogoutResponse::LogoutResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LogoutResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogoutResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogoutResponseDefaultTypeInternal() {}
  union {
    LogoutResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogoutResponseDefaultTypeInternal _LogoutResponse_default_instance_;

inline constexpr HeartbeatResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        server_messages_{},
        update_url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        server_time_{nullptr},
        server_info_{nullptr},
        sequence_number_{0u},
        force_update_required_{false} {}

template <typename>
PROTOBUF_CONSTEXPR HeartbeatResponse::HeartbeatResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HeartbeatResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeartbeatResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeartbeatResponseDefaultTypeInternal() {}
  union {
    HeartbeatResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeartbeatResponseDefaultTypeInternal _HeartbeatResponse_default_instance_;

inline constexpr EmailVerificationResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rewards_{},
        result_{nullptr},
        verified_at_{nullptr},
        verified_{false} {}

template <typename>
PROTOBUF_CONSTEXPR EmailVerificationResponse::EmailVerificationResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EmailVerificationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmailVerificationResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmailVerificationResponseDefaultTypeInternal() {}
  union {
    EmailVerificationResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmailVerificationResponseDefaultTypeInternal _EmailVerificationResponse_default_instance_;

inline constexpr AuthResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        permissions_{},
        session_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        password_reset_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{nullptr},
        token_expires_at_{nullptr},
        user_info_{nullptr},
        server_info_{nullptr},
        consecutive_login_days_{0},
        is_first_login_{false},
        requires_captcha_{false},
        retry_after_seconds_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AuthResponse::AuthResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AuthResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthResponseDefaultTypeInternal() {}
  union {
    AuthResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthResponseDefaultTypeInternal _AuthResponse_default_instance_;
}  // namespace blokus
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_auth_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_auth_2eproto = nullptr;
const ::uint32_t
    TableStruct_auth_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::blokus::AuthRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::AuthRequest, _impl_.method_),
        PROTOBUF_FIELD_OFFSET(::blokus::AuthRequest, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::blokus::AuthRequest, _impl_.password_),
        PROTOBUF_FIELD_OFFSET(::blokus::AuthRequest, _impl_.email_),
        PROTOBUF_FIELD_OFFSET(::blokus::AuthRequest, _impl_.session_token_),
        PROTOBUF_FIELD_OFFSET(::blokus::AuthRequest, _impl_.guest_id_),
        PROTOBUF_FIELD_OFFSET(::blokus::AuthRequest, _impl_.client_version_),
        PROTOBUF_FIELD_OFFSET(::blokus::AuthRequest, _impl_.platform_),
        PROTOBUF_FIELD_OFFSET(::blokus::AuthRequest, _impl_.device_id_),
        PROTOBUF_FIELD_OFFSET(::blokus::AuthRequest, _impl_.user_agent_),
        PROTOBUF_FIELD_OFFSET(::blokus::AuthRequest, _impl_.remember_me_),
        PROTOBUF_FIELD_OFFSET(::blokus::AuthRequest, _impl_.captcha_response_),
        PROTOBUF_FIELD_OFFSET(::blokus::AuthResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::blokus::AuthResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::AuthResponse, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::blokus::AuthResponse, _impl_.session_token_),
        PROTOBUF_FIELD_OFFSET(::blokus::AuthResponse, _impl_.token_expires_at_),
        PROTOBUF_FIELD_OFFSET(::blokus::AuthResponse, _impl_.user_info_),
        PROTOBUF_FIELD_OFFSET(::blokus::AuthResponse, _impl_.permissions_),
        PROTOBUF_FIELD_OFFSET(::blokus::AuthResponse, _impl_.is_first_login_),
        PROTOBUF_FIELD_OFFSET(::blokus::AuthResponse, _impl_.consecutive_login_days_),
        PROTOBUF_FIELD_OFFSET(::blokus::AuthResponse, _impl_.server_info_),
        PROTOBUF_FIELD_OFFSET(::blokus::AuthResponse, _impl_.retry_after_seconds_),
        PROTOBUF_FIELD_OFFSET(::blokus::AuthResponse, _impl_.requires_captcha_),
        PROTOBUF_FIELD_OFFSET(::blokus::AuthResponse, _impl_.password_reset_token_),
        0,
        ~0u,
        1,
        2,
        ~0u,
        ~0u,
        ~0u,
        3,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::blokus::RegisterRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::RegisterRequest, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::blokus::RegisterRequest, _impl_.password_),
        PROTOBUF_FIELD_OFFSET(::blokus::RegisterRequest, _impl_.email_),
        PROTOBUF_FIELD_OFFSET(::blokus::RegisterRequest, _impl_.display_name_),
        PROTOBUF_FIELD_OFFSET(::blokus::RegisterRequest, _impl_.country_),
        PROTOBUF_FIELD_OFFSET(::blokus::RegisterRequest, _impl_.language_),
        PROTOBUF_FIELD_OFFSET(::blokus::RegisterRequest, _impl_.terms_accepted_),
        PROTOBUF_FIELD_OFFSET(::blokus::RegisterRequest, _impl_.privacy_accepted_),
        PROTOBUF_FIELD_OFFSET(::blokus::RegisterRequest, _impl_.marketing_accepted_),
        PROTOBUF_FIELD_OFFSET(::blokus::RegisterRequest, _impl_.email_verification_token_),
        PROTOBUF_FIELD_OFFSET(::blokus::RegisterRequest, _impl_.referral_code_),
        PROTOBUF_FIELD_OFFSET(::blokus::RegisterRequest, _impl_.client_version_),
        PROTOBUF_FIELD_OFFSET(::blokus::RegisterRequest, _impl_.platform_),
        PROTOBUF_FIELD_OFFSET(::blokus::RegisterResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::blokus::RegisterResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::RegisterResponse, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::blokus::RegisterResponse, _impl_.user_id_),
        PROTOBUF_FIELD_OFFSET(::blokus::RegisterResponse, _impl_.email_verification_required_),
        PROTOBUF_FIELD_OFFSET(::blokus::RegisterResponse, _impl_.verification_email_sent_to_),
        PROTOBUF_FIELD_OFFSET(::blokus::RegisterResponse, _impl_.session_token_),
        PROTOBUF_FIELD_OFFSET(::blokus::RegisterResponse, _impl_.token_expires_at_),
        PROTOBUF_FIELD_OFFSET(::blokus::RegisterResponse, _impl_.user_info_),
        PROTOBUF_FIELD_OFFSET(::blokus::RegisterResponse, _impl_.validation_errors_),
        PROTOBUF_FIELD_OFFSET(::blokus::RegisterResponse, _impl_.conflicting_fields_),
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        1,
        2,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::blokus::LogoutRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::LogoutRequest, _impl_.session_token_),
        PROTOBUF_FIELD_OFFSET(::blokus::LogoutRequest, _impl_.logout_all_sessions_),
        PROTOBUF_FIELD_OFFSET(::blokus::LogoutRequest, _impl_.reason_),
        PROTOBUF_FIELD_OFFSET(::blokus::LogoutResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::blokus::LogoutResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::LogoutResponse, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::blokus::LogoutResponse, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::blokus::LogoutResponse, _impl_.logged_out_at_),
        0,
        ~0u,
        1,
        PROTOBUF_FIELD_OFFSET(::blokus::HeartbeatRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::blokus::HeartbeatRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::HeartbeatRequest, _impl_.client_time_),
        PROTOBUF_FIELD_OFFSET(::blokus::HeartbeatRequest, _impl_.sequence_number_),
        PROTOBUF_FIELD_OFFSET(::blokus::HeartbeatRequest, _impl_.cpu_usage_),
        PROTOBUF_FIELD_OFFSET(::blokus::HeartbeatRequest, _impl_.memory_usage_mb_),
        PROTOBUF_FIELD_OFFSET(::blokus::HeartbeatRequest, _impl_.fps_),
        PROTOBUF_FIELD_OFFSET(::blokus::HeartbeatRequest, _impl_.is_window_focused_),
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::blokus::HeartbeatResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::blokus::HeartbeatResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::HeartbeatResponse, _impl_.server_time_),
        PROTOBUF_FIELD_OFFSET(::blokus::HeartbeatResponse, _impl_.sequence_number_),
        PROTOBUF_FIELD_OFFSET(::blokus::HeartbeatResponse, _impl_.server_info_),
        PROTOBUF_FIELD_OFFSET(::blokus::HeartbeatResponse, _impl_.force_update_required_),
        PROTOBUF_FIELD_OFFSET(::blokus::HeartbeatResponse, _impl_.update_url_),
        PROTOBUF_FIELD_OFFSET(::blokus::HeartbeatResponse, _impl_.server_messages_),
        0,
        ~0u,
        1,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::blokus::WelcomeMessage, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::blokus::WelcomeMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::WelcomeMessage, _impl_.user_info_),
        PROTOBUF_FIELD_OFFSET(::blokus::WelcomeMessage, _impl_.server_info_),
        PROTOBUF_FIELD_OFFSET(::blokus::WelcomeMessage, _impl_.available_game_modes_),
        PROTOBUF_FIELD_OFFSET(::blokus::WelcomeMessage, _impl_.recommended_room_count_),
        PROTOBUF_FIELD_OFFSET(::blokus::WelcomeMessage, _impl_.daily_rewards_),
        PROTOBUF_FIELD_OFFSET(::blokus::WelcomeMessage, _impl_.achievements_),
        PROTOBUF_FIELD_OFFSET(::blokus::WelcomeMessage, _impl_.friend_online_),
        PROTOBUF_FIELD_OFFSET(::blokus::WelcomeMessage, _impl_.system_notifications_),
        PROTOBUF_FIELD_OFFSET(::blokus::WelcomeMessage, _impl_.motd_),
        PROTOBUF_FIELD_OFFSET(::blokus::WelcomeMessage, _impl_.rank_position_),
        PROTOBUF_FIELD_OFFSET(::blokus::WelcomeMessage, _impl_.total_players_),
        PROTOBUF_FIELD_OFFSET(::blokus::WelcomeMessage, _impl_.win_rate_),
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::blokus::SessionValidationRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::blokus::SessionValidationRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::SessionValidationRequest, _impl_.session_token_),
        PROTOBUF_FIELD_OFFSET(::blokus::SessionValidationRequest, _impl_.last_activity_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::blokus::SessionValidationResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::blokus::SessionValidationResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::SessionValidationResponse, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::blokus::SessionValidationResponse, _impl_.is_valid_),
        PROTOBUF_FIELD_OFFSET(::blokus::SessionValidationResponse, _impl_.expires_at_),
        PROTOBUF_FIELD_OFFSET(::blokus::SessionValidationResponse, _impl_.requires_renewal_),
        PROTOBUF_FIELD_OFFSET(::blokus::SessionValidationResponse, _impl_.new_token_),
        0,
        ~0u,
        1,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::blokus::PasswordResetRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::PasswordResetRequest, _impl_.email_),
        PROTOBUF_FIELD_OFFSET(::blokus::PasswordResetRequest, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::blokus::PasswordResetRequest, _impl_.captcha_response_),
        PROTOBUF_FIELD_OFFSET(::blokus::PasswordResetResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::blokus::PasswordResetResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::PasswordResetResponse, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::blokus::PasswordResetResponse, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::blokus::PasswordResetResponse, _impl_.email_sent_),
        PROTOBUF_FIELD_OFFSET(::blokus::PasswordResetResponse, _impl_.masked_email_),
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::blokus::PasswordChangeRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::PasswordChangeRequest, _impl_.current_password_),
        PROTOBUF_FIELD_OFFSET(::blokus::PasswordChangeRequest, _impl_.new_password_),
        PROTOBUF_FIELD_OFFSET(::blokus::PasswordChangeRequest, _impl_.reset_token_),
        PROTOBUF_FIELD_OFFSET(::blokus::PasswordChangeRequest, _impl_.session_token_),
        PROTOBUF_FIELD_OFFSET(::blokus::PasswordChangeResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::blokus::PasswordChangeResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::PasswordChangeResponse, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::blokus::PasswordChangeResponse, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::blokus::PasswordChangeResponse, _impl_.requires_relogin_),
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::blokus::AccountStatusInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::blokus::AccountStatusInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::AccountStatusInfo, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::blokus::AccountStatusInfo, _impl_.status_reason_),
        PROTOBUF_FIELD_OFFSET(::blokus::AccountStatusInfo, _impl_.status_since_),
        PROTOBUF_FIELD_OFFSET(::blokus::AccountStatusInfo, _impl_.status_until_),
        PROTOBUF_FIELD_OFFSET(::blokus::AccountStatusInfo, _impl_.warning_count_),
        PROTOBUF_FIELD_OFFSET(::blokus::AccountStatusInfo, _impl_.violation_history_),
        PROTOBUF_FIELD_OFFSET(::blokus::AccountStatusInfo, _impl_.appeal_url_),
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::blokus::EmailVerificationRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::EmailVerificationRequest, _impl_.verification_token_),
        PROTOBUF_FIELD_OFFSET(::blokus::EmailVerificationRequest, _impl_.email_),
        PROTOBUF_FIELD_OFFSET(::blokus::EmailVerificationResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::blokus::EmailVerificationResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::EmailVerificationResponse, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::blokus::EmailVerificationResponse, _impl_.verified_),
        PROTOBUF_FIELD_OFFSET(::blokus::EmailVerificationResponse, _impl_.verified_at_),
        PROTOBUF_FIELD_OFFSET(::blokus::EmailVerificationResponse, _impl_.rewards_),
        0,
        ~0u,
        1,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::blokus::AuthRequest)},
        {20, 39, -1, sizeof(::blokus::AuthResponse)},
        {50, -1, -1, sizeof(::blokus::RegisterRequest)},
        {71, 88, -1, sizeof(::blokus::RegisterResponse)},
        {97, -1, -1, sizeof(::blokus::LogoutRequest)},
        {108, 119, -1, sizeof(::blokus::LogoutResponse)},
        {122, 136, -1, sizeof(::blokus::HeartbeatRequest)},
        {142, 156, -1, sizeof(::blokus::HeartbeatResponse)},
        {162, 182, -1, sizeof(::blokus::WelcomeMessage)},
        {194, 204, -1, sizeof(::blokus::SessionValidationRequest)},
        {206, 219, -1, sizeof(::blokus::SessionValidationResponse)},
        {224, -1, -1, sizeof(::blokus::PasswordResetRequest)},
        {235, 247, -1, sizeof(::blokus::PasswordResetResponse)},
        {251, -1, -1, sizeof(::blokus::PasswordChangeRequest)},
        {263, 274, -1, sizeof(::blokus::PasswordChangeResponse)},
        {277, 292, -1, sizeof(::blokus::AccountStatusInfo)},
        {299, -1, -1, sizeof(::blokus::EmailVerificationRequest)},
        {309, 321, -1, sizeof(::blokus::EmailVerificationResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::blokus::_AuthRequest_default_instance_._instance,
    &::blokus::_AuthResponse_default_instance_._instance,
    &::blokus::_RegisterRequest_default_instance_._instance,
    &::blokus::_RegisterResponse_default_instance_._instance,
    &::blokus::_LogoutRequest_default_instance_._instance,
    &::blokus::_LogoutResponse_default_instance_._instance,
    &::blokus::_HeartbeatRequest_default_instance_._instance,
    &::blokus::_HeartbeatResponse_default_instance_._instance,
    &::blokus::_WelcomeMessage_default_instance_._instance,
    &::blokus::_SessionValidationRequest_default_instance_._instance,
    &::blokus::_SessionValidationResponse_default_instance_._instance,
    &::blokus::_PasswordResetRequest_default_instance_._instance,
    &::blokus::_PasswordResetResponse_default_instance_._instance,
    &::blokus::_PasswordChangeRequest_default_instance_._instance,
    &::blokus::_PasswordChangeResponse_default_instance_._instance,
    &::blokus::_AccountStatusInfo_default_instance_._instance,
    &::blokus::_EmailVerificationRequest_default_instance_._instance,
    &::blokus::_EmailVerificationResponse_default_instance_._instance,
};
const char descriptor_table_protodef_auth_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\nauth.proto\022\006blokus\032\037google/protobuf/ti"
    "mestamp.proto\032\014common.proto\"\215\002\n\013AuthRequ"
    "est\022\"\n\006method\030\001 \001(\0162\022.blokus.AuthMethod\022"
    "\020\n\010username\030\002 \001(\t\022\020\n\010password\030\003 \001(\t\022\r\n\005e"
    "mail\030\004 \001(\t\022\025\n\rsession_token\030\005 \001(\t\022\020\n\010gue"
    "st_id\030\006 \001(\t\022\026\n\016client_version\030\n \001(\t\022\020\n\010p"
    "latform\030\013 \001(\t\022\021\n\tdevice_id\030\014 \001(\t\022\022\n\nuser"
    "_agent\030\r \001(\t\022\023\n\013remember_me\030\017 \001(\010\022\030\n\020cap"
    "tcha_response\030\020 \001(\t\"\353\002\n\014AuthResponse\022\036\n\006"
    "result\030\001 \001(\0132\016.blokus.Result\022\025\n\rsession_"
    "token\030\002 \001(\t\0224\n\020token_expires_at\030\003 \001(\0132\032."
    "google.protobuf.Timestamp\022#\n\tuser_info\030\004"
    " \001(\0132\020.blokus.UserInfo\022\023\n\013permissions\030\005 "
    "\003(\t\022\026\n\016is_first_login\030\006 \001(\010\022\036\n\026consecuti"
    "ve_login_days\030\007 \001(\005\022\'\n\013server_info\030\010 \001(\013"
    "2\022.blokus.ServerInfo\022\033\n\023retry_after_seco"
    "nds\030\n \001(\005\022\030\n\020requires_captcha\030\013 \001(\010\022\034\n\024p"
    "assword_reset_token\030\014 \001(\t\"\256\002\n\017RegisterRe"
    "quest\022\020\n\010username\030\001 \001(\t\022\020\n\010password\030\002 \001("
    "\t\022\r\n\005email\030\003 \001(\t\022\024\n\014display_name\030\004 \001(\t\022\017"
    "\n\007country\030\005 \001(\t\022\020\n\010language\030\006 \001(\t\022\026\n\016ter"
    "ms_accepted\030\n \001(\010\022\030\n\020privacy_accepted\030\013 "
    "\001(\010\022\032\n\022marketing_accepted\030\014 \001(\010\022 \n\030email"
    "_verification_token\030\017 \001(\t\022\025\n\rreferral_co"
    "de\030\020 \001(\t\022\026\n\016client_version\030\024 \001(\t\022\020\n\010plat"
    "form\030\025 \001(\t\"\265\002\n\020RegisterResponse\022\036\n\006resul"
    "t\030\001 \001(\0132\016.blokus.Result\022\017\n\007user_id\030\002 \001(\t"
    "\022#\n\033email_verification_required\030\003 \001(\010\022\"\n"
    "\032verification_email_sent_to\030\004 \001(\t\022\025\n\rses"
    "sion_token\030\005 \001(\t\0224\n\020token_expires_at\030\006 \001"
    "(\0132\032.google.protobuf.Timestamp\022#\n\tuser_i"
    "nfo\030\007 \001(\0132\020.blokus.UserInfo\022\031\n\021validatio"
    "n_errors\030\n \003(\t\022\032\n\022conflicting_fields\030\013 \003"
    "(\t\"S\n\rLogoutRequest\022\025\n\rsession_token\030\001 \001"
    "(\t\022\033\n\023logout_all_sessions\030\002 \001(\010\022\016\n\006reaso"
    "n\030\003 \001(\t\"t\n\016LogoutResponse\022\036\n\006result\030\001 \001("
    "\0132\016.blokus.Result\022\017\n\007message\030\002 \001(\t\0221\n\rlo"
    "gged_out_at\030\003 \001(\0132\032.google.protobuf.Time"
    "stamp\"\260\001\n\020HeartbeatRequest\022/\n\013client_tim"
    "e\030\001 \001(\0132\032.google.protobuf.Timestamp\022\027\n\017s"
    "equence_number\030\002 \001(\r\022\021\n\tcpu_usage\030\003 \001(\002\022"
    "\027\n\017memory_usage_mb\030\004 \001(\r\022\013\n\003fps\030\005 \001(\r\022\031\n"
    "\021is_window_focused\030\006 \001(\010\"\322\001\n\021HeartbeatRe"
    "sponse\022/\n\013server_time\030\001 \001(\0132\032.google.pro"
    "tobuf.Timestamp\022\027\n\017sequence_number\030\002 \001(\r"
    "\022\'\n\013server_info\030\003 \001(\0132\022.blokus.ServerInf"
    "o\022\035\n\025force_update_required\030\004 \001(\010\022\022\n\nupda"
    "te_url\030\005 \001(\t\022\027\n\017server_messages\030\006 \003(\t\"\314\002"
    "\n\016WelcomeMessage\022#\n\tuser_info\030\001 \001(\0132\020.bl"
    "okus.UserInfo\022\'\n\013server_info\030\002 \001(\0132\022.blo"
    "kus.ServerInfo\022\034\n\024available_game_modes\030\003"
    " \003(\t\022\036\n\026recommended_room_count\030\004 \001(\005\022\025\n\r"
    "daily_rewards\030\005 \003(\t\022\024\n\014achievements\030\006 \003("
    "\t\022\025\n\rfriend_online\030\007 \003(\t\022\034\n\024system_notif"
    "ications\030\n \003(\t\022\014\n\004motd\030\013 \001(\t\022\025\n\rrank_pos"
    "ition\030\017 \001(\005\022\025\n\rtotal_players\030\020 \001(\005\022\020\n\010wi"
    "n_rate\030\021 \001(\002\"d\n\030SessionValidationRequest"
    "\022\025\n\rsession_token\030\001 \001(\t\0221\n\rlast_activity"
    "\030\002 \001(\0132\032.google.protobuf.Timestamp\"\252\001\n\031S"
    "essionValidationResponse\022\036\n\006result\030\001 \001(\013"
    "2\016.blokus.Result\022\020\n\010is_valid\030\002 \001(\010\022.\n\nex"
    "pires_at\030\003 \001(\0132\032.google.protobuf.Timesta"
    "mp\022\030\n\020requires_renewal\030\004 \001(\010\022\021\n\tnew_toke"
    "n\030\005 \001(\t\"Q\n\024PasswordResetRequest\022\r\n\005email"
    "\030\001 \001(\t\022\020\n\010username\030\002 \001(\t\022\030\n\020captcha_resp"
    "onse\030\003 \001(\t\"r\n\025PasswordResetResponse\022\036\n\006r"
    "esult\030\001 \001(\0132\016.blokus.Result\022\017\n\007message\030\002"
    " \001(\t\022\022\n\nemail_sent\030\003 \001(\010\022\024\n\014masked_email"
    "\030\004 \001(\t\"s\n\025PasswordChangeRequest\022\030\n\020curre"
    "nt_password\030\001 \001(\t\022\024\n\014new_password\030\002 \001(\t\022"
    "\023\n\013reset_token\030\003 \001(\t\022\025\n\rsession_token\030\004 "
    "\001(\t\"c\n\026PasswordChangeResponse\022\036\n\006result\030"
    "\001 \001(\0132\016.blokus.Result\022\017\n\007message\030\002 \001(\t\022\030"
    "\n\020requires_relogin\030\003 \001(\010\"\373\001\n\021AccountStat"
    "usInfo\022%\n\006status\030\001 \001(\0162\025.blokus.AccountS"
    "tatus\022\025\n\rstatus_reason\030\002 \001(\t\0220\n\014status_s"
    "ince\030\003 \001(\0132\032.google.protobuf.Timestamp\0220"
    "\n\014status_until\030\004 \001(\0132\032.google.protobuf.T"
    "imestamp\022\025\n\rwarning_count\030\005 \001(\005\022\031\n\021viola"
    "tion_history\030\006 \003(\t\022\022\n\nappeal_url\030\007 \001(\t\"E"
    "\n\030EmailVerificationRequest\022\032\n\022verificati"
    "on_token\030\001 \001(\t\022\r\n\005email\030\002 \001(\t\"\217\001\n\031EmailV"
    "erificationResponse\022\036\n\006result\030\001 \001(\0132\016.bl"
    "okus.Result\022\020\n\010verified\030\002 \001(\010\022/\n\013verifie"
    "d_at\030\003 \001(\0132\032.google.protobuf.Timestamp\022\017"
    "\n\007rewards\030\004 \003(\t*}\n\nAuthMethod\022!\n\035AUTH_ME"
    "THOD_USERNAME_PASSWORD\020\000\022\036\n\032AUTH_METHOD_"
    "EMAIL_PASSWORD\020\001\022\025\n\021AUTH_METHOD_GUEST\020\002\022"
    "\025\n\021AUTH_METHOD_TOKEN\020\003*\250\001\n\rAccountStatus"
    "\022\031\n\025ACCOUNT_STATUS_ACTIVE\020\000\022\034\n\030ACCOUNT_S"
    "TATUS_SUSPENDED\020\001\022\031\n\025ACCOUNT_STATUS_BANN"
    "ED\020\002\022\'\n#ACCOUNT_STATUS_PENDING_VERIFICAT"
    "ION\020\003\022\032\n\026ACCOUNT_STATUS_DELETED\020\004b\006proto"
    "3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_auth_2eproto_deps[2] =
    {
        &::descriptor_table_common_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_auth_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_auth_2eproto = {
    false,
    false,
    3721,
    descriptor_table_protodef_auth_2eproto,
    "auth.proto",
    &descriptor_table_auth_2eproto_once,
    descriptor_table_auth_2eproto_deps,
    2,
    18,
    schemas,
    file_default_instances,
    TableStruct_auth_2eproto::offsets,
    file_level_enum_descriptors_auth_2eproto,
    file_level_service_descriptors_auth_2eproto,
};
namespace blokus {
const ::google::protobuf::EnumDescriptor* AuthMethod_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_auth_2eproto);
  return file_level_enum_descriptors_auth_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t AuthMethod_internal_data_[] = {
    262144u, 0u, };
bool AuthMethod_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* AccountStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_auth_2eproto);
  return file_level_enum_descriptors_auth_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t AccountStatus_internal_data_[] = {
    327680u, 0u, };
bool AccountStatus_IsValid(int value) {
  return 0 <= value && value <= 4;
}
// ===================================================================

class AuthRequest::_Internal {
 public:
};

AuthRequest::AuthRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.AuthRequest)
}
inline PROTOBUF_NDEBUG_INLINE AuthRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::AuthRequest& from_msg)
      : username_(arena, from.username_),
        password_(arena, from.password_),
        email_(arena, from.email_),
        session_token_(arena, from.session_token_),
        guest_id_(arena, from.guest_id_),
        client_version_(arena, from.client_version_),
        platform_(arena, from.platform_),
        device_id_(arena, from.device_id_),
        user_agent_(arena, from.user_agent_),
        captcha_response_(arena, from.captcha_response_),
        _cached_size_{0} {}

AuthRequest::AuthRequest(
    ::google::protobuf::Arena* arena,
    const AuthRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AuthRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, method_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, method_),
           offsetof(Impl_, remember_me_) -
               offsetof(Impl_, method_) +
               sizeof(Impl_::remember_me_));

  // @@protoc_insertion_point(copy_constructor:blokus.AuthRequest)
}
inline PROTOBUF_NDEBUG_INLINE AuthRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : username_(arena),
        password_(arena),
        email_(arena),
        session_token_(arena),
        guest_id_(arena),
        client_version_(arena),
        platform_(arena),
        device_id_(arena),
        user_agent_(arena),
        captcha_response_(arena),
        _cached_size_{0} {}

inline void AuthRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, method_),
           0,
           offsetof(Impl_, remember_me_) -
               offsetof(Impl_, method_) +
               sizeof(Impl_::remember_me_));
}
AuthRequest::~AuthRequest() {
  // @@protoc_insertion_point(destructor:blokus.AuthRequest)
  SharedDtor(*this);
}
inline void AuthRequest::SharedDtor(MessageLite& self) {
  AuthRequest& this_ = static_cast<AuthRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.username_.Destroy();
  this_._impl_.password_.Destroy();
  this_._impl_.email_.Destroy();
  this_._impl_.session_token_.Destroy();
  this_._impl_.guest_id_.Destroy();
  this_._impl_.client_version_.Destroy();
  this_._impl_.platform_.Destroy();
  this_._impl_.device_id_.Destroy();
  this_._impl_.user_agent_.Destroy();
  this_._impl_.captcha_response_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AuthRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AuthRequest(arena);
}
constexpr auto AuthRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AuthRequest),
                                            alignof(AuthRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AuthRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AuthRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AuthRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AuthRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AuthRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AuthRequest>(), &AuthRequest::ByteSizeLong,
            &AuthRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AuthRequest, _impl_._cached_size_),
        false,
    },
    &AuthRequest::kDescriptorMethods,
    &descriptor_table_auth_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AuthRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 0, 134, 2> AuthRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    16, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294910400,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::AuthRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string captcha_response = 16;
    {::_pbi::TcParser::FastUS2,
     {386, 63, 0, PROTOBUF_FIELD_OFFSET(AuthRequest, _impl_.captcha_response_)}},
    // .blokus.AuthMethod method = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AuthRequest, _impl_.method_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AuthRequest, _impl_.method_)}},
    // string username = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AuthRequest, _impl_.username_)}},
    // string password = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(AuthRequest, _impl_.password_)}},
    // string email = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(AuthRequest, _impl_.email_)}},
    // string session_token = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(AuthRequest, _impl_.session_token_)}},
    // string guest_id = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(AuthRequest, _impl_.guest_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // string client_version = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(AuthRequest, _impl_.client_version_)}},
    // string platform = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(AuthRequest, _impl_.platform_)}},
    // string device_id = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(AuthRequest, _impl_.device_id_)}},
    // string user_agent = 13;
    {::_pbi::TcParser::FastUS1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(AuthRequest, _impl_.user_agent_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool remember_me = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AuthRequest, _impl_.remember_me_), 63>(),
     {120, 63, 0, PROTOBUF_FIELD_OFFSET(AuthRequest, _impl_.remember_me_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .blokus.AuthMethod method = 1;
    {PROTOBUF_FIELD_OFFSET(AuthRequest, _impl_.method_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string username = 2;
    {PROTOBUF_FIELD_OFFSET(AuthRequest, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string password = 3;
    {PROTOBUF_FIELD_OFFSET(AuthRequest, _impl_.password_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string email = 4;
    {PROTOBUF_FIELD_OFFSET(AuthRequest, _impl_.email_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string session_token = 5;
    {PROTOBUF_FIELD_OFFSET(AuthRequest, _impl_.session_token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string guest_id = 6;
    {PROTOBUF_FIELD_OFFSET(AuthRequest, _impl_.guest_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string client_version = 10;
    {PROTOBUF_FIELD_OFFSET(AuthRequest, _impl_.client_version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string platform = 11;
    {PROTOBUF_FIELD_OFFSET(AuthRequest, _impl_.platform_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_id = 12;
    {PROTOBUF_FIELD_OFFSET(AuthRequest, _impl_.device_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string user_agent = 13;
    {PROTOBUF_FIELD_OFFSET(AuthRequest, _impl_.user_agent_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool remember_me = 15;
    {PROTOBUF_FIELD_OFFSET(AuthRequest, _impl_.remember_me_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string captcha_response = 16;
    {PROTOBUF_FIELD_OFFSET(AuthRequest, _impl_.captcha_response_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\22\0\10\10\5\15\10\16\10\11\12\0\20\0\0\0"
    "blokus.AuthRequest"
    "username"
    "password"
    "email"
    "session_token"
    "guest_id"
    "client_version"
    "platform"
    "device_id"
    "user_agent"
    "captcha_response"
  }},
};

PROTOBUF_NOINLINE void AuthRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.AuthRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  _impl_.email_.ClearToEmpty();
  _impl_.session_token_.ClearToEmpty();
  _impl_.guest_id_.ClearToEmpty();
  _impl_.client_version_.ClearToEmpty();
  _impl_.platform_.ClearToEmpty();
  _impl_.device_id_.ClearToEmpty();
  _impl_.user_agent_.ClearToEmpty();
  _impl_.captcha_response_.ClearToEmpty();
  ::memset(&_impl_.method_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.remember_me_) -
      reinterpret_cast<char*>(&_impl_.method_)) + sizeof(_impl_.remember_me_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AuthRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AuthRequest& this_ = static_cast<const AuthRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AuthRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AuthRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.AuthRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .blokus.AuthMethod method = 1;
          if (this_._internal_method() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_method(), target);
          }

          // string username = 2;
          if (!this_._internal_username().empty()) {
            const std::string& _s = this_._internal_username();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.AuthRequest.username");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string password = 3;
          if (!this_._internal_password().empty()) {
            const std::string& _s = this_._internal_password();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.AuthRequest.password");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string email = 4;
          if (!this_._internal_email().empty()) {
            const std::string& _s = this_._internal_email();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.AuthRequest.email");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string session_token = 5;
          if (!this_._internal_session_token().empty()) {
            const std::string& _s = this_._internal_session_token();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.AuthRequest.session_token");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string guest_id = 6;
          if (!this_._internal_guest_id().empty()) {
            const std::string& _s = this_._internal_guest_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.AuthRequest.guest_id");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string client_version = 10;
          if (!this_._internal_client_version().empty()) {
            const std::string& _s = this_._internal_client_version();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.AuthRequest.client_version");
            target = stream->WriteStringMaybeAliased(10, _s, target);
          }

          // string platform = 11;
          if (!this_._internal_platform().empty()) {
            const std::string& _s = this_._internal_platform();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.AuthRequest.platform");
            target = stream->WriteStringMaybeAliased(11, _s, target);
          }

          // string device_id = 12;
          if (!this_._internal_device_id().empty()) {
            const std::string& _s = this_._internal_device_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.AuthRequest.device_id");
            target = stream->WriteStringMaybeAliased(12, _s, target);
          }

          // string user_agent = 13;
          if (!this_._internal_user_agent().empty()) {
            const std::string& _s = this_._internal_user_agent();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.AuthRequest.user_agent");
            target = stream->WriteStringMaybeAliased(13, _s, target);
          }

          // bool remember_me = 15;
          if (this_._internal_remember_me() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                15, this_._internal_remember_me(), target);
          }

          // string captcha_response = 16;
          if (!this_._internal_captcha_response().empty()) {
            const std::string& _s = this_._internal_captcha_response();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.AuthRequest.captcha_response");
            target = stream->WriteStringMaybeAliased(16, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.AuthRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AuthRequest::ByteSizeLong(const MessageLite& base) {
          const AuthRequest& this_ = static_cast<const AuthRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AuthRequest::ByteSizeLong() const {
          const AuthRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.AuthRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string username = 2;
            if (!this_._internal_username().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_username());
            }
            // string password = 3;
            if (!this_._internal_password().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_password());
            }
            // string email = 4;
            if (!this_._internal_email().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_email());
            }
            // string session_token = 5;
            if (!this_._internal_session_token().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_session_token());
            }
            // string guest_id = 6;
            if (!this_._internal_guest_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_guest_id());
            }
            // string client_version = 10;
            if (!this_._internal_client_version().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_client_version());
            }
            // string platform = 11;
            if (!this_._internal_platform().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_platform());
            }
            // string device_id = 12;
            if (!this_._internal_device_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_id());
            }
            // string user_agent = 13;
            if (!this_._internal_user_agent().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_user_agent());
            }
            // string captcha_response = 16;
            if (!this_._internal_captcha_response().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_captcha_response());
            }
            // .blokus.AuthMethod method = 1;
            if (this_._internal_method() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_method());
            }
            // bool remember_me = 15;
            if (this_._internal_remember_me() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AuthRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AuthRequest*>(&to_msg);
  auto& from = static_cast<const AuthRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.AuthRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  if (!from._internal_email().empty()) {
    _this->_internal_set_email(from._internal_email());
  }
  if (!from._internal_session_token().empty()) {
    _this->_internal_set_session_token(from._internal_session_token());
  }
  if (!from._internal_guest_id().empty()) {
    _this->_internal_set_guest_id(from._internal_guest_id());
  }
  if (!from._internal_client_version().empty()) {
    _this->_internal_set_client_version(from._internal_client_version());
  }
  if (!from._internal_platform().empty()) {
    _this->_internal_set_platform(from._internal_platform());
  }
  if (!from._internal_device_id().empty()) {
    _this->_internal_set_device_id(from._internal_device_id());
  }
  if (!from._internal_user_agent().empty()) {
    _this->_internal_set_user_agent(from._internal_user_agent());
  }
  if (!from._internal_captcha_response().empty()) {
    _this->_internal_set_captcha_response(from._internal_captcha_response());
  }
  if (from._internal_method() != 0) {
    _this->_impl_.method_ = from._impl_.method_;
  }
  if (from._internal_remember_me() != 0) {
    _this->_impl_.remember_me_ = from._impl_.remember_me_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AuthRequest::CopyFrom(const AuthRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.AuthRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AuthRequest::InternalSwap(AuthRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, &other->_impl_.password_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.email_, &other->_impl_.email_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_token_, &other->_impl_.session_token_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.guest_id_, &other->_impl_.guest_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_version_, &other->_impl_.client_version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.platform_, &other->_impl_.platform_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_id_, &other->_impl_.device_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_agent_, &other->_impl_.user_agent_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.captcha_response_, &other->_impl_.captcha_response_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AuthRequest, _impl_.remember_me_)
      + sizeof(AuthRequest::_impl_.remember_me_)
      - PROTOBUF_FIELD_OFFSET(AuthRequest, _impl_.method_)>(
          reinterpret_cast<char*>(&_impl_.method_),
          reinterpret_cast<char*>(&other->_impl_.method_));
}

::google::protobuf::Metadata AuthRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AuthResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AuthResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_._has_bits_);
};

void AuthResponse::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.result_ != nullptr) _impl_.result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void AuthResponse::clear_token_expires_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.token_expires_at_ != nullptr) _impl_.token_expires_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void AuthResponse::clear_user_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.user_info_ != nullptr) _impl_.user_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void AuthResponse::clear_server_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.server_info_ != nullptr) _impl_.server_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
AuthResponse::AuthResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.AuthResponse)
}
inline PROTOBUF_NDEBUG_INLINE AuthResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::AuthResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        permissions_{visibility, arena, from.permissions_},
        session_token_(arena, from.session_token_),
        password_reset_token_(arena, from.password_reset_token_) {}

AuthResponse::AuthResponse(
    ::google::protobuf::Arena* arena,
    const AuthResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AuthResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::blokus::Result>(
                              arena, *from._impl_.result_)
                        : nullptr;
  _impl_.token_expires_at_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.token_expires_at_)
                        : nullptr;
  _impl_.user_info_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::blokus::UserInfo>(
                              arena, *from._impl_.user_info_)
                        : nullptr;
  _impl_.server_info_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::blokus::ServerInfo>(
                              arena, *from._impl_.server_info_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, consecutive_login_days_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, consecutive_login_days_),
           offsetof(Impl_, retry_after_seconds_) -
               offsetof(Impl_, consecutive_login_days_) +
               sizeof(Impl_::retry_after_seconds_));

  // @@protoc_insertion_point(copy_constructor:blokus.AuthResponse)
}
inline PROTOBUF_NDEBUG_INLINE AuthResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        permissions_{visibility, arena},
        session_token_(arena),
        password_reset_token_(arena) {}

inline void AuthResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, result_),
           0,
           offsetof(Impl_, retry_after_seconds_) -
               offsetof(Impl_, result_) +
               sizeof(Impl_::retry_after_seconds_));
}
AuthResponse::~AuthResponse() {
  // @@protoc_insertion_point(destructor:blokus.AuthResponse)
  SharedDtor(*this);
}
inline void AuthResponse::SharedDtor(MessageLite& self) {
  AuthResponse& this_ = static_cast<AuthResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.session_token_.Destroy();
  this_._impl_.password_reset_token_.Destroy();
  delete this_._impl_.result_;
  delete this_._impl_.token_expires_at_;
  delete this_._impl_.user_info_;
  delete this_._impl_.server_info_;
  this_._impl_.~Impl_();
}

inline void* AuthResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AuthResponse(arena);
}
constexpr auto AuthResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.permissions_) +
          decltype(AuthResponse::_impl_.permissions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(AuthResponse), alignof(AuthResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AuthResponse::PlacementNew_,
                                 sizeof(AuthResponse),
                                 alignof(AuthResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AuthResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AuthResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AuthResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AuthResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AuthResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AuthResponse>(), &AuthResponse::ByteSizeLong,
            &AuthResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_._cached_size_),
        false,
    },
    &AuthResponse::kDescriptorMethods,
    &descriptor_table_auth_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AuthResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 4, 80, 2> AuthResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_._has_bits_),
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963456,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::AuthResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .blokus.Result result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.result_)}},
    // string session_token = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.session_token_)}},
    // .google.protobuf.Timestamp token_expires_at = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.token_expires_at_)}},
    // .blokus.UserInfo user_info = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 2, PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.user_info_)}},
    // repeated string permissions = 5;
    {::_pbi::TcParser::FastUR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.permissions_)}},
    // bool is_first_login = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AuthResponse, _impl_.is_first_login_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.is_first_login_)}},
    // int32 consecutive_login_days = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AuthResponse, _impl_.consecutive_login_days_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.consecutive_login_days_)}},
    // .blokus.ServerInfo server_info = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 3, 3, PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.server_info_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // int32 retry_after_seconds = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AuthResponse, _impl_.retry_after_seconds_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.retry_after_seconds_)}},
    // bool requires_captcha = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AuthResponse, _impl_.requires_captcha_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.requires_captcha_)}},
    // string password_reset_token = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.password_reset_token_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .blokus.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string session_token = 2;
    {PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.session_token_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp token_expires_at = 3;
    {PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.token_expires_at_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .blokus.UserInfo user_info = 4;
    {PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.user_info_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string permissions = 5;
    {PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.permissions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // bool is_first_login = 6;
    {PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.is_first_login_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 consecutive_login_days = 7;
    {PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.consecutive_login_days_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .blokus.ServerInfo server_info = 8;
    {PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.server_info_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 retry_after_seconds = 10;
    {PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.retry_after_seconds_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool requires_captcha = 11;
    {PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.requires_captcha_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string password_reset_token = 12;
    {PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.password_reset_token_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::blokus::Result>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::blokus::UserInfo>()},
    {::_pbi::TcParser::GetTable<::blokus::ServerInfo>()},
  }}, {{
    "\23\0\15\0\0\13\0\0\0\0\0\24\0\0\0\0"
    "blokus.AuthResponse"
    "session_token"
    "permissions"
    "password_reset_token"
  }},
};

PROTOBUF_NOINLINE void AuthResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.AuthResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.permissions_.Clear();
  _impl_.session_token_.ClearToEmpty();
  _impl_.password_reset_token_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.result_ != nullptr);
      _impl_.result_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.token_expires_at_ != nullptr);
      _impl_.token_expires_at_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.user_info_ != nullptr);
      _impl_.user_info_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.server_info_ != nullptr);
      _impl_.server_info_->Clear();
    }
  }
  ::memset(&_impl_.consecutive_login_days_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.retry_after_seconds_) -
      reinterpret_cast<char*>(&_impl_.consecutive_login_days_)) + sizeof(_impl_.retry_after_seconds_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AuthResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AuthResponse& this_ = static_cast<const AuthResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AuthResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AuthResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.AuthResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .blokus.Result result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.result_, this_._impl_.result_->GetCachedSize(), target,
                stream);
          }

          // string session_token = 2;
          if (!this_._internal_session_token().empty()) {
            const std::string& _s = this_._internal_session_token();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.AuthResponse.session_token");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // .google.protobuf.Timestamp token_expires_at = 3;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.token_expires_at_, this_._impl_.token_expires_at_->GetCachedSize(), target,
                stream);
          }

          // .blokus.UserInfo user_info = 4;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.user_info_, this_._impl_.user_info_->GetCachedSize(), target,
                stream);
          }

          // repeated string permissions = 5;
          for (int i = 0, n = this_._internal_permissions_size(); i < n; ++i) {
            const auto& s = this_._internal_permissions().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.AuthResponse.permissions");
            target = stream->WriteString(5, s, target);
          }

          // bool is_first_login = 6;
          if (this_._internal_is_first_login() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_is_first_login(), target);
          }

          // int32 consecutive_login_days = 7;
          if (this_._internal_consecutive_login_days() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<7>(
                    stream, this_._internal_consecutive_login_days(), target);
          }

          // .blokus.ServerInfo server_info = 8;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.server_info_, this_._impl_.server_info_->GetCachedSize(), target,
                stream);
          }

          // int32 retry_after_seconds = 10;
          if (this_._internal_retry_after_seconds() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<10>(
                    stream, this_._internal_retry_after_seconds(), target);
          }

          // bool requires_captcha = 11;
          if (this_._internal_requires_captcha() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                11, this_._internal_requires_captcha(), target);
          }

          // string password_reset_token = 12;
          if (!this_._internal_password_reset_token().empty()) {
            const std::string& _s = this_._internal_password_reset_token();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.AuthResponse.password_reset_token");
            target = stream->WriteStringMaybeAliased(12, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.AuthResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AuthResponse::ByteSizeLong(const MessageLite& base) {
          const AuthResponse& this_ = static_cast<const AuthResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AuthResponse::ByteSizeLong() const {
          const AuthResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.AuthResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string permissions = 5;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_permissions().size());
              for (int i = 0, n = this_._internal_permissions().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_permissions().Get(i));
              }
            }
          }
           {
            // string session_token = 2;
            if (!this_._internal_session_token().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_session_token());
            }
            // string password_reset_token = 12;
            if (!this_._internal_password_reset_token().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_password_reset_token());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000000fu) {
            // .blokus.Result result = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.result_);
            }
            // .google.protobuf.Timestamp token_expires_at = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.token_expires_at_);
            }
            // .blokus.UserInfo user_info = 4;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.user_info_);
            }
            // .blokus.ServerInfo server_info = 8;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.server_info_);
            }
          }
           {
            // int32 consecutive_login_days = 7;
            if (this_._internal_consecutive_login_days() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_consecutive_login_days());
            }
            // bool is_first_login = 6;
            if (this_._internal_is_first_login() != 0) {
              total_size += 2;
            }
            // bool requires_captcha = 11;
            if (this_._internal_requires_captcha() != 0) {
              total_size += 2;
            }
            // int32 retry_after_seconds = 10;
            if (this_._internal_retry_after_seconds() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_retry_after_seconds());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AuthResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AuthResponse*>(&to_msg);
  auto& from = static_cast<const AuthResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.AuthResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_permissions()->MergeFrom(from._internal_permissions());
  if (!from._internal_session_token().empty()) {
    _this->_internal_set_session_token(from._internal_session_token());
  }
  if (!from._internal_password_reset_token().empty()) {
    _this->_internal_set_password_reset_token(from._internal_password_reset_token());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.result_ != nullptr);
      if (_this->_impl_.result_ == nullptr) {
        _this->_impl_.result_ =
            ::google::protobuf::Message::CopyConstruct<::blokus::Result>(arena, *from._impl_.result_);
      } else {
        _this->_impl_.result_->MergeFrom(*from._impl_.result_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.token_expires_at_ != nullptr);
      if (_this->_impl_.token_expires_at_ == nullptr) {
        _this->_impl_.token_expires_at_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.token_expires_at_);
      } else {
        _this->_impl_.token_expires_at_->MergeFrom(*from._impl_.token_expires_at_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.user_info_ != nullptr);
      if (_this->_impl_.user_info_ == nullptr) {
        _this->_impl_.user_info_ =
            ::google::protobuf::Message::CopyConstruct<::blokus::UserInfo>(arena, *from._impl_.user_info_);
      } else {
        _this->_impl_.user_info_->MergeFrom(*from._impl_.user_info_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.server_info_ != nullptr);
      if (_this->_impl_.server_info_ == nullptr) {
        _this->_impl_.server_info_ =
            ::google::protobuf::Message::CopyConstruct<::blokus::ServerInfo>(arena, *from._impl_.server_info_);
      } else {
        _this->_impl_.server_info_->MergeFrom(*from._impl_.server_info_);
      }
    }
  }
  if (from._internal_consecutive_login_days() != 0) {
    _this->_impl_.consecutive_login_days_ = from._impl_.consecutive_login_days_;
  }
  if (from._internal_is_first_login() != 0) {
    _this->_impl_.is_first_login_ = from._impl_.is_first_login_;
  }
  if (from._internal_requires_captcha() != 0) {
    _this->_impl_.requires_captcha_ = from._impl_.requires_captcha_;
  }
  if (from._internal_retry_after_seconds() != 0) {
    _this->_impl_.retry_after_seconds_ = from._impl_.retry_after_seconds_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AuthResponse::CopyFrom(const AuthResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.AuthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AuthResponse::InternalSwap(AuthResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.permissions_.InternalSwap(&other->_impl_.permissions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_token_, &other->_impl_.session_token_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_reset_token_, &other->_impl_.password_reset_token_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.retry_after_seconds_)
      + sizeof(AuthResponse::_impl_.retry_after_seconds_)
      - PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::google::protobuf::Metadata AuthResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegisterRequest::_Internal {
 public:
};

RegisterRequest::RegisterRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.RegisterRequest)
}
inline PROTOBUF_NDEBUG_INLINE RegisterRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::RegisterRequest& from_msg)
      : username_(arena, from.username_),
        password_(arena, from.password_),
        email_(arena, from.email_),
        display_name_(arena, from.display_name_),
        country_(arena, from.country_),
        language_(arena, from.language_),
        email_verification_token_(arena, from.email_verification_token_),
        referral_code_(arena, from.referral_code_),
        client_version_(arena, from.client_version_),
        platform_(arena, from.platform_),
        _cached_size_{0} {}

RegisterRequest::RegisterRequest(
    ::google::protobuf::Arena* arena,
    const RegisterRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegisterRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, terms_accepted_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, terms_accepted_),
           offsetof(Impl_, marketing_accepted_) -
               offsetof(Impl_, terms_accepted_) +
               sizeof(Impl_::marketing_accepted_));

  // @@protoc_insertion_point(copy_constructor:blokus.RegisterRequest)
}
inline PROTOBUF_NDEBUG_INLINE RegisterRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : username_(arena),
        password_(arena),
        email_(arena),
        display_name_(arena),
        country_(arena),
        language_(arena),
        email_verification_token_(arena),
        referral_code_(arena),
        client_version_(arena),
        platform_(arena),
        _cached_size_{0} {}

inline void RegisterRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, terms_accepted_),
           0,
           offsetof(Impl_, marketing_accepted_) -
               offsetof(Impl_, terms_accepted_) +
               sizeof(Impl_::marketing_accepted_));
}
RegisterRequest::~RegisterRequest() {
  // @@protoc_insertion_point(destructor:blokus.RegisterRequest)
  SharedDtor(*this);
}
inline void RegisterRequest::SharedDtor(MessageLite& self) {
  RegisterRequest& this_ = static_cast<RegisterRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.username_.Destroy();
  this_._impl_.password_.Destroy();
  this_._impl_.email_.Destroy();
  this_._impl_.display_name_.Destroy();
  this_._impl_.country_.Destroy();
  this_._impl_.language_.Destroy();
  this_._impl_.email_verification_token_.Destroy();
  this_._impl_.referral_code_.Destroy();
  this_._impl_.client_version_.Destroy();
  this_._impl_.platform_.Destroy();
  this_._impl_.~Impl_();
}

inline void* RegisterRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RegisterRequest(arena);
}
constexpr auto RegisterRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RegisterRequest),
                                            alignof(RegisterRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RegisterRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RegisterRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RegisterRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RegisterRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RegisterRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RegisterRequest>(), &RegisterRequest::ByteSizeLong,
            &RegisterRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_._cached_size_),
        false,
    },
    &RegisterRequest::kDescriptorMethods,
    &descriptor_table_auth_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RegisterRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 0, 146, 2> RegisterRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    21, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4293341632,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::RegisterRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string referral_code = 16;
    {::_pbi::TcParser::FastUS2,
     {386, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.referral_code_)}},
    // string username = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.username_)}},
    // string password = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.password_)}},
    // string email = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.email_)}},
    // string display_name = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.display_name_)}},
    // string country = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.country_)}},
    // string language = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.language_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool terms_accepted = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RegisterRequest, _impl_.terms_accepted_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.terms_accepted_)}},
    // bool privacy_accepted = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RegisterRequest, _impl_.privacy_accepted_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.privacy_accepted_)}},
    // bool marketing_accepted = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RegisterRequest, _impl_.marketing_accepted_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.marketing_accepted_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // string email_verification_token = 15;
    {::_pbi::TcParser::FastUS1,
     {122, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.email_verification_token_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string username = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string password = 2;
    {PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.password_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string email = 3;
    {PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.email_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string display_name = 4;
    {PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.display_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string country = 5;
    {PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.country_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string language = 6;
    {PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.language_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool terms_accepted = 10;
    {PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.terms_accepted_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool privacy_accepted = 11;
    {PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.privacy_accepted_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool marketing_accepted = 12;
    {PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.marketing_accepted_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string email_verification_token = 15;
    {PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.email_verification_token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string referral_code = 16;
    {PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.referral_code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string client_version = 20;
    {PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.client_version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string platform = 21;
    {PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.platform_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\26\10\10\5\14\7\10\0\0\0\30\15\16\10\0\0"
    "blokus.RegisterRequest"
    "username"
    "password"
    "email"
    "display_name"
    "country"
    "language"
    "email_verification_token"
    "referral_code"
    "client_version"
    "platform"
  }},
};

PROTOBUF_NOINLINE void RegisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.RegisterRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  _impl_.email_.ClearToEmpty();
  _impl_.display_name_.ClearToEmpty();
  _impl_.country_.ClearToEmpty();
  _impl_.language_.ClearToEmpty();
  _impl_.email_verification_token_.ClearToEmpty();
  _impl_.referral_code_.ClearToEmpty();
  _impl_.client_version_.ClearToEmpty();
  _impl_.platform_.ClearToEmpty();
  ::memset(&_impl_.terms_accepted_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.marketing_accepted_) -
      reinterpret_cast<char*>(&_impl_.terms_accepted_)) + sizeof(_impl_.marketing_accepted_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RegisterRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RegisterRequest& this_ = static_cast<const RegisterRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RegisterRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RegisterRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.RegisterRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string username = 1;
          if (!this_._internal_username().empty()) {
            const std::string& _s = this_._internal_username();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.RegisterRequest.username");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string password = 2;
          if (!this_._internal_password().empty()) {
            const std::string& _s = this_._internal_password();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.RegisterRequest.password");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string email = 3;
          if (!this_._internal_email().empty()) {
            const std::string& _s = this_._internal_email();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.RegisterRequest.email");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string display_name = 4;
          if (!this_._internal_display_name().empty()) {
            const std::string& _s = this_._internal_display_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.RegisterRequest.display_name");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string country = 5;
          if (!this_._internal_country().empty()) {
            const std::string& _s = this_._internal_country();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.RegisterRequest.country");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string language = 6;
          if (!this_._internal_language().empty()) {
            const std::string& _s = this_._internal_language();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.RegisterRequest.language");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // bool terms_accepted = 10;
          if (this_._internal_terms_accepted() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                10, this_._internal_terms_accepted(), target);
          }

          // bool privacy_accepted = 11;
          if (this_._internal_privacy_accepted() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                11, this_._internal_privacy_accepted(), target);
          }

          // bool marketing_accepted = 12;
          if (this_._internal_marketing_accepted() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                12, this_._internal_marketing_accepted(), target);
          }

          // string email_verification_token = 15;
          if (!this_._internal_email_verification_token().empty()) {
            const std::string& _s = this_._internal_email_verification_token();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.RegisterRequest.email_verification_token");
            target = stream->WriteStringMaybeAliased(15, _s, target);
          }

          // string referral_code = 16;
          if (!this_._internal_referral_code().empty()) {
            const std::string& _s = this_._internal_referral_code();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.RegisterRequest.referral_code");
            target = stream->WriteStringMaybeAliased(16, _s, target);
          }

          // string client_version = 20;
          if (!this_._internal_client_version().empty()) {
            const std::string& _s = this_._internal_client_version();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.RegisterRequest.client_version");
            target = stream->WriteStringMaybeAliased(20, _s, target);
          }

          // string platform = 21;
          if (!this_._internal_platform().empty()) {
            const std::string& _s = this_._internal_platform();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.RegisterRequest.platform");
            target = stream->WriteStringMaybeAliased(21, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.RegisterRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RegisterRequest::ByteSizeLong(const MessageLite& base) {
          const RegisterRequest& this_ = static_cast<const RegisterRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RegisterRequest::ByteSizeLong() const {
          const RegisterRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.RegisterRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string username = 1;
            if (!this_._internal_username().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_username());
            }
            // string password = 2;
            if (!this_._internal_password().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_password());
            }
            // string email = 3;
            if (!this_._internal_email().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_email());
            }
            // string display_name = 4;
            if (!this_._internal_display_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_display_name());
            }
            // string country = 5;
            if (!this_._internal_country().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_country());
            }
            // string language = 6;
            if (!this_._internal_language().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_language());
            }
            // string email_verification_token = 15;
            if (!this_._internal_email_verification_token().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_email_verification_token());
            }
            // string referral_code = 16;
            if (!this_._internal_referral_code().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_referral_code());
            }
            // string client_version = 20;
            if (!this_._internal_client_version().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_client_version());
            }
            // string platform = 21;
            if (!this_._internal_platform().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_platform());
            }
            // bool terms_accepted = 10;
            if (this_._internal_terms_accepted() != 0) {
              total_size += 2;
            }
            // bool privacy_accepted = 11;
            if (this_._internal_privacy_accepted() != 0) {
              total_size += 2;
            }
            // bool marketing_accepted = 12;
            if (this_._internal_marketing_accepted() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RegisterRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegisterRequest*>(&to_msg);
  auto& from = static_cast<const RegisterRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.RegisterRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  if (!from._internal_email().empty()) {
    _this->_internal_set_email(from._internal_email());
  }
  if (!from._internal_display_name().empty()) {
    _this->_internal_set_display_name(from._internal_display_name());
  }
  if (!from._internal_country().empty()) {
    _this->_internal_set_country(from._internal_country());
  }
  if (!from._internal_language().empty()) {
    _this->_internal_set_language(from._internal_language());
  }
  if (!from._internal_email_verification_token().empty()) {
    _this->_internal_set_email_verification_token(from._internal_email_verification_token());
  }
  if (!from._internal_referral_code().empty()) {
    _this->_internal_set_referral_code(from._internal_referral_code());
  }
  if (!from._internal_client_version().empty()) {
    _this->_internal_set_client_version(from._internal_client_version());
  }
  if (!from._internal_platform().empty()) {
    _this->_internal_set_platform(from._internal_platform());
  }
  if (from._internal_terms_accepted() != 0) {
    _this->_impl_.terms_accepted_ = from._impl_.terms_accepted_;
  }
  if (from._internal_privacy_accepted() != 0) {
    _this->_impl_.privacy_accepted_ = from._impl_.privacy_accepted_;
  }
  if (from._internal_marketing_accepted() != 0) {
    _this->_impl_.marketing_accepted_ = from._impl_.marketing_accepted_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterRequest::CopyFrom(const RegisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.RegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegisterRequest::InternalSwap(RegisterRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, &other->_impl_.password_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.email_, &other->_impl_.email_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.display_name_, &other->_impl_.display_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.country_, &other->_impl_.country_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.language_, &other->_impl_.language_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.email_verification_token_, &other->_impl_.email_verification_token_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.referral_code_, &other->_impl_.referral_code_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_version_, &other->_impl_.client_version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.platform_, &other->_impl_.platform_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.marketing_accepted_)
      + sizeof(RegisterRequest::_impl_.marketing_accepted_)
      - PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.terms_accepted_)>(
          reinterpret_cast<char*>(&_impl_.terms_accepted_),
          reinterpret_cast<char*>(&other->_impl_.terms_accepted_));
}

::google::protobuf::Metadata RegisterRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegisterResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RegisterResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_._has_bits_);
};

void RegisterResponse::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.result_ != nullptr) _impl_.result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void RegisterResponse::clear_token_expires_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.token_expires_at_ != nullptr) _impl_.token_expires_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void RegisterResponse::clear_user_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.user_info_ != nullptr) _impl_.user_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
RegisterResponse::RegisterResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.RegisterResponse)
}
inline PROTOBUF_NDEBUG_INLINE RegisterResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::RegisterResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        validation_errors_{visibility, arena, from.validation_errors_},
        conflicting_fields_{visibility, arena, from.conflicting_fields_},
        user_id_(arena, from.user_id_),
        verification_email_sent_to_(arena, from.verification_email_sent_to_),
        session_token_(arena, from.session_token_) {}

RegisterResponse::RegisterResponse(
    ::google::protobuf::Arena* arena,
    const RegisterResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegisterResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::blokus::Result>(
                              arena, *from._impl_.result_)
                        : nullptr;
  _impl_.token_expires_at_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.token_expires_at_)
                        : nullptr;
  _impl_.user_info_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::blokus::UserInfo>(
                              arena, *from._impl_.user_info_)
                        : nullptr;
  _impl_.email_verification_required_ = from._impl_.email_verification_required_;

  // @@protoc_insertion_point(copy_constructor:blokus.RegisterResponse)
}
inline PROTOBUF_NDEBUG_INLINE RegisterResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        validation_errors_{visibility, arena},
        conflicting_fields_{visibility, arena},
        user_id_(arena),
        verification_email_sent_to_(arena),
        session_token_(arena) {}

inline void RegisterResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, result_),
           0,
           offsetof(Impl_, email_verification_required_) -
               offsetof(Impl_, result_) +
               sizeof(Impl_::email_verification_required_));
}
RegisterResponse::~RegisterResponse() {
  // @@protoc_insertion_point(destructor:blokus.RegisterResponse)
  SharedDtor(*this);
}
inline void RegisterResponse::SharedDtor(MessageLite& self) {
  RegisterResponse& this_ = static_cast<RegisterResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.user_id_.Destroy();
  this_._impl_.verification_email_sent_to_.Destroy();
  this_._impl_.session_token_.Destroy();
  delete this_._impl_.result_;
  delete this_._impl_.token_expires_at_;
  delete this_._impl_.user_info_;
  this_._impl_.~Impl_();
}

inline void* RegisterResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RegisterResponse(arena);
}
constexpr auto RegisterResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.validation_errors_) +
          decltype(RegisterResponse::_impl_.validation_errors_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.conflicting_fields_) +
          decltype(RegisterResponse::_impl_.conflicting_fields_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RegisterResponse), alignof(RegisterResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RegisterResponse::PlacementNew_,
                                 sizeof(RegisterResponse),
                                 alignof(RegisterResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RegisterResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RegisterResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RegisterResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RegisterResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RegisterResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RegisterResponse>(), &RegisterResponse::ByteSizeLong,
            &RegisterResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_._cached_size_),
        false,
    },
    &RegisterResponse::kDescriptorMethods,
    &descriptor_table_auth_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RegisterResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 3, 121, 2> RegisterResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965632,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::RegisterResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .blokus.Result result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.result_)}},
    // string user_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.user_id_)}},
    // bool email_verification_required = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RegisterResponse, _impl_.email_verification_required_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.email_verification_required_)}},
    // string verification_email_sent_to = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.verification_email_sent_to_)}},
    // string session_token = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.session_token_)}},
    // .google.protobuf.Timestamp token_expires_at = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 1, 1, PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.token_expires_at_)}},
    // .blokus.UserInfo user_info = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 2, 2, PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.user_info_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string validation_errors = 10;
    {::_pbi::TcParser::FastUR1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.validation_errors_)}},
    // repeated string conflicting_fields = 11;
    {::_pbi::TcParser::FastUR1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.conflicting_fields_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .blokus.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string user_id = 2;
    {PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.user_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool email_verification_required = 3;
    {PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.email_verification_required_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string verification_email_sent_to = 4;
    {PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.verification_email_sent_to_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string session_token = 5;
    {PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.session_token_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp token_expires_at = 6;
    {PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.token_expires_at_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .blokus.UserInfo user_info = 7;
    {PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.user_info_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string validation_errors = 10;
    {PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.validation_errors_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string conflicting_fields = 11;
    {PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.conflicting_fields_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::blokus::Result>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::blokus::UserInfo>()},
  }}, {{
    "\27\0\7\0\32\15\0\0\21\22\0\0\0\0\0\0"
    "blokus.RegisterResponse"
    "user_id"
    "verification_email_sent_to"
    "session_token"
    "validation_errors"
    "conflicting_fields"
  }},
};

PROTOBUF_NOINLINE void RegisterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.RegisterResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.validation_errors_.Clear();
  _impl_.conflicting_fields_.Clear();
  _impl_.user_id_.ClearToEmpty();
  _impl_.verification_email_sent_to_.ClearToEmpty();
  _impl_.session_token_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.result_ != nullptr);
      _impl_.result_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.token_expires_at_ != nullptr);
      _impl_.token_expires_at_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.user_info_ != nullptr);
      _impl_.user_info_->Clear();
    }
  }
  _impl_.email_verification_required_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RegisterResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RegisterResponse& this_ = static_cast<const RegisterResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RegisterResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RegisterResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.RegisterResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .blokus.Result result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.result_, this_._impl_.result_->GetCachedSize(), target,
                stream);
          }

          // string user_id = 2;
          if (!this_._internal_user_id().empty()) {
            const std::string& _s = this_._internal_user_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.RegisterResponse.user_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // bool email_verification_required = 3;
          if (this_._internal_email_verification_required() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_email_verification_required(), target);
          }

          // string verification_email_sent_to = 4;
          if (!this_._internal_verification_email_sent_to().empty()) {
            const std::string& _s = this_._internal_verification_email_sent_to();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.RegisterResponse.verification_email_sent_to");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string session_token = 5;
          if (!this_._internal_session_token().empty()) {
            const std::string& _s = this_._internal_session_token();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.RegisterResponse.session_token");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // .google.protobuf.Timestamp token_expires_at = 6;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.token_expires_at_, this_._impl_.token_expires_at_->GetCachedSize(), target,
                stream);
          }

          // .blokus.UserInfo user_info = 7;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.user_info_, this_._impl_.user_info_->GetCachedSize(), target,
                stream);
          }

          // repeated string validation_errors = 10;
          for (int i = 0, n = this_._internal_validation_errors_size(); i < n; ++i) {
            const auto& s = this_._internal_validation_errors().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.RegisterResponse.validation_errors");
            target = stream->WriteString(10, s, target);
          }

          // repeated string conflicting_fields = 11;
          for (int i = 0, n = this_._internal_conflicting_fields_size(); i < n; ++i) {
            const auto& s = this_._internal_conflicting_fields().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.RegisterResponse.conflicting_fields");
            target = stream->WriteString(11, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.RegisterResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RegisterResponse::ByteSizeLong(const MessageLite& base) {
          const RegisterResponse& this_ = static_cast<const RegisterResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RegisterResponse::ByteSizeLong() const {
          const RegisterResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.RegisterResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string validation_errors = 10;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_validation_errors().size());
              for (int i = 0, n = this_._internal_validation_errors().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_validation_errors().Get(i));
              }
            }
            // repeated string conflicting_fields = 11;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_conflicting_fields().size());
              for (int i = 0, n = this_._internal_conflicting_fields().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_conflicting_fields().Get(i));
              }
            }
          }
           {
            // string user_id = 2;
            if (!this_._internal_user_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_user_id());
            }
            // string verification_email_sent_to = 4;
            if (!this_._internal_verification_email_sent_to().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_verification_email_sent_to());
            }
            // string session_token = 5;
            if (!this_._internal_session_token().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_session_token());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .blokus.Result result = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.result_);
            }
            // .google.protobuf.Timestamp token_expires_at = 6;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.token_expires_at_);
            }
            // .blokus.UserInfo user_info = 7;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.user_info_);
            }
          }
           {
            // bool email_verification_required = 3;
            if (this_._internal_email_verification_required() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RegisterResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegisterResponse*>(&to_msg);
  auto& from = static_cast<const RegisterResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.RegisterResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_validation_errors()->MergeFrom(from._internal_validation_errors());
  _this->_internal_mutable_conflicting_fields()->MergeFrom(from._internal_conflicting_fields());
  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_verification_email_sent_to().empty()) {
    _this->_internal_set_verification_email_sent_to(from._internal_verification_email_sent_to());
  }
  if (!from._internal_session_token().empty()) {
    _this->_internal_set_session_token(from._internal_session_token());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.result_ != nullptr);
      if (_this->_impl_.result_ == nullptr) {
        _this->_impl_.result_ =
            ::google::protobuf::Message::CopyConstruct<::blokus::Result>(arena, *from._impl_.result_);
      } else {
        _this->_impl_.result_->MergeFrom(*from._impl_.result_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.token_expires_at_ != nullptr);
      if (_this->_impl_.token_expires_at_ == nullptr) {
        _this->_impl_.token_expires_at_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.token_expires_at_);
      } else {
        _this->_impl_.token_expires_at_->MergeFrom(*from._impl_.token_expires_at_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.user_info_ != nullptr);
      if (_this->_impl_.user_info_ == nullptr) {
        _this->_impl_.user_info_ =
            ::google::protobuf::Message::CopyConstruct<::blokus::UserInfo>(arena, *from._impl_.user_info_);
      } else {
        _this->_impl_.user_info_->MergeFrom(*from._impl_.user_info_);
      }
    }
  }
  if (from._internal_email_verification_required() != 0) {
    _this->_impl_.email_verification_required_ = from._impl_.email_verification_required_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterResponse::CopyFrom(const RegisterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.RegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegisterResponse::InternalSwap(RegisterResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.validation_errors_.InternalSwap(&other->_impl_.validation_errors_);
  _impl_.conflicting_fields_.InternalSwap(&other->_impl_.conflicting_fields_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.verification_email_sent_to_, &other->_impl_.verification_email_sent_to_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_token_, &other->_impl_.session_token_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.email_verification_required_)
      + sizeof(RegisterResponse::_impl_.email_verification_required_)
      - PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::google::protobuf::Metadata RegisterResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LogoutRequest::_Internal {
 public:
};

LogoutRequest::LogoutRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.LogoutRequest)
}
inline PROTOBUF_NDEBUG_INLINE LogoutRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::LogoutRequest& from_msg)
      : session_token_(arena, from.session_token_),
        reason_(arena, from.reason_),
        _cached_size_{0} {}

LogoutRequest::LogoutRequest(
    ::google::protobuf::Arena* arena,
    const LogoutRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LogoutRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.logout_all_sessions_ = from._impl_.logout_all_sessions_;

  // @@protoc_insertion_point(copy_constructor:blokus.LogoutRequest)
}
inline PROTOBUF_NDEBUG_INLINE LogoutRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : session_token_(arena),
        reason_(arena),
        _cached_size_{0} {}

inline void LogoutRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.logout_all_sessions_ = {};
}
LogoutRequest::~LogoutRequest() {
  // @@protoc_insertion_point(destructor:blokus.LogoutRequest)
  SharedDtor(*this);
}
inline void LogoutRequest::SharedDtor(MessageLite& self) {
  LogoutRequest& this_ = static_cast<LogoutRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.session_token_.Destroy();
  this_._impl_.reason_.Destroy();
  this_._impl_.~Impl_();
}

inline void* LogoutRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LogoutRequest(arena);
}
constexpr auto LogoutRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(LogoutRequest),
                                            alignof(LogoutRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LogoutRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LogoutRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LogoutRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LogoutRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LogoutRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LogoutRequest>(), &LogoutRequest::ByteSizeLong,
            &LogoutRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LogoutRequest, _impl_._cached_size_),
        false,
    },
    &LogoutRequest::kDescriptorMethods,
    &descriptor_table_auth_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LogoutRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 48, 2> LogoutRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::LogoutRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string session_token = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LogoutRequest, _impl_.session_token_)}},
    // bool logout_all_sessions = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(LogoutRequest, _impl_.logout_all_sessions_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(LogoutRequest, _impl_.logout_all_sessions_)}},
    // string reason = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(LogoutRequest, _impl_.reason_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string session_token = 1;
    {PROTOBUF_FIELD_OFFSET(LogoutRequest, _impl_.session_token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool logout_all_sessions = 2;
    {PROTOBUF_FIELD_OFFSET(LogoutRequest, _impl_.logout_all_sessions_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string reason = 3;
    {PROTOBUF_FIELD_OFFSET(LogoutRequest, _impl_.reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\24\15\0\6\0\0\0\0"
    "blokus.LogoutRequest"
    "session_token"
    "reason"
  }},
};

PROTOBUF_NOINLINE void LogoutRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.LogoutRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.session_token_.ClearToEmpty();
  _impl_.reason_.ClearToEmpty();
  _impl_.logout_all_sessions_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LogoutRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LogoutRequest& this_ = static_cast<const LogoutRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LogoutRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LogoutRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.LogoutRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string session_token = 1;
          if (!this_._internal_session_token().empty()) {
            const std::string& _s = this_._internal_session_token();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.LogoutRequest.session_token");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bool logout_all_sessions = 2;
          if (this_._internal_logout_all_sessions() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_logout_all_sessions(), target);
          }

          // string reason = 3;
          if (!this_._internal_reason().empty()) {
            const std::string& _s = this_._internal_reason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.LogoutRequest.reason");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.LogoutRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LogoutRequest::ByteSizeLong(const MessageLite& base) {
          const LogoutRequest& this_ = static_cast<const LogoutRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LogoutRequest::ByteSizeLong() const {
          const LogoutRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.LogoutRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string session_token = 1;
            if (!this_._internal_session_token().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_session_token());
            }
            // string reason = 3;
            if (!this_._internal_reason().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reason());
            }
            // bool logout_all_sessions = 2;
            if (this_._internal_logout_all_sessions() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LogoutRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LogoutRequest*>(&to_msg);
  auto& from = static_cast<const LogoutRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.LogoutRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_session_token().empty()) {
    _this->_internal_set_session_token(from._internal_session_token());
  }
  if (!from._internal_reason().empty()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  if (from._internal_logout_all_sessions() != 0) {
    _this->_impl_.logout_all_sessions_ = from._impl_.logout_all_sessions_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LogoutRequest::CopyFrom(const LogoutRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.LogoutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LogoutRequest::InternalSwap(LogoutRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_token_, &other->_impl_.session_token_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, &other->_impl_.reason_, arena);
        swap(_impl_.logout_all_sessions_, other->_impl_.logout_all_sessions_);
}

::google::protobuf::Metadata LogoutRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LogoutResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<LogoutResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LogoutResponse, _impl_._has_bits_);
};

void LogoutResponse::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.result_ != nullptr) _impl_.result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void LogoutResponse::clear_logged_out_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.logged_out_at_ != nullptr) _impl_.logged_out_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
LogoutResponse::LogoutResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.LogoutResponse)
}
inline PROTOBUF_NDEBUG_INLINE LogoutResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::LogoutResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        message_(arena, from.message_) {}

LogoutResponse::LogoutResponse(
    ::google::protobuf::Arena* arena,
    const LogoutResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LogoutResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::blokus::Result>(
                              arena, *from._impl_.result_)
                        : nullptr;
  _impl_.logged_out_at_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.logged_out_at_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:blokus.LogoutResponse)
}
inline PROTOBUF_NDEBUG_INLINE LogoutResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        message_(arena) {}

inline void LogoutResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, result_),
           0,
           offsetof(Impl_, logged_out_at_) -
               offsetof(Impl_, result_) +
               sizeof(Impl_::logged_out_at_));
}
LogoutResponse::~LogoutResponse() {
  // @@protoc_insertion_point(destructor:blokus.LogoutResponse)
  SharedDtor(*this);
}
inline void LogoutResponse::SharedDtor(MessageLite& self) {
  LogoutResponse& this_ = static_cast<LogoutResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  delete this_._impl_.result_;
  delete this_._impl_.logged_out_at_;
  this_._impl_.~Impl_();
}

inline void* LogoutResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LogoutResponse(arena);
}
constexpr auto LogoutResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(LogoutResponse),
                                            alignof(LogoutResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LogoutResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LogoutResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LogoutResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LogoutResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LogoutResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LogoutResponse>(), &LogoutResponse::ByteSizeLong,
            &LogoutResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LogoutResponse, _impl_._cached_size_),
        false,
    },
    &LogoutResponse::kDescriptorMethods,
    &descriptor_table_auth_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LogoutResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 37, 2> LogoutResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LogoutResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::LogoutResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .blokus.Result result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LogoutResponse, _impl_.result_)}},
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(LogoutResponse, _impl_.message_)}},
    // .google.protobuf.Timestamp logged_out_at = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(LogoutResponse, _impl_.logged_out_at_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .blokus.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(LogoutResponse, _impl_.result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(LogoutResponse, _impl_.message_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp logged_out_at = 3;
    {PROTOBUF_FIELD_OFFSET(LogoutResponse, _impl_.logged_out_at_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::blokus::Result>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\25\0\7\0\0\0\0\0"
    "blokus.LogoutResponse"
    "message"
  }},
};

PROTOBUF_NOINLINE void LogoutResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.LogoutResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.result_ != nullptr);
      _impl_.result_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.logged_out_at_ != nullptr);
      _impl_.logged_out_at_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LogoutResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LogoutResponse& this_ = static_cast<const LogoutResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LogoutResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LogoutResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.LogoutResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .blokus.Result result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.result_, this_._impl_.result_->GetCachedSize(), target,
                stream);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.LogoutResponse.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // .google.protobuf.Timestamp logged_out_at = 3;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.logged_out_at_, this_._impl_.logged_out_at_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.LogoutResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LogoutResponse::ByteSizeLong(const MessageLite& base) {
          const LogoutResponse& this_ = static_cast<const LogoutResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LogoutResponse::ByteSizeLong() const {
          const LogoutResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.LogoutResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .blokus.Result result = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.result_);
            }
            // .google.protobuf.Timestamp logged_out_at = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.logged_out_at_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LogoutResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LogoutResponse*>(&to_msg);
  auto& from = static_cast<const LogoutResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.LogoutResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.result_ != nullptr);
      if (_this->_impl_.result_ == nullptr) {
        _this->_impl_.result_ =
            ::google::protobuf::Message::CopyConstruct<::blokus::Result>(arena, *from._impl_.result_);
      } else {
        _this->_impl_.result_->MergeFrom(*from._impl_.result_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.logged_out_at_ != nullptr);
      if (_this->_impl_.logged_out_at_ == nullptr) {
        _this->_impl_.logged_out_at_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.logged_out_at_);
      } else {
        _this->_impl_.logged_out_at_->MergeFrom(*from._impl_.logged_out_at_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LogoutResponse::CopyFrom(const LogoutResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.LogoutResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LogoutResponse::InternalSwap(LogoutResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LogoutResponse, _impl_.logged_out_at_)
      + sizeof(LogoutResponse::_impl_.logged_out_at_)
      - PROTOBUF_FIELD_OFFSET(LogoutResponse, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::google::protobuf::Metadata LogoutResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HeartbeatRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<HeartbeatRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HeartbeatRequest, _impl_._has_bits_);
};

void HeartbeatRequest::clear_client_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.client_time_ != nullptr) _impl_.client_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
HeartbeatRequest::HeartbeatRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.HeartbeatRequest)
}
inline PROTOBUF_NDEBUG_INLINE HeartbeatRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::HeartbeatRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

HeartbeatRequest::HeartbeatRequest(
    ::google::protobuf::Arena* arena,
    const HeartbeatRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HeartbeatRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.client_time_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.client_time_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sequence_number_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, sequence_number_),
           offsetof(Impl_, is_window_focused_) -
               offsetof(Impl_, sequence_number_) +
               sizeof(Impl_::is_window_focused_));

  // @@protoc_insertion_point(copy_constructor:blokus.HeartbeatRequest)
}
inline PROTOBUF_NDEBUG_INLINE HeartbeatRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void HeartbeatRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, client_time_),
           0,
           offsetof(Impl_, is_window_focused_) -
               offsetof(Impl_, client_time_) +
               sizeof(Impl_::is_window_focused_));
}
HeartbeatRequest::~HeartbeatRequest() {
  // @@protoc_insertion_point(destructor:blokus.HeartbeatRequest)
  SharedDtor(*this);
}
inline void HeartbeatRequest::SharedDtor(MessageLite& self) {
  HeartbeatRequest& this_ = static_cast<HeartbeatRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.client_time_;
  this_._impl_.~Impl_();
}

inline void* HeartbeatRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HeartbeatRequest(arena);
}
constexpr auto HeartbeatRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(HeartbeatRequest),
                                            alignof(HeartbeatRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HeartbeatRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HeartbeatRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HeartbeatRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HeartbeatRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HeartbeatRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HeartbeatRequest>(), &HeartbeatRequest::ByteSizeLong,
            &HeartbeatRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HeartbeatRequest, _impl_._cached_size_),
        false,
    },
    &HeartbeatRequest::kDescriptorMethods,
    &descriptor_table_auth_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HeartbeatRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 0, 2> HeartbeatRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HeartbeatRequest, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::HeartbeatRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Timestamp client_time = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(HeartbeatRequest, _impl_.client_time_)}},
    // uint32 sequence_number = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HeartbeatRequest, _impl_.sequence_number_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(HeartbeatRequest, _impl_.sequence_number_)}},
    // float cpu_usage = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(HeartbeatRequest, _impl_.cpu_usage_)}},
    // uint32 memory_usage_mb = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HeartbeatRequest, _impl_.memory_usage_mb_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(HeartbeatRequest, _impl_.memory_usage_mb_)}},
    // uint32 fps = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HeartbeatRequest, _impl_.fps_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(HeartbeatRequest, _impl_.fps_)}},
    // bool is_window_focused = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(HeartbeatRequest, _impl_.is_window_focused_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(HeartbeatRequest, _impl_.is_window_focused_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp client_time = 1;
    {PROTOBUF_FIELD_OFFSET(HeartbeatRequest, _impl_.client_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 sequence_number = 2;
    {PROTOBUF_FIELD_OFFSET(HeartbeatRequest, _impl_.sequence_number_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // float cpu_usage = 3;
    {PROTOBUF_FIELD_OFFSET(HeartbeatRequest, _impl_.cpu_usage_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // uint32 memory_usage_mb = 4;
    {PROTOBUF_FIELD_OFFSET(HeartbeatRequest, _impl_.memory_usage_mb_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 fps = 5;
    {PROTOBUF_FIELD_OFFSET(HeartbeatRequest, _impl_.fps_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bool is_window_focused = 6;
    {PROTOBUF_FIELD_OFFSET(HeartbeatRequest, _impl_.is_window_focused_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void HeartbeatRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.HeartbeatRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.client_time_ != nullptr);
    _impl_.client_time_->Clear();
  }
  ::memset(&_impl_.sequence_number_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_window_focused_) -
      reinterpret_cast<char*>(&_impl_.sequence_number_)) + sizeof(_impl_.is_window_focused_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HeartbeatRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HeartbeatRequest& this_ = static_cast<const HeartbeatRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HeartbeatRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HeartbeatRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.HeartbeatRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp client_time = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.client_time_, this_._impl_.client_time_->GetCachedSize(), target,
                stream);
          }

          // uint32 sequence_number = 2;
          if (this_._internal_sequence_number() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_sequence_number(), target);
          }

          // float cpu_usage = 3;
          if (::absl::bit_cast<::uint32_t>(this_._internal_cpu_usage()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_cpu_usage(), target);
          }

          // uint32 memory_usage_mb = 4;
          if (this_._internal_memory_usage_mb() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_memory_usage_mb(), target);
          }

          // uint32 fps = 5;
          if (this_._internal_fps() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                5, this_._internal_fps(), target);
          }

          // bool is_window_focused = 6;
          if (this_._internal_is_window_focused() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_is_window_focused(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.HeartbeatRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HeartbeatRequest::ByteSizeLong(const MessageLite& base) {
          const HeartbeatRequest& this_ = static_cast<const HeartbeatRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HeartbeatRequest::ByteSizeLong() const {
          const HeartbeatRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.HeartbeatRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .google.protobuf.Timestamp client_time = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.client_time_);
            }
          }
           {
            // uint32 sequence_number = 2;
            if (this_._internal_sequence_number() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_sequence_number());
            }
            // float cpu_usage = 3;
            if (::absl::bit_cast<::uint32_t>(this_._internal_cpu_usage()) != 0) {
              total_size += 5;
            }
            // uint32 memory_usage_mb = 4;
            if (this_._internal_memory_usage_mb() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_memory_usage_mb());
            }
            // uint32 fps = 5;
            if (this_._internal_fps() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_fps());
            }
            // bool is_window_focused = 6;
            if (this_._internal_is_window_focused() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HeartbeatRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HeartbeatRequest*>(&to_msg);
  auto& from = static_cast<const HeartbeatRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.HeartbeatRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.client_time_ != nullptr);
    if (_this->_impl_.client_time_ == nullptr) {
      _this->_impl_.client_time_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.client_time_);
    } else {
      _this->_impl_.client_time_->MergeFrom(*from._impl_.client_time_);
    }
  }
  if (from._internal_sequence_number() != 0) {
    _this->_impl_.sequence_number_ = from._impl_.sequence_number_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_cpu_usage()) != 0) {
    _this->_impl_.cpu_usage_ = from._impl_.cpu_usage_;
  }
  if (from._internal_memory_usage_mb() != 0) {
    _this->_impl_.memory_usage_mb_ = from._impl_.memory_usage_mb_;
  }
  if (from._internal_fps() != 0) {
    _this->_impl_.fps_ = from._impl_.fps_;
  }
  if (from._internal_is_window_focused() != 0) {
    _this->_impl_.is_window_focused_ = from._impl_.is_window_focused_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HeartbeatRequest::CopyFrom(const HeartbeatRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.HeartbeatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HeartbeatRequest::InternalSwap(HeartbeatRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HeartbeatRequest, _impl_.is_window_focused_)
      + sizeof(HeartbeatRequest::_impl_.is_window_focused_)
      - PROTOBUF_FIELD_OFFSET(HeartbeatRequest, _impl_.client_time_)>(
          reinterpret_cast<char*>(&_impl_.client_time_),
          reinterpret_cast<char*>(&other->_impl_.client_time_));
}

::google::protobuf::Metadata HeartbeatRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HeartbeatResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<HeartbeatResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_._has_bits_);
};

void HeartbeatResponse::clear_server_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.server_time_ != nullptr) _impl_.server_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void HeartbeatResponse::clear_server_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.server_info_ != nullptr) _impl_.server_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
HeartbeatResponse::HeartbeatResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.HeartbeatResponse)
}
inline PROTOBUF_NDEBUG_INLINE HeartbeatResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::HeartbeatResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        server_messages_{visibility, arena, from.server_messages_},
        update_url_(arena, from.update_url_) {}

HeartbeatResponse::HeartbeatResponse(
    ::google::protobuf::Arena* arena,
    const HeartbeatResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HeartbeatResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.server_time_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.server_time_)
                        : nullptr;
  _impl_.server_info_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::blokus::ServerInfo>(
                              arena, *from._impl_.server_info_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sequence_number_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, sequence_number_),
           offsetof(Impl_, force_update_required_) -
               offsetof(Impl_, sequence_number_) +
               sizeof(Impl_::force_update_required_));

  // @@protoc_insertion_point(copy_constructor:blokus.HeartbeatResponse)
}
inline PROTOBUF_NDEBUG_INLINE HeartbeatResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        server_messages_{visibility, arena},
        update_url_(arena) {}

inline void HeartbeatResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, server_time_),
           0,
           offsetof(Impl_, force_update_required_) -
               offsetof(Impl_, server_time_) +
               sizeof(Impl_::force_update_required_));
}
HeartbeatResponse::~HeartbeatResponse() {
  // @@protoc_insertion_point(destructor:blokus.HeartbeatResponse)
  SharedDtor(*this);
}
inline void HeartbeatResponse::SharedDtor(MessageLite& self) {
  HeartbeatResponse& this_ = static_cast<HeartbeatResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.update_url_.Destroy();
  delete this_._impl_.server_time_;
  delete this_._impl_.server_info_;
  this_._impl_.~Impl_();
}

inline void* HeartbeatResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HeartbeatResponse(arena);
}
constexpr auto HeartbeatResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_.server_messages_) +
          decltype(HeartbeatResponse::_impl_.server_messages_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(HeartbeatResponse), alignof(HeartbeatResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&HeartbeatResponse::PlacementNew_,
                                 sizeof(HeartbeatResponse),
                                 alignof(HeartbeatResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HeartbeatResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HeartbeatResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HeartbeatResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HeartbeatResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HeartbeatResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HeartbeatResponse>(), &HeartbeatResponse::ByteSizeLong,
            &HeartbeatResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_._cached_size_),
        false,
    },
    &HeartbeatResponse::kDescriptorMethods,
    &descriptor_table_auth_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HeartbeatResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 58, 2> HeartbeatResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::HeartbeatResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Timestamp server_time = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_.server_time_)}},
    // uint32 sequence_number = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HeartbeatResponse, _impl_.sequence_number_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_.sequence_number_)}},
    // .blokus.ServerInfo server_info = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_.server_info_)}},
    // bool force_update_required = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(HeartbeatResponse, _impl_.force_update_required_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_.force_update_required_)}},
    // string update_url = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_.update_url_)}},
    // repeated string server_messages = 6;
    {::_pbi::TcParser::FastUR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_.server_messages_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp server_time = 1;
    {PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_.server_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 sequence_number = 2;
    {PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_.sequence_number_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .blokus.ServerInfo server_info = 3;
    {PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_.server_info_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool force_update_required = 4;
    {PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_.force_update_required_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string update_url = 5;
    {PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_.update_url_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string server_messages = 6;
    {PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_.server_messages_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::blokus::ServerInfo>()},
  }}, {{
    "\30\0\0\0\0\12\17\0"
    "blokus.HeartbeatResponse"
    "update_url"
    "server_messages"
  }},
};

PROTOBUF_NOINLINE void HeartbeatResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.HeartbeatResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.server_messages_.Clear();
  _impl_.update_url_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.server_time_ != nullptr);
      _impl_.server_time_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.server_info_ != nullptr);
      _impl_.server_info_->Clear();
    }
  }
  ::memset(&_impl_.sequence_number_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.force_update_required_) -
      reinterpret_cast<char*>(&_impl_.sequence_number_)) + sizeof(_impl_.force_update_required_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HeartbeatResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HeartbeatResponse& this_ = static_cast<const HeartbeatResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HeartbeatResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HeartbeatResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.HeartbeatResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp server_time = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.server_time_, this_._impl_.server_time_->GetCachedSize(), target,
                stream);
          }

          // uint32 sequence_number = 2;
          if (this_._internal_sequence_number() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_sequence_number(), target);
          }

          // .blokus.ServerInfo server_info = 3;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.server_info_, this_._impl_.server_info_->GetCachedSize(), target,
                stream);
          }

          // bool force_update_required = 4;
          if (this_._internal_force_update_required() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_force_update_required(), target);
          }

          // string update_url = 5;
          if (!this_._internal_update_url().empty()) {
            const std::string& _s = this_._internal_update_url();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.HeartbeatResponse.update_url");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // repeated string server_messages = 6;
          for (int i = 0, n = this_._internal_server_messages_size(); i < n; ++i) {
            const auto& s = this_._internal_server_messages().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.HeartbeatResponse.server_messages");
            target = stream->WriteString(6, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.HeartbeatResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HeartbeatResponse::ByteSizeLong(const MessageLite& base) {
          const HeartbeatResponse& this_ = static_cast<const HeartbeatResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HeartbeatResponse::ByteSizeLong() const {
          const HeartbeatResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.HeartbeatResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string server_messages = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_server_messages().size());
              for (int i = 0, n = this_._internal_server_messages().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_server_messages().Get(i));
              }
            }
          }
           {
            // string update_url = 5;
            if (!this_._internal_update_url().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_update_url());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .google.protobuf.Timestamp server_time = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.server_time_);
            }
            // .blokus.ServerInfo server_info = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.server_info_);
            }
          }
           {
            // uint32 sequence_number = 2;
            if (this_._internal_sequence_number() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_sequence_number());
            }
            // bool force_update_required = 4;
            if (this_._internal_force_update_required() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HeartbeatResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HeartbeatResponse*>(&to_msg);
  auto& from = static_cast<const HeartbeatResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.HeartbeatResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_server_messages()->MergeFrom(from._internal_server_messages());
  if (!from._internal_update_url().empty()) {
    _this->_internal_set_update_url(from._internal_update_url());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.server_time_ != nullptr);
      if (_this->_impl_.server_time_ == nullptr) {
        _this->_impl_.server_time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.server_time_);
      } else {
        _this->_impl_.server_time_->MergeFrom(*from._impl_.server_time_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.server_info_ != nullptr);
      if (_this->_impl_.server_info_ == nullptr) {
        _this->_impl_.server_info_ =
            ::google::protobuf::Message::CopyConstruct<::blokus::ServerInfo>(arena, *from._impl_.server_info_);
      } else {
        _this->_impl_.server_info_->MergeFrom(*from._impl_.server_info_);
      }
    }
  }
  if (from._internal_sequence_number() != 0) {
    _this->_impl_.sequence_number_ = from._impl_.sequence_number_;
  }
  if (from._internal_force_update_required() != 0) {
    _this->_impl_.force_update_required_ = from._impl_.force_update_required_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HeartbeatResponse::CopyFrom(const HeartbeatResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.HeartbeatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HeartbeatResponse::InternalSwap(HeartbeatResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.server_messages_.InternalSwap(&other->_impl_.server_messages_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.update_url_, &other->_impl_.update_url_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_.force_update_required_)
      + sizeof(HeartbeatResponse::_impl_.force_update_required_)
      - PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_.server_time_)>(
          reinterpret_cast<char*>(&_impl_.server_time_),
          reinterpret_cast<char*>(&other->_impl_.server_time_));
}

::google::protobuf::Metadata HeartbeatResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WelcomeMessage::_Internal {
 public:
  using HasBits =
      decltype(std::declval<WelcomeMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_._has_bits_);
};

void WelcomeMessage::clear_user_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.user_info_ != nullptr) _impl_.user_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void WelcomeMessage::clear_server_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.server_info_ != nullptr) _impl_.server_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
WelcomeMessage::WelcomeMessage(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.WelcomeMessage)
}
inline PROTOBUF_NDEBUG_INLINE WelcomeMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::WelcomeMessage& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        available_game_modes_{visibility, arena, from.available_game_modes_},
        daily_rewards_{visibility, arena, from.daily_rewards_},
        achievements_{visibility, arena, from.achievements_},
        friend_online_{visibility, arena, from.friend_online_},
        system_notifications_{visibility, arena, from.system_notifications_},
        motd_(arena, from.motd_) {}

WelcomeMessage::WelcomeMessage(
    ::google::protobuf::Arena* arena,
    const WelcomeMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WelcomeMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.user_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::blokus::UserInfo>(
                              arena, *from._impl_.user_info_)
                        : nullptr;
  _impl_.server_info_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::blokus::ServerInfo>(
                              arena, *from._impl_.server_info_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, recommended_room_count_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, recommended_room_count_),
           offsetof(Impl_, win_rate_) -
               offsetof(Impl_, recommended_room_count_) +
               sizeof(Impl_::win_rate_));

  // @@protoc_insertion_point(copy_constructor:blokus.WelcomeMessage)
}
inline PROTOBUF_NDEBUG_INLINE WelcomeMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        available_game_modes_{visibility, arena},
        daily_rewards_{visibility, arena},
        achievements_{visibility, arena},
        friend_online_{visibility, arena},
        system_notifications_{visibility, arena},
        motd_(arena) {}

inline void WelcomeMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, user_info_),
           0,
           offsetof(Impl_, win_rate_) -
               offsetof(Impl_, user_info_) +
               sizeof(Impl_::win_rate_));
}
WelcomeMessage::~WelcomeMessage() {
  // @@protoc_insertion_point(destructor:blokus.WelcomeMessage)
  SharedDtor(*this);
}
inline void WelcomeMessage::SharedDtor(MessageLite& self) {
  WelcomeMessage& this_ = static_cast<WelcomeMessage&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.motd_.Destroy();
  delete this_._impl_.user_info_;
  delete this_._impl_.server_info_;
  this_._impl_.~Impl_();
}

inline void* WelcomeMessage::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) WelcomeMessage(arena);
}
constexpr auto WelcomeMessage::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.available_game_modes_) +
          decltype(WelcomeMessage::_impl_.available_game_modes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.daily_rewards_) +
          decltype(WelcomeMessage::_impl_.daily_rewards_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.achievements_) +
          decltype(WelcomeMessage::_impl_.achievements_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.friend_online_) +
          decltype(WelcomeMessage::_impl_.friend_online_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.system_notifications_) +
          decltype(WelcomeMessage::_impl_.system_notifications_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(WelcomeMessage), alignof(WelcomeMessage), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&WelcomeMessage::PlacementNew_,
                                 sizeof(WelcomeMessage),
                                 alignof(WelcomeMessage));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull WelcomeMessage::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_WelcomeMessage_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &WelcomeMessage::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<WelcomeMessage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &WelcomeMessage::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<WelcomeMessage>(), &WelcomeMessage::ByteSizeLong,
            &WelcomeMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_._cached_size_),
        false,
    },
    &WelcomeMessage::kDescriptorMethods,
    &descriptor_table_auth_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* WelcomeMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 2, 120, 2> WelcomeMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_._has_bits_),
    0, // no _extensions_
    17, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294850944,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::WelcomeMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 total_players = 16;
    {::_pbi::TcParser::FastV32S2,
     {384, 63, 0, PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.total_players_)}},
    // .blokus.UserInfo user_info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.user_info_)}},
    // .blokus.ServerInfo server_info = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.server_info_)}},
    // repeated string available_game_modes = 3;
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.available_game_modes_)}},
    // int32 recommended_room_count = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WelcomeMessage, _impl_.recommended_room_count_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.recommended_room_count_)}},
    // repeated string daily_rewards = 5;
    {::_pbi::TcParser::FastUR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.daily_rewards_)}},
    // repeated string achievements = 6;
    {::_pbi::TcParser::FastUR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.achievements_)}},
    // repeated string friend_online = 7;
    {::_pbi::TcParser::FastUR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.friend_online_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string system_notifications = 10;
    {::_pbi::TcParser::FastUR1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.system_notifications_)}},
    // string motd = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.motd_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // int32 rank_position = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WelcomeMessage, _impl_.rank_position_), 63>(),
     {120, 63, 0, PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.rank_position_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .blokus.UserInfo user_info = 1;
    {PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.user_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .blokus.ServerInfo server_info = 2;
    {PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.server_info_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string available_game_modes = 3;
    {PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.available_game_modes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // int32 recommended_room_count = 4;
    {PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.recommended_room_count_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated string daily_rewards = 5;
    {PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.daily_rewards_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string achievements = 6;
    {PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.achievements_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string friend_online = 7;
    {PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.friend_online_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string system_notifications = 10;
    {PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.system_notifications_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string motd = 11;
    {PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.motd_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 rank_position = 15;
    {PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.rank_position_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 total_players = 16;
    {PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.total_players_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // float win_rate = 17;
    {PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.win_rate_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }}, {{
    {::_pbi::TcParser::GetTable<::blokus::UserInfo>()},
    {::_pbi::TcParser::GetTable<::blokus::ServerInfo>()},
  }}, {{
    "\25\0\0\24\0\15\14\15\24\4\0\0\0\0\0\0"
    "blokus.WelcomeMessage"
    "available_game_modes"
    "daily_rewards"
    "achievements"
    "friend_online"
    "system_notifications"
    "motd"
  }},
};

PROTOBUF_NOINLINE void WelcomeMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.WelcomeMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.available_game_modes_.Clear();
  _impl_.daily_rewards_.Clear();
  _impl_.achievements_.Clear();
  _impl_.friend_online_.Clear();
  _impl_.system_notifications_.Clear();
  _impl_.motd_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.user_info_ != nullptr);
      _impl_.user_info_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.server_info_ != nullptr);
      _impl_.server_info_->Clear();
    }
  }
  ::memset(&_impl_.recommended_room_count_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.win_rate_) -
      reinterpret_cast<char*>(&_impl_.recommended_room_count_)) + sizeof(_impl_.win_rate_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* WelcomeMessage::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const WelcomeMessage& this_ = static_cast<const WelcomeMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* WelcomeMessage::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const WelcomeMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.WelcomeMessage)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .blokus.UserInfo user_info = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.user_info_, this_._impl_.user_info_->GetCachedSize(), target,
                stream);
          }

          // .blokus.ServerInfo server_info = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.server_info_, this_._impl_.server_info_->GetCachedSize(), target,
                stream);
          }

          // repeated string available_game_modes = 3;
          for (int i = 0, n = this_._internal_available_game_modes_size(); i < n; ++i) {
            const auto& s = this_._internal_available_game_modes().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.WelcomeMessage.available_game_modes");
            target = stream->WriteString(3, s, target);
          }

          // int32 recommended_room_count = 4;
          if (this_._internal_recommended_room_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_recommended_room_count(), target);
          }

          // repeated string daily_rewards = 5;
          for (int i = 0, n = this_._internal_daily_rewards_size(); i < n; ++i) {
            const auto& s = this_._internal_daily_rewards().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.WelcomeMessage.daily_rewards");
            target = stream->WriteString(5, s, target);
          }

          // repeated string achievements = 6;
          for (int i = 0, n = this_._internal_achievements_size(); i < n; ++i) {
            const auto& s = this_._internal_achievements().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.WelcomeMessage.achievements");
            target = stream->WriteString(6, s, target);
          }

          // repeated string friend_online = 7;
          for (int i = 0, n = this_._internal_friend_online_size(); i < n; ++i) {
            const auto& s = this_._internal_friend_online().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.WelcomeMessage.friend_online");
            target = stream->WriteString(7, s, target);
          }

          // repeated string system_notifications = 10;
          for (int i = 0, n = this_._internal_system_notifications_size(); i < n; ++i) {
            const auto& s = this_._internal_system_notifications().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.WelcomeMessage.system_notifications");
            target = stream->WriteString(10, s, target);
          }

          // string motd = 11;
          if (!this_._internal_motd().empty()) {
            const std::string& _s = this_._internal_motd();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.WelcomeMessage.motd");
            target = stream->WriteStringMaybeAliased(11, _s, target);
          }

          // int32 rank_position = 15;
          if (this_._internal_rank_position() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<15>(
                    stream, this_._internal_rank_position(), target);
          }

          // int32 total_players = 16;
          if (this_._internal_total_players() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                16, this_._internal_total_players(), target);
          }

          // float win_rate = 17;
          if (::absl::bit_cast<::uint32_t>(this_._internal_win_rate()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                17, this_._internal_win_rate(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.WelcomeMessage)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t WelcomeMessage::ByteSizeLong(const MessageLite& base) {
          const WelcomeMessage& this_ = static_cast<const WelcomeMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t WelcomeMessage::ByteSizeLong() const {
          const WelcomeMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.WelcomeMessage)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string available_game_modes = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_available_game_modes().size());
              for (int i = 0, n = this_._internal_available_game_modes().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_available_game_modes().Get(i));
              }
            }
            // repeated string daily_rewards = 5;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_daily_rewards().size());
              for (int i = 0, n = this_._internal_daily_rewards().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_daily_rewards().Get(i));
              }
            }
            // repeated string achievements = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_achievements().size());
              for (int i = 0, n = this_._internal_achievements().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_achievements().Get(i));
              }
            }
            // repeated string friend_online = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_friend_online().size());
              for (int i = 0, n = this_._internal_friend_online().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_friend_online().Get(i));
              }
            }
            // repeated string system_notifications = 10;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_system_notifications().size());
              for (int i = 0, n = this_._internal_system_notifications().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_system_notifications().Get(i));
              }
            }
          }
           {
            // string motd = 11;
            if (!this_._internal_motd().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_motd());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .blokus.UserInfo user_info = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.user_info_);
            }
            // .blokus.ServerInfo server_info = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.server_info_);
            }
          }
           {
            // int32 recommended_room_count = 4;
            if (this_._internal_recommended_room_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_recommended_room_count());
            }
            // int32 rank_position = 15;
            if (this_._internal_rank_position() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_rank_position());
            }
            // int32 total_players = 16;
            if (this_._internal_total_players() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_total_players());
            }
            // float win_rate = 17;
            if (::absl::bit_cast<::uint32_t>(this_._internal_win_rate()) != 0) {
              total_size += 6;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void WelcomeMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WelcomeMessage*>(&to_msg);
  auto& from = static_cast<const WelcomeMessage&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.WelcomeMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_available_game_modes()->MergeFrom(from._internal_available_game_modes());
  _this->_internal_mutable_daily_rewards()->MergeFrom(from._internal_daily_rewards());
  _this->_internal_mutable_achievements()->MergeFrom(from._internal_achievements());
  _this->_internal_mutable_friend_online()->MergeFrom(from._internal_friend_online());
  _this->_internal_mutable_system_notifications()->MergeFrom(from._internal_system_notifications());
  if (!from._internal_motd().empty()) {
    _this->_internal_set_motd(from._internal_motd());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.user_info_ != nullptr);
      if (_this->_impl_.user_info_ == nullptr) {
        _this->_impl_.user_info_ =
            ::google::protobuf::Message::CopyConstruct<::blokus::UserInfo>(arena, *from._impl_.user_info_);
      } else {
        _this->_impl_.user_info_->MergeFrom(*from._impl_.user_info_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.server_info_ != nullptr);
      if (_this->_impl_.server_info_ == nullptr) {
        _this->_impl_.server_info_ =
            ::google::protobuf::Message::CopyConstruct<::blokus::ServerInfo>(arena, *from._impl_.server_info_);
      } else {
        _this->_impl_.server_info_->MergeFrom(*from._impl_.server_info_);
      }
    }
  }
  if (from._internal_recommended_room_count() != 0) {
    _this->_impl_.recommended_room_count_ = from._impl_.recommended_room_count_;
  }
  if (from._internal_rank_position() != 0) {
    _this->_impl_.rank_position_ = from._impl_.rank_position_;
  }
  if (from._internal_total_players() != 0) {
    _this->_impl_.total_players_ = from._impl_.total_players_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_win_rate()) != 0) {
    _this->_impl_.win_rate_ = from._impl_.win_rate_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WelcomeMessage::CopyFrom(const WelcomeMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.WelcomeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WelcomeMessage::InternalSwap(WelcomeMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.available_game_modes_.InternalSwap(&other->_impl_.available_game_modes_);
  _impl_.daily_rewards_.InternalSwap(&other->_impl_.daily_rewards_);
  _impl_.achievements_.InternalSwap(&other->_impl_.achievements_);
  _impl_.friend_online_.InternalSwap(&other->_impl_.friend_online_);
  _impl_.system_notifications_.InternalSwap(&other->_impl_.system_notifications_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.motd_, &other->_impl_.motd_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.win_rate_)
      + sizeof(WelcomeMessage::_impl_.win_rate_)
      - PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.user_info_)>(
          reinterpret_cast<char*>(&_impl_.user_info_),
          reinterpret_cast<char*>(&other->_impl_.user_info_));
}

::google::protobuf::Metadata WelcomeMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SessionValidationRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SessionValidationRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SessionValidationRequest, _impl_._has_bits_);
};

void SessionValidationRequest::clear_last_activity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.last_activity_ != nullptr) _impl_.last_activity_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SessionValidationRequest::SessionValidationRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.SessionValidationRequest)
}
inline PROTOBUF_NDEBUG_INLINE SessionValidationRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::SessionValidationRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        session_token_(arena, from.session_token_) {}

SessionValidationRequest::SessionValidationRequest(
    ::google::protobuf::Arena* arena,
    const SessionValidationRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SessionValidationRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.last_activity_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.last_activity_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:blokus.SessionValidationRequest)
}
inline PROTOBUF_NDEBUG_INLINE SessionValidationRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        session_token_(arena) {}

inline void SessionValidationRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.last_activity_ = {};
}
SessionValidationRequest::~SessionValidationRequest() {
  // @@protoc_insertion_point(destructor:blokus.SessionValidationRequest)
  SharedDtor(*this);
}
inline void SessionValidationRequest::SharedDtor(MessageLite& self) {
  SessionValidationRequest& this_ = static_cast<SessionValidationRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.session_token_.Destroy();
  delete this_._impl_.last_activity_;
  this_._impl_.~Impl_();
}

inline void* SessionValidationRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SessionValidationRequest(arena);
}
constexpr auto SessionValidationRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SessionValidationRequest),
                                            alignof(SessionValidationRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SessionValidationRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SessionValidationRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SessionValidationRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SessionValidationRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SessionValidationRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SessionValidationRequest>(), &SessionValidationRequest::ByteSizeLong,
            &SessionValidationRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SessionValidationRequest, _impl_._cached_size_),
        false,
    },
    &SessionValidationRequest::kDescriptorMethods,
    &descriptor_table_auth_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SessionValidationRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 53, 2> SessionValidationRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SessionValidationRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::SessionValidationRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Timestamp last_activity = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SessionValidationRequest, _impl_.last_activity_)}},
    // string session_token = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SessionValidationRequest, _impl_.session_token_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string session_token = 1;
    {PROTOBUF_FIELD_OFFSET(SessionValidationRequest, _impl_.session_token_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp last_activity = 2;
    {PROTOBUF_FIELD_OFFSET(SessionValidationRequest, _impl_.last_activity_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\37\15\0\0\0\0\0\0"
    "blokus.SessionValidationRequest"
    "session_token"
  }},
};

PROTOBUF_NOINLINE void SessionValidationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.SessionValidationRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.session_token_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.last_activity_ != nullptr);
    _impl_.last_activity_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SessionValidationRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SessionValidationRequest& this_ = static_cast<const SessionValidationRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SessionValidationRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SessionValidationRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.SessionValidationRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string session_token = 1;
          if (!this_._internal_session_token().empty()) {
            const std::string& _s = this_._internal_session_token();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.SessionValidationRequest.session_token");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp last_activity = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.last_activity_, this_._impl_.last_activity_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.SessionValidationRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SessionValidationRequest::ByteSizeLong(const MessageLite& base) {
          const SessionValidationRequest& this_ = static_cast<const SessionValidationRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SessionValidationRequest::ByteSizeLong() const {
          const SessionValidationRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.SessionValidationRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string session_token = 1;
            if (!this_._internal_session_token().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_session_token());
            }
          }
           {
            // .google.protobuf.Timestamp last_activity = 2;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.last_activity_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SessionValidationRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SessionValidationRequest*>(&to_msg);
  auto& from = static_cast<const SessionValidationRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.SessionValidationRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_session_token().empty()) {
    _this->_internal_set_session_token(from._internal_session_token());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.last_activity_ != nullptr);
    if (_this->_impl_.last_activity_ == nullptr) {
      _this->_impl_.last_activity_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.last_activity_);
    } else {
      _this->_impl_.last_activity_->MergeFrom(*from._impl_.last_activity_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SessionValidationRequest::CopyFrom(const SessionValidationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.SessionValidationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SessionValidationRequest::InternalSwap(SessionValidationRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_token_, &other->_impl_.session_token_, arena);
  swap(_impl_.last_activity_, other->_impl_.last_activity_);
}

::google::protobuf::Metadata SessionValidationRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SessionValidationResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SessionValidationResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SessionValidationResponse, _impl_._has_bits_);
};

void SessionValidationResponse::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.result_ != nullptr) _impl_.result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void SessionValidationResponse::clear_expires_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.expires_at_ != nullptr) _impl_.expires_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
SessionValidationResponse::SessionValidationResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.SessionValidationResponse)
}
inline PROTOBUF_NDEBUG_INLINE SessionValidationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::SessionValidationResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        new_token_(arena, from.new_token_) {}

SessionValidationResponse::SessionValidationResponse(
    ::google::protobuf::Arena* arena,
    const SessionValidationResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SessionValidationResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::blokus::Result>(
                              arena, *from._impl_.result_)
                        : nullptr;
  _impl_.expires_at_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.expires_at_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_valid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, is_valid_),
           offsetof(Impl_, requires_renewal_) -
               offsetof(Impl_, is_valid_) +
               sizeof(Impl_::requires_renewal_));

  // @@protoc_insertion_point(copy_constructor:blokus.SessionValidationResponse)
}
inline PROTOBUF_NDEBUG_INLINE SessionValidationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        new_token_(arena) {}

inline void SessionValidationResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, result_),
           0,
           offsetof(Impl_, requires_renewal_) -
               offsetof(Impl_, result_) +
               sizeof(Impl_::requires_renewal_));
}
SessionValidationResponse::~SessionValidationResponse() {
  // @@protoc_insertion_point(destructor:blokus.SessionValidationResponse)
  SharedDtor(*this);
}
inline void SessionValidationResponse::SharedDtor(MessageLite& self) {
  SessionValidationResponse& this_ = static_cast<SessionValidationResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.new_token_.Destroy();
  delete this_._impl_.result_;
  delete this_._impl_.expires_at_;
  this_._impl_.~Impl_();
}

inline void* SessionValidationResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SessionValidationResponse(arena);
}
constexpr auto SessionValidationResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SessionValidationResponse),
                                            alignof(SessionValidationResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SessionValidationResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SessionValidationResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SessionValidationResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SessionValidationResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SessionValidationResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SessionValidationResponse>(), &SessionValidationResponse::ByteSizeLong,
            &SessionValidationResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SessionValidationResponse, _impl_._cached_size_),
        false,
    },
    &SessionValidationResponse::kDescriptorMethods,
    &descriptor_table_auth_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SessionValidationResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 50, 2> SessionValidationResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SessionValidationResponse, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::SessionValidationResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .blokus.Result result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SessionValidationResponse, _impl_.result_)}},
    // bool is_valid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SessionValidationResponse, _impl_.is_valid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SessionValidationResponse, _impl_.is_valid_)}},
    // .google.protobuf.Timestamp expires_at = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(SessionValidationResponse, _impl_.expires_at_)}},
    // bool requires_renewal = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SessionValidationResponse, _impl_.requires_renewal_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SessionValidationResponse, _impl_.requires_renewal_)}},
    // string new_token = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(SessionValidationResponse, _impl_.new_token_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .blokus.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(SessionValidationResponse, _impl_.result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool is_valid = 2;
    {PROTOBUF_FIELD_OFFSET(SessionValidationResponse, _impl_.is_valid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .google.protobuf.Timestamp expires_at = 3;
    {PROTOBUF_FIELD_OFFSET(SessionValidationResponse, _impl_.expires_at_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool requires_renewal = 4;
    {PROTOBUF_FIELD_OFFSET(SessionValidationResponse, _impl_.requires_renewal_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string new_token = 5;
    {PROTOBUF_FIELD_OFFSET(SessionValidationResponse, _impl_.new_token_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::blokus::Result>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\40\0\0\0\0\11\0\0"
    "blokus.SessionValidationResponse"
    "new_token"
  }},
};

PROTOBUF_NOINLINE void SessionValidationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.SessionValidationResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.new_token_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.result_ != nullptr);
      _impl_.result_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.expires_at_ != nullptr);
      _impl_.expires_at_->Clear();
    }
  }
  ::memset(&_impl_.is_valid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.requires_renewal_) -
      reinterpret_cast<char*>(&_impl_.is_valid_)) + sizeof(_impl_.requires_renewal_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SessionValidationResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SessionValidationResponse& this_ = static_cast<const SessionValidationResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SessionValidationResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SessionValidationResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.SessionValidationResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .blokus.Result result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.result_, this_._impl_.result_->GetCachedSize(), target,
                stream);
          }

          // bool is_valid = 2;
          if (this_._internal_is_valid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_is_valid(), target);
          }

          // .google.protobuf.Timestamp expires_at = 3;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.expires_at_, this_._impl_.expires_at_->GetCachedSize(), target,
                stream);
          }

          // bool requires_renewal = 4;
          if (this_._internal_requires_renewal() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_requires_renewal(), target);
          }

          // string new_token = 5;
          if (!this_._internal_new_token().empty()) {
            const std::string& _s = this_._internal_new_token();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.SessionValidationResponse.new_token");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.SessionValidationResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SessionValidationResponse::ByteSizeLong(const MessageLite& base) {
          const SessionValidationResponse& this_ = static_cast<const SessionValidationResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SessionValidationResponse::ByteSizeLong() const {
          const SessionValidationResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.SessionValidationResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string new_token = 5;
            if (!this_._internal_new_token().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_new_token());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .blokus.Result result = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.result_);
            }
            // .google.protobuf.Timestamp expires_at = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.expires_at_);
            }
          }
           {
            // bool is_valid = 2;
            if (this_._internal_is_valid() != 0) {
              total_size += 2;
            }
            // bool requires_renewal = 4;
            if (this_._internal_requires_renewal() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SessionValidationResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SessionValidationResponse*>(&to_msg);
  auto& from = static_cast<const SessionValidationResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.SessionValidationResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_new_token().empty()) {
    _this->_internal_set_new_token(from._internal_new_token());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.result_ != nullptr);
      if (_this->_impl_.result_ == nullptr) {
        _this->_impl_.result_ =
            ::google::protobuf::Message::CopyConstruct<::blokus::Result>(arena, *from._impl_.result_);
      } else {
        _this->_impl_.result_->MergeFrom(*from._impl_.result_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.expires_at_ != nullptr);
      if (_this->_impl_.expires_at_ == nullptr) {
        _this->_impl_.expires_at_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.expires_at_);
      } else {
        _this->_impl_.expires_at_->MergeFrom(*from._impl_.expires_at_);
      }
    }
  }
  if (from._internal_is_valid() != 0) {
    _this->_impl_.is_valid_ = from._impl_.is_valid_;
  }
  if (from._internal_requires_renewal() != 0) {
    _this->_impl_.requires_renewal_ = from._impl_.requires_renewal_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SessionValidationResponse::CopyFrom(const SessionValidationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.SessionValidationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SessionValidationResponse::InternalSwap(SessionValidationResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.new_token_, &other->_impl_.new_token_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SessionValidationResponse, _impl_.requires_renewal_)
      + sizeof(SessionValidationResponse::_impl_.requires_renewal_)
      - PROTOBUF_FIELD_OFFSET(SessionValidationResponse, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::google::protobuf::Metadata SessionValidationResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PasswordResetRequest::_Internal {
 public:
};

PasswordResetRequest::PasswordResetRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.PasswordResetRequest)
}
inline PROTOBUF_NDEBUG_INLINE PasswordResetRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::PasswordResetRequest& from_msg)
      : email_(arena, from.email_),
        username_(arena, from.username_),
        captcha_response_(arena, from.captcha_response_),
        _cached_size_{0} {}

PasswordResetRequest::PasswordResetRequest(
    ::google::protobuf::Arena* arena,
    const PasswordResetRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PasswordResetRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:blokus.PasswordResetRequest)
}
inline PROTOBUF_NDEBUG_INLINE PasswordResetRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : email_(arena),
        username_(arena),
        captcha_response_(arena),
        _cached_size_{0} {}

inline void PasswordResetRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PasswordResetRequest::~PasswordResetRequest() {
  // @@protoc_insertion_point(destructor:blokus.PasswordResetRequest)
  SharedDtor(*this);
}
inline void PasswordResetRequest::SharedDtor(MessageLite& self) {
  PasswordResetRequest& this_ = static_cast<PasswordResetRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.email_.Destroy();
  this_._impl_.username_.Destroy();
  this_._impl_.captcha_response_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PasswordResetRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PasswordResetRequest(arena);
}
constexpr auto PasswordResetRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PasswordResetRequest),
                                            alignof(PasswordResetRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PasswordResetRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PasswordResetRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PasswordResetRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PasswordResetRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PasswordResetRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PasswordResetRequest>(), &PasswordResetRequest::ByteSizeLong,
            &PasswordResetRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PasswordResetRequest, _impl_._cached_size_),
        false,
    },
    &PasswordResetRequest::kDescriptorMethods,
    &descriptor_table_auth_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PasswordResetRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 65, 2> PasswordResetRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::PasswordResetRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string email = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PasswordResetRequest, _impl_.email_)}},
    // string username = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PasswordResetRequest, _impl_.username_)}},
    // string captcha_response = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PasswordResetRequest, _impl_.captcha_response_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string email = 1;
    {PROTOBUF_FIELD_OFFSET(PasswordResetRequest, _impl_.email_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string username = 2;
    {PROTOBUF_FIELD_OFFSET(PasswordResetRequest, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string captcha_response = 3;
    {PROTOBUF_FIELD_OFFSET(PasswordResetRequest, _impl_.captcha_response_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\5\10\20\0\0\0\0"
    "blokus.PasswordResetRequest"
    "email"
    "username"
    "captcha_response"
  }},
};

PROTOBUF_NOINLINE void PasswordResetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.PasswordResetRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.email_.ClearToEmpty();
  _impl_.username_.ClearToEmpty();
  _impl_.captcha_response_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PasswordResetRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PasswordResetRequest& this_ = static_cast<const PasswordResetRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PasswordResetRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PasswordResetRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.PasswordResetRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string email = 1;
          if (!this_._internal_email().empty()) {
            const std::string& _s = this_._internal_email();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.PasswordResetRequest.email");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string username = 2;
          if (!this_._internal_username().empty()) {
            const std::string& _s = this_._internal_username();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.PasswordResetRequest.username");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string captcha_response = 3;
          if (!this_._internal_captcha_response().empty()) {
            const std::string& _s = this_._internal_captcha_response();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.PasswordResetRequest.captcha_response");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.PasswordResetRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PasswordResetRequest::ByteSizeLong(const MessageLite& base) {
          const PasswordResetRequest& this_ = static_cast<const PasswordResetRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PasswordResetRequest::ByteSizeLong() const {
          const PasswordResetRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.PasswordResetRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string email = 1;
            if (!this_._internal_email().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_email());
            }
            // string username = 2;
            if (!this_._internal_username().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_username());
            }
            // string captcha_response = 3;
            if (!this_._internal_captcha_response().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_captcha_response());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PasswordResetRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PasswordResetRequest*>(&to_msg);
  auto& from = static_cast<const PasswordResetRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.PasswordResetRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_email().empty()) {
    _this->_internal_set_email(from._internal_email());
  }
  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_captcha_response().empty()) {
    _this->_internal_set_captcha_response(from._internal_captcha_response());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PasswordResetRequest::CopyFrom(const PasswordResetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.PasswordResetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PasswordResetRequest::InternalSwap(PasswordResetRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.email_, &other->_impl_.email_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.captcha_response_, &other->_impl_.captcha_response_, arena);
}

::google::protobuf::Metadata PasswordResetRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PasswordResetResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PasswordResetResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PasswordResetResponse, _impl_._has_bits_);
};

void PasswordResetResponse::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.result_ != nullptr) _impl_.result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
PasswordResetResponse::PasswordResetResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.PasswordResetResponse)
}
inline PROTOBUF_NDEBUG_INLINE PasswordResetResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::PasswordResetResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        message_(arena, from.message_),
        masked_email_(arena, from.masked_email_) {}

PasswordResetResponse::PasswordResetResponse(
    ::google::protobuf::Arena* arena,
    const PasswordResetResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PasswordResetResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::blokus::Result>(
                              arena, *from._impl_.result_)
                        : nullptr;
  _impl_.email_sent_ = from._impl_.email_sent_;

  // @@protoc_insertion_point(copy_constructor:blokus.PasswordResetResponse)
}
inline PROTOBUF_NDEBUG_INLINE PasswordResetResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        message_(arena),
        masked_email_(arena) {}

inline void PasswordResetResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, result_),
           0,
           offsetof(Impl_, email_sent_) -
               offsetof(Impl_, result_) +
               sizeof(Impl_::email_sent_));
}
PasswordResetResponse::~PasswordResetResponse() {
  // @@protoc_insertion_point(destructor:blokus.PasswordResetResponse)
  SharedDtor(*this);
}
inline void PasswordResetResponse::SharedDtor(MessageLite& self) {
  PasswordResetResponse& this_ = static_cast<PasswordResetResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.masked_email_.Destroy();
  delete this_._impl_.result_;
  this_._impl_.~Impl_();
}

inline void* PasswordResetResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PasswordResetResponse(arena);
}
constexpr auto PasswordResetResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PasswordResetResponse),
                                            alignof(PasswordResetResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PasswordResetResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PasswordResetResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PasswordResetResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PasswordResetResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PasswordResetResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PasswordResetResponse>(), &PasswordResetResponse::ByteSizeLong,
            &PasswordResetResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PasswordResetResponse, _impl_._cached_size_),
        false,
    },
    &PasswordResetResponse::kDescriptorMethods,
    &descriptor_table_auth_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PasswordResetResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 56, 2> PasswordResetResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PasswordResetResponse, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::PasswordResetResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string masked_email = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PasswordResetResponse, _impl_.masked_email_)}},
    // .blokus.Result result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PasswordResetResponse, _impl_.result_)}},
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PasswordResetResponse, _impl_.message_)}},
    // bool email_sent = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PasswordResetResponse, _impl_.email_sent_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PasswordResetResponse, _impl_.email_sent_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .blokus.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(PasswordResetResponse, _impl_.result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(PasswordResetResponse, _impl_.message_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool email_sent = 3;
    {PROTOBUF_FIELD_OFFSET(PasswordResetResponse, _impl_.email_sent_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string masked_email = 4;
    {PROTOBUF_FIELD_OFFSET(PasswordResetResponse, _impl_.masked_email_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::blokus::Result>()},
  }}, {{
    "\34\0\7\0\14\0\0\0"
    "blokus.PasswordResetResponse"
    "message"
    "masked_email"
  }},
};

PROTOBUF_NOINLINE void PasswordResetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.PasswordResetResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.masked_email_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.result_ != nullptr);
    _impl_.result_->Clear();
  }
  _impl_.email_sent_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PasswordResetResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PasswordResetResponse& this_ = static_cast<const PasswordResetResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PasswordResetResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PasswordResetResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.PasswordResetResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .blokus.Result result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.result_, this_._impl_.result_->GetCachedSize(), target,
                stream);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.PasswordResetResponse.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // bool email_sent = 3;
          if (this_._internal_email_sent() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_email_sent(), target);
          }

          // string masked_email = 4;
          if (!this_._internal_masked_email().empty()) {
            const std::string& _s = this_._internal_masked_email();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.PasswordResetResponse.masked_email");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.PasswordResetResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PasswordResetResponse::ByteSizeLong(const MessageLite& base) {
          const PasswordResetResponse& this_ = static_cast<const PasswordResetResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PasswordResetResponse::ByteSizeLong() const {
          const PasswordResetResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.PasswordResetResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // string masked_email = 4;
            if (!this_._internal_masked_email().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_masked_email());
            }
          }
           {
            // .blokus.Result result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.result_);
            }
          }
           {
            // bool email_sent = 3;
            if (this_._internal_email_sent() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PasswordResetResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PasswordResetResponse*>(&to_msg);
  auto& from = static_cast<const PasswordResetResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.PasswordResetResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (!from._internal_masked_email().empty()) {
    _this->_internal_set_masked_email(from._internal_masked_email());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.result_ != nullptr);
    if (_this->_impl_.result_ == nullptr) {
      _this->_impl_.result_ =
          ::google::protobuf::Message::CopyConstruct<::blokus::Result>(arena, *from._impl_.result_);
    } else {
      _this->_impl_.result_->MergeFrom(*from._impl_.result_);
    }
  }
  if (from._internal_email_sent() != 0) {
    _this->_impl_.email_sent_ = from._impl_.email_sent_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PasswordResetResponse::CopyFrom(const PasswordResetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.PasswordResetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PasswordResetResponse::InternalSwap(PasswordResetResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.masked_email_, &other->_impl_.masked_email_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PasswordResetResponse, _impl_.email_sent_)
      + sizeof(PasswordResetResponse::_impl_.email_sent_)
      - PROTOBUF_FIELD_OFFSET(PasswordResetResponse, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::google::protobuf::Metadata PasswordResetResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PasswordChangeRequest::_Internal {
 public:
};

PasswordChangeRequest::PasswordChangeRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.PasswordChangeRequest)
}
inline PROTOBUF_NDEBUG_INLINE PasswordChangeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::PasswordChangeRequest& from_msg)
      : current_password_(arena, from.current_password_),
        new_password_(arena, from.new_password_),
        reset_token_(arena, from.reset_token_),
        session_token_(arena, from.session_token_),
        _cached_size_{0} {}

PasswordChangeRequest::PasswordChangeRequest(
    ::google::protobuf::Arena* arena,
    const PasswordChangeRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PasswordChangeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:blokus.PasswordChangeRequest)
}
inline PROTOBUF_NDEBUG_INLINE PasswordChangeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : current_password_(arena),
        new_password_(arena),
        reset_token_(arena),
        session_token_(arena),
        _cached_size_{0} {}

inline void PasswordChangeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PasswordChangeRequest::~PasswordChangeRequest() {
  // @@protoc_insertion_point(destructor:blokus.PasswordChangeRequest)
  SharedDtor(*this);
}
inline void PasswordChangeRequest::SharedDtor(MessageLite& self) {
  PasswordChangeRequest& this_ = static_cast<PasswordChangeRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.current_password_.Destroy();
  this_._impl_.new_password_.Destroy();
  this_._impl_.reset_token_.Destroy();
  this_._impl_.session_token_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PasswordChangeRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PasswordChangeRequest(arena);
}
constexpr auto PasswordChangeRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PasswordChangeRequest),
                                            alignof(PasswordChangeRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PasswordChangeRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PasswordChangeRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PasswordChangeRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PasswordChangeRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PasswordChangeRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PasswordChangeRequest>(), &PasswordChangeRequest::ByteSizeLong,
            &PasswordChangeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PasswordChangeRequest, _impl_._cached_size_),
        false,
    },
    &PasswordChangeRequest::kDescriptorMethods,
    &descriptor_table_auth_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PasswordChangeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 89, 2> PasswordChangeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::PasswordChangeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string session_token = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PasswordChangeRequest, _impl_.session_token_)}},
    // string current_password = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PasswordChangeRequest, _impl_.current_password_)}},
    // string new_password = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PasswordChangeRequest, _impl_.new_password_)}},
    // string reset_token = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PasswordChangeRequest, _impl_.reset_token_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string current_password = 1;
    {PROTOBUF_FIELD_OFFSET(PasswordChangeRequest, _impl_.current_password_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string new_password = 2;
    {PROTOBUF_FIELD_OFFSET(PasswordChangeRequest, _impl_.new_password_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string reset_token = 3;
    {PROTOBUF_FIELD_OFFSET(PasswordChangeRequest, _impl_.reset_token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string session_token = 4;
    {PROTOBUF_FIELD_OFFSET(PasswordChangeRequest, _impl_.session_token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\20\14\13\15\0\0\0"
    "blokus.PasswordChangeRequest"
    "current_password"
    "new_password"
    "reset_token"
    "session_token"
  }},
};

PROTOBUF_NOINLINE void PasswordChangeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.PasswordChangeRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.current_password_.ClearToEmpty();
  _impl_.new_password_.ClearToEmpty();
  _impl_.reset_token_.ClearToEmpty();
  _impl_.session_token_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PasswordChangeRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PasswordChangeRequest& this_ = static_cast<const PasswordChangeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PasswordChangeRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PasswordChangeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.PasswordChangeRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string current_password = 1;
          if (!this_._internal_current_password().empty()) {
            const std::string& _s = this_._internal_current_password();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.PasswordChangeRequest.current_password");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string new_password = 2;
          if (!this_._internal_new_password().empty()) {
            const std::string& _s = this_._internal_new_password();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.PasswordChangeRequest.new_password");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string reset_token = 3;
          if (!this_._internal_reset_token().empty()) {
            const std::string& _s = this_._internal_reset_token();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.PasswordChangeRequest.reset_token");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string session_token = 4;
          if (!this_._internal_session_token().empty()) {
            const std::string& _s = this_._internal_session_token();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.PasswordChangeRequest.session_token");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.PasswordChangeRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PasswordChangeRequest::ByteSizeLong(const MessageLite& base) {
          const PasswordChangeRequest& this_ = static_cast<const PasswordChangeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PasswordChangeRequest::ByteSizeLong() const {
          const PasswordChangeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.PasswordChangeRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string current_password = 1;
            if (!this_._internal_current_password().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_current_password());
            }
            // string new_password = 2;
            if (!this_._internal_new_password().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_new_password());
            }
            // string reset_token = 3;
            if (!this_._internal_reset_token().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reset_token());
            }
            // string session_token = 4;
            if (!this_._internal_session_token().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_session_token());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PasswordChangeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PasswordChangeRequest*>(&to_msg);
  auto& from = static_cast<const PasswordChangeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.PasswordChangeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_current_password().empty()) {
    _this->_internal_set_current_password(from._internal_current_password());
  }
  if (!from._internal_new_password().empty()) {
    _this->_internal_set_new_password(from._internal_new_password());
  }
  if (!from._internal_reset_token().empty()) {
    _this->_internal_set_reset_token(from._internal_reset_token());
  }
  if (!from._internal_session_token().empty()) {
    _this->_internal_set_session_token(from._internal_session_token());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PasswordChangeRequest::CopyFrom(const PasswordChangeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.PasswordChangeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PasswordChangeRequest::InternalSwap(PasswordChangeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.current_password_, &other->_impl_.current_password_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.new_password_, &other->_impl_.new_password_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reset_token_, &other->_impl_.reset_token_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_token_, &other->_impl_.session_token_, arena);
}

::google::protobuf::Metadata PasswordChangeRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PasswordChangeResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PasswordChangeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PasswordChangeResponse, _impl_._has_bits_);
};

void PasswordChangeResponse::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.result_ != nullptr) _impl_.result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
PasswordChangeResponse::PasswordChangeResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.PasswordChangeResponse)
}
inline PROTOBUF_NDEBUG_INLINE PasswordChangeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::PasswordChangeResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        message_(arena, from.message_) {}

PasswordChangeResponse::PasswordChangeResponse(
    ::google::protobuf::Arena* arena,
    const PasswordChangeResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PasswordChangeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::blokus::Result>(
                              arena, *from._impl_.result_)
                        : nullptr;
  _impl_.requires_relogin_ = from._impl_.requires_relogin_;

  // @@protoc_insertion_point(copy_constructor:blokus.PasswordChangeResponse)
}
inline PROTOBUF_NDEBUG_INLINE PasswordChangeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        message_(arena) {}

inline void PasswordChangeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, result_),
           0,
           offsetof(Impl_, requires_relogin_) -
               offsetof(Impl_, result_) +
               sizeof(Impl_::requires_relogin_));
}
PasswordChangeResponse::~PasswordChangeResponse() {
  // @@protoc_insertion_point(destructor:blokus.PasswordChangeResponse)
  SharedDtor(*this);
}
inline void PasswordChangeResponse::SharedDtor(MessageLite& self) {
  PasswordChangeResponse& this_ = static_cast<PasswordChangeResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  delete this_._impl_.result_;
  this_._impl_.~Impl_();
}

inline void* PasswordChangeResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PasswordChangeResponse(arena);
}
constexpr auto PasswordChangeResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PasswordChangeResponse),
                                            alignof(PasswordChangeResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PasswordChangeResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PasswordChangeResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PasswordChangeResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PasswordChangeResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PasswordChangeResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PasswordChangeResponse>(), &PasswordChangeResponse::ByteSizeLong,
            &PasswordChangeResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PasswordChangeResponse, _impl_._cached_size_),
        false,
    },
    &PasswordChangeResponse::kDescriptorMethods,
    &descriptor_table_auth_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PasswordChangeResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 45, 2> PasswordChangeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PasswordChangeResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::PasswordChangeResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .blokus.Result result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PasswordChangeResponse, _impl_.result_)}},
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PasswordChangeResponse, _impl_.message_)}},
    // bool requires_relogin = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PasswordChangeResponse, _impl_.requires_relogin_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PasswordChangeResponse, _impl_.requires_relogin_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .blokus.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(PasswordChangeResponse, _impl_.result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(PasswordChangeResponse, _impl_.message_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool requires_relogin = 3;
    {PROTOBUF_FIELD_OFFSET(PasswordChangeResponse, _impl_.requires_relogin_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::blokus::Result>()},
  }}, {{
    "\35\0\7\0\0\0\0\0"
    "blokus.PasswordChangeResponse"
    "message"
  }},
};

PROTOBUF_NOINLINE void PasswordChangeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.PasswordChangeResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.result_ != nullptr);
    _impl_.result_->Clear();
  }
  _impl_.requires_relogin_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PasswordChangeResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PasswordChangeResponse& this_ = static_cast<const PasswordChangeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PasswordChangeResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PasswordChangeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.PasswordChangeResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .blokus.Result result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.result_, this_._impl_.result_->GetCachedSize(), target,
                stream);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.PasswordChangeResponse.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // bool requires_relogin = 3;
          if (this_._internal_requires_relogin() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_requires_relogin(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.PasswordChangeResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PasswordChangeResponse::ByteSizeLong(const MessageLite& base) {
          const PasswordChangeResponse& this_ = static_cast<const PasswordChangeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PasswordChangeResponse::ByteSizeLong() const {
          const PasswordChangeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.PasswordChangeResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
          }
           {
            // .blokus.Result result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.result_);
            }
          }
           {
            // bool requires_relogin = 3;
            if (this_._internal_requires_relogin() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PasswordChangeResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PasswordChangeResponse*>(&to_msg);
  auto& from = static_cast<const PasswordChangeResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.PasswordChangeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.result_ != nullptr);
    if (_this->_impl_.result_ == nullptr) {
      _this->_impl_.result_ =
          ::google::protobuf::Message::CopyConstruct<::blokus::Result>(arena, *from._impl_.result_);
    } else {
      _this->_impl_.result_->MergeFrom(*from._impl_.result_);
    }
  }
  if (from._internal_requires_relogin() != 0) {
    _this->_impl_.requires_relogin_ = from._impl_.requires_relogin_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PasswordChangeResponse::CopyFrom(const PasswordChangeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.PasswordChangeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PasswordChangeResponse::InternalSwap(PasswordChangeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PasswordChangeResponse, _impl_.requires_relogin_)
      + sizeof(PasswordChangeResponse::_impl_.requires_relogin_)
      - PROTOBUF_FIELD_OFFSET(PasswordChangeResponse, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::google::protobuf::Metadata PasswordChangeResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AccountStatusInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AccountStatusInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AccountStatusInfo, _impl_._has_bits_);
};

void AccountStatusInfo::clear_status_since() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_since_ != nullptr) _impl_.status_since_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void AccountStatusInfo::clear_status_until() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_until_ != nullptr) _impl_.status_until_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
AccountStatusInfo::AccountStatusInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.AccountStatusInfo)
}
inline PROTOBUF_NDEBUG_INLINE AccountStatusInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::AccountStatusInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        violation_history_{visibility, arena, from.violation_history_},
        status_reason_(arena, from.status_reason_),
        appeal_url_(arena, from.appeal_url_) {}

AccountStatusInfo::AccountStatusInfo(
    ::google::protobuf::Arena* arena,
    const AccountStatusInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AccountStatusInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_since_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.status_since_)
                        : nullptr;
  _impl_.status_until_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.status_until_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, status_),
           offsetof(Impl_, warning_count_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::warning_count_));

  // @@protoc_insertion_point(copy_constructor:blokus.AccountStatusInfo)
}
inline PROTOBUF_NDEBUG_INLINE AccountStatusInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        violation_history_{visibility, arena},
        status_reason_(arena),
        appeal_url_(arena) {}

inline void AccountStatusInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_since_),
           0,
           offsetof(Impl_, warning_count_) -
               offsetof(Impl_, status_since_) +
               sizeof(Impl_::warning_count_));
}
AccountStatusInfo::~AccountStatusInfo() {
  // @@protoc_insertion_point(destructor:blokus.AccountStatusInfo)
  SharedDtor(*this);
}
inline void AccountStatusInfo::SharedDtor(MessageLite& self) {
  AccountStatusInfo& this_ = static_cast<AccountStatusInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.status_reason_.Destroy();
  this_._impl_.appeal_url_.Destroy();
  delete this_._impl_.status_since_;
  delete this_._impl_.status_until_;
  this_._impl_.~Impl_();
}

inline void* AccountStatusInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AccountStatusInfo(arena);
}
constexpr auto AccountStatusInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AccountStatusInfo, _impl_.violation_history_) +
          decltype(AccountStatusInfo::_impl_.violation_history_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(AccountStatusInfo), alignof(AccountStatusInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AccountStatusInfo::PlacementNew_,
                                 sizeof(AccountStatusInfo),
                                 alignof(AccountStatusInfo));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AccountStatusInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AccountStatusInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AccountStatusInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AccountStatusInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AccountStatusInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AccountStatusInfo>(), &AccountStatusInfo::ByteSizeLong,
            &AccountStatusInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AccountStatusInfo, _impl_._cached_size_),
        false,
    },
    &AccountStatusInfo::kDescriptorMethods,
    &descriptor_table_auth_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AccountStatusInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 2, 73, 2> AccountStatusInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AccountStatusInfo, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::AccountStatusInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .blokus.AccountStatus status = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AccountStatusInfo, _impl_.status_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AccountStatusInfo, _impl_.status_)}},
    // string status_reason = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AccountStatusInfo, _impl_.status_reason_)}},
    // .google.protobuf.Timestamp status_since = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(AccountStatusInfo, _impl_.status_since_)}},
    // .google.protobuf.Timestamp status_until = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(AccountStatusInfo, _impl_.status_until_)}},
    // int32 warning_count = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AccountStatusInfo, _impl_.warning_count_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(AccountStatusInfo, _impl_.warning_count_)}},
    // repeated string violation_history = 6;
    {::_pbi::TcParser::FastUR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(AccountStatusInfo, _impl_.violation_history_)}},
    // string appeal_url = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(AccountStatusInfo, _impl_.appeal_url_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .blokus.AccountStatus status = 1;
    {PROTOBUF_FIELD_OFFSET(AccountStatusInfo, _impl_.status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string status_reason = 2;
    {PROTOBUF_FIELD_OFFSET(AccountStatusInfo, _impl_.status_reason_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp status_since = 3;
    {PROTOBUF_FIELD_OFFSET(AccountStatusInfo, _impl_.status_since_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp status_until = 4;
    {PROTOBUF_FIELD_OFFSET(AccountStatusInfo, _impl_.status_until_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 warning_count = 5;
    {PROTOBUF_FIELD_OFFSET(AccountStatusInfo, _impl_.warning_count_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated string violation_history = 6;
    {PROTOBUF_FIELD_OFFSET(AccountStatusInfo, _impl_.violation_history_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string appeal_url = 7;
    {PROTOBUF_FIELD_OFFSET(AccountStatusInfo, _impl_.appeal_url_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\30\0\15\0\0\0\21\12"
    "blokus.AccountStatusInfo"
    "status_reason"
    "violation_history"
    "appeal_url"
  }},
};

PROTOBUF_NOINLINE void AccountStatusInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.AccountStatusInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.violation_history_.Clear();
  _impl_.status_reason_.ClearToEmpty();
  _impl_.appeal_url_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.status_since_ != nullptr);
      _impl_.status_since_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.status_until_ != nullptr);
      _impl_.status_until_->Clear();
    }
  }
  ::memset(&_impl_.status_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.warning_count_) -
      reinterpret_cast<char*>(&_impl_.status_)) + sizeof(_impl_.warning_count_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AccountStatusInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AccountStatusInfo& this_ = static_cast<const AccountStatusInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AccountStatusInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AccountStatusInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.AccountStatusInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .blokus.AccountStatus status = 1;
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_status(), target);
          }

          // string status_reason = 2;
          if (!this_._internal_status_reason().empty()) {
            const std::string& _s = this_._internal_status_reason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.AccountStatusInfo.status_reason");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp status_since = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.status_since_, this_._impl_.status_since_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp status_until = 4;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.status_until_, this_._impl_.status_until_->GetCachedSize(), target,
                stream);
          }

          // int32 warning_count = 5;
          if (this_._internal_warning_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_warning_count(), target);
          }

          // repeated string violation_history = 6;
          for (int i = 0, n = this_._internal_violation_history_size(); i < n; ++i) {
            const auto& s = this_._internal_violation_history().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.AccountStatusInfo.violation_history");
            target = stream->WriteString(6, s, target);
          }

          // string appeal_url = 7;
          if (!this_._internal_appeal_url().empty()) {
            const std::string& _s = this_._internal_appeal_url();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.AccountStatusInfo.appeal_url");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.AccountStatusInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AccountStatusInfo::ByteSizeLong(const MessageLite& base) {
          const AccountStatusInfo& this_ = static_cast<const AccountStatusInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AccountStatusInfo::ByteSizeLong() const {
          const AccountStatusInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.AccountStatusInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string violation_history = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_violation_history().size());
              for (int i = 0, n = this_._internal_violation_history().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_violation_history().Get(i));
              }
            }
          }
           {
            // string status_reason = 2;
            if (!this_._internal_status_reason().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_status_reason());
            }
            // string appeal_url = 7;
            if (!this_._internal_appeal_url().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_appeal_url());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .google.protobuf.Timestamp status_since = 3;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_since_);
            }
            // .google.protobuf.Timestamp status_until = 4;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_until_);
            }
          }
           {
            // .blokus.AccountStatus status = 1;
            if (this_._internal_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
            }
            // int32 warning_count = 5;
            if (this_._internal_warning_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_warning_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AccountStatusInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AccountStatusInfo*>(&to_msg);
  auto& from = static_cast<const AccountStatusInfo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.AccountStatusInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_violation_history()->MergeFrom(from._internal_violation_history());
  if (!from._internal_status_reason().empty()) {
    _this->_internal_set_status_reason(from._internal_status_reason());
  }
  if (!from._internal_appeal_url().empty()) {
    _this->_internal_set_appeal_url(from._internal_appeal_url());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.status_since_ != nullptr);
      if (_this->_impl_.status_since_ == nullptr) {
        _this->_impl_.status_since_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.status_since_);
      } else {
        _this->_impl_.status_since_->MergeFrom(*from._impl_.status_since_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.status_until_ != nullptr);
      if (_this->_impl_.status_until_ == nullptr) {
        _this->_impl_.status_until_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.status_until_);
      } else {
        _this->_impl_.status_until_->MergeFrom(*from._impl_.status_until_);
      }
    }
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  if (from._internal_warning_count() != 0) {
    _this->_impl_.warning_count_ = from._impl_.warning_count_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AccountStatusInfo::CopyFrom(const AccountStatusInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.AccountStatusInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AccountStatusInfo::InternalSwap(AccountStatusInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.violation_history_.InternalSwap(&other->_impl_.violation_history_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_reason_, &other->_impl_.status_reason_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.appeal_url_, &other->_impl_.appeal_url_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AccountStatusInfo, _impl_.warning_count_)
      + sizeof(AccountStatusInfo::_impl_.warning_count_)
      - PROTOBUF_FIELD_OFFSET(AccountStatusInfo, _impl_.status_since_)>(
          reinterpret_cast<char*>(&_impl_.status_since_),
          reinterpret_cast<char*>(&other->_impl_.status_since_));
}

::google::protobuf::Metadata AccountStatusInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EmailVerificationRequest::_Internal {
 public:
};

EmailVerificationRequest::EmailVerificationRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.EmailVerificationRequest)
}
inline PROTOBUF_NDEBUG_INLINE EmailVerificationRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::EmailVerificationRequest& from_msg)
      : verification_token_(arena, from.verification_token_),
        email_(arena, from.email_),
        _cached_size_{0} {}

EmailVerificationRequest::EmailVerificationRequest(
    ::google::protobuf::Arena* arena,
    const EmailVerificationRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EmailVerificationRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:blokus.EmailVerificationRequest)
}
inline PROTOBUF_NDEBUG_INLINE EmailVerificationRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : verification_token_(arena),
        email_(arena),
        _cached_size_{0} {}

inline void EmailVerificationRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
EmailVerificationRequest::~EmailVerificationRequest() {
  // @@protoc_insertion_point(destructor:blokus.EmailVerificationRequest)
  SharedDtor(*this);
}
inline void EmailVerificationRequest::SharedDtor(MessageLite& self) {
  EmailVerificationRequest& this_ = static_cast<EmailVerificationRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.verification_token_.Destroy();
  this_._impl_.email_.Destroy();
  this_._impl_.~Impl_();
}

inline void* EmailVerificationRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EmailVerificationRequest(arena);
}
constexpr auto EmailVerificationRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EmailVerificationRequest),
                                            alignof(EmailVerificationRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EmailVerificationRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EmailVerificationRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EmailVerificationRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EmailVerificationRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EmailVerificationRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EmailVerificationRequest>(), &EmailVerificationRequest::ByteSizeLong,
            &EmailVerificationRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EmailVerificationRequest, _impl_._cached_size_),
        false,
    },
    &EmailVerificationRequest::kDescriptorMethods,
    &descriptor_table_auth_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EmailVerificationRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 63, 2> EmailVerificationRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::EmailVerificationRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string email = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EmailVerificationRequest, _impl_.email_)}},
    // string verification_token = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EmailVerificationRequest, _impl_.verification_token_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string verification_token = 1;
    {PROTOBUF_FIELD_OFFSET(EmailVerificationRequest, _impl_.verification_token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string email = 2;
    {PROTOBUF_FIELD_OFFSET(EmailVerificationRequest, _impl_.email_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\22\5\0\0\0\0\0"
    "blokus.EmailVerificationRequest"
    "verification_token"
    "email"
  }},
};

PROTOBUF_NOINLINE void EmailVerificationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.EmailVerificationRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.verification_token_.ClearToEmpty();
  _impl_.email_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EmailVerificationRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EmailVerificationRequest& this_ = static_cast<const EmailVerificationRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EmailVerificationRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EmailVerificationRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.EmailVerificationRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string verification_token = 1;
          if (!this_._internal_verification_token().empty()) {
            const std::string& _s = this_._internal_verification_token();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.EmailVerificationRequest.verification_token");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string email = 2;
          if (!this_._internal_email().empty()) {
            const std::string& _s = this_._internal_email();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.EmailVerificationRequest.email");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.EmailVerificationRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EmailVerificationRequest::ByteSizeLong(const MessageLite& base) {
          const EmailVerificationRequest& this_ = static_cast<const EmailVerificationRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EmailVerificationRequest::ByteSizeLong() const {
          const EmailVerificationRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.EmailVerificationRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string verification_token = 1;
            if (!this_._internal_verification_token().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_verification_token());
            }
            // string email = 2;
            if (!this_._internal_email().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_email());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EmailVerificationRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EmailVerificationRequest*>(&to_msg);
  auto& from = static_cast<const EmailVerificationRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.EmailVerificationRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_verification_token().empty()) {
    _this->_internal_set_verification_token(from._internal_verification_token());
  }
  if (!from._internal_email().empty()) {
    _this->_internal_set_email(from._internal_email());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EmailVerificationRequest::CopyFrom(const EmailVerificationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.EmailVerificationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EmailVerificationRequest::InternalSwap(EmailVerificationRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.verification_token_, &other->_impl_.verification_token_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.email_, &other->_impl_.email_, arena);
}

::google::protobuf::Metadata EmailVerificationRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EmailVerificationResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<EmailVerificationResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EmailVerificationResponse, _impl_._has_bits_);
};

void EmailVerificationResponse::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.result_ != nullptr) _impl_.result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void EmailVerificationResponse::clear_verified_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.verified_at_ != nullptr) _impl_.verified_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
EmailVerificationResponse::EmailVerificationResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.EmailVerificationResponse)
}
inline PROTOBUF_NDEBUG_INLINE EmailVerificationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::EmailVerificationResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        rewards_{visibility, arena, from.rewards_} {}

EmailVerificationResponse::EmailVerificationResponse(
    ::google::protobuf::Arena* arena,
    const EmailVerificationResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EmailVerificationResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::blokus::Result>(
                              arena, *from._impl_.result_)
                        : nullptr;
  _impl_.verified_at_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.verified_at_)
                        : nullptr;
  _impl_.verified_ = from._impl_.verified_;

  // @@protoc_insertion_point(copy_constructor:blokus.EmailVerificationResponse)
}
inline PROTOBUF_NDEBUG_INLINE EmailVerificationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        rewards_{visibility, arena} {}

inline void EmailVerificationResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, result_),
           0,
           offsetof(Impl_, verified_) -
               offsetof(Impl_, result_) +
               sizeof(Impl_::verified_));
}
EmailVerificationResponse::~EmailVerificationResponse() {
  // @@protoc_insertion_point(destructor:blokus.EmailVerificationResponse)
  SharedDtor(*this);
}
inline void EmailVerificationResponse::SharedDtor(MessageLite& self) {
  EmailVerificationResponse& this_ = static_cast<EmailVerificationResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.result_;
  delete this_._impl_.verified_at_;
  this_._impl_.~Impl_();
}

inline void* EmailVerificationResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EmailVerificationResponse(arena);
}
constexpr auto EmailVerificationResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(EmailVerificationResponse, _impl_.rewards_) +
          decltype(EmailVerificationResponse::_impl_.rewards_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(EmailVerificationResponse), alignof(EmailVerificationResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&EmailVerificationResponse::PlacementNew_,
                                 sizeof(EmailVerificationResponse),
                                 alignof(EmailVerificationResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EmailVerificationResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EmailVerificationResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EmailVerificationResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EmailVerificationResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EmailVerificationResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EmailVerificationResponse>(), &EmailVerificationResponse::ByteSizeLong,
            &EmailVerificationResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EmailVerificationResponse, _impl_._cached_size_),
        false,
    },
    &EmailVerificationResponse::kDescriptorMethods,
    &descriptor_table_auth_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EmailVerificationResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 48, 2> EmailVerificationResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EmailVerificationResponse, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::EmailVerificationResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string rewards = 4;
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(EmailVerificationResponse, _impl_.rewards_)}},
    // .blokus.Result result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EmailVerificationResponse, _impl_.result_)}},
    // bool verified = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(EmailVerificationResponse, _impl_.verified_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(EmailVerificationResponse, _impl_.verified_)}},
    // .google.protobuf.Timestamp verified_at = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(EmailVerificationResponse, _impl_.verified_at_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .blokus.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(EmailVerificationResponse, _impl_.result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool verified = 2;
    {PROTOBUF_FIELD_OFFSET(EmailVerificationResponse, _impl_.verified_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .google.protobuf.Timestamp verified_at = 3;
    {PROTOBUF_FIELD_OFFSET(EmailVerificationResponse, _impl_.verified_at_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string rewards = 4;
    {PROTOBUF_FIELD_OFFSET(EmailVerificationResponse, _impl_.rewards_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::blokus::Result>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\40\0\0\0\7\0\0\0"
    "blokus.EmailVerificationResponse"
    "rewards"
  }},
};

PROTOBUF_NOINLINE void EmailVerificationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.EmailVerificationResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rewards_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.result_ != nullptr);
      _impl_.result_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.verified_at_ != nullptr);
      _impl_.verified_at_->Clear();
    }
  }
  _impl_.verified_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EmailVerificationResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EmailVerificationResponse& this_ = static_cast<const EmailVerificationResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EmailVerificationResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EmailVerificationResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.EmailVerificationResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .blokus.Result result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.result_, this_._impl_.result_->GetCachedSize(), target,
                stream);
          }

          // bool verified = 2;
          if (this_._internal_verified() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_verified(), target);
          }

          // .google.protobuf.Timestamp verified_at = 3;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.verified_at_, this_._impl_.verified_at_->GetCachedSize(), target,
                stream);
          }

          // repeated string rewards = 4;
          for (int i = 0, n = this_._internal_rewards_size(); i < n; ++i) {
            const auto& s = this_._internal_rewards().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.EmailVerificationResponse.rewards");
            target = stream->WriteString(4, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.EmailVerificationResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EmailVerificationResponse::ByteSizeLong(const MessageLite& base) {
          const EmailVerificationResponse& this_ = static_cast<const EmailVerificationResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EmailVerificationResponse::ByteSizeLong() const {
          const EmailVerificationResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.EmailVerificationResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string rewards = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_rewards().size());
              for (int i = 0, n = this_._internal_rewards().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_rewards().Get(i));
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .blokus.Result result = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.result_);
            }
            // .google.protobuf.Timestamp verified_at = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.verified_at_);
            }
          }
           {
            // bool verified = 2;
            if (this_._internal_verified() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EmailVerificationResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EmailVerificationResponse*>(&to_msg);
  auto& from = static_cast<const EmailVerificationResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.EmailVerificationResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_rewards()->MergeFrom(from._internal_rewards());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.result_ != nullptr);
      if (_this->_impl_.result_ == nullptr) {
        _this->_impl_.result_ =
            ::google::protobuf::Message::CopyConstruct<::blokus::Result>(arena, *from._impl_.result_);
      } else {
        _this->_impl_.result_->MergeFrom(*from._impl_.result_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.verified_at_ != nullptr);
      if (_this->_impl_.verified_at_ == nullptr) {
        _this->_impl_.verified_at_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.verified_at_);
      } else {
        _this->_impl_.verified_at_->MergeFrom(*from._impl_.verified_at_);
      }
    }
  }
  if (from._internal_verified() != 0) {
    _this->_impl_.verified_ = from._impl_.verified_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EmailVerificationResponse::CopyFrom(const EmailVerificationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.EmailVerificationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EmailVerificationResponse::InternalSwap(EmailVerificationResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.rewards_.InternalSwap(&other->_impl_.rewards_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EmailVerificationResponse, _impl_.verified_)
      + sizeof(EmailVerificationResponse::_impl_.verified_)
      - PROTOBUF_FIELD_OFFSET(EmailVerificationResponse, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::google::protobuf::Metadata EmailVerificationResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace blokus
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_auth_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
