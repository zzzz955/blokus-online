// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: lobby.proto
// Protobuf C++ Version: 5.29.3

#include "lobby.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace blokus {

inline constexpr LeaveRoomRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        new_host_username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        room_id_{0},
        transfer_host_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LeaveRoomRequest::LeaveRoomRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LeaveRoomRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LeaveRoomRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LeaveRoomRequestDefaultTypeInternal() {}
  union {
    LeaveRoomRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LeaveRoomRequestDefaultTypeInternal _LeaveRoomRequest_default_instance_;

inline constexpr JoinRoomRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        join_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        room_id_{0},
        preferred_color_{static_cast< ::blokus::PlayerColor >(0)},
        as_spectator_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR JoinRoomRequest::JoinRoomRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct JoinRoomRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JoinRoomRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JoinRoomRequestDefaultTypeInternal() {}
  union {
    JoinRoomRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JoinRoomRequestDefaultTypeInternal _JoinRoomRequest_default_instance_;

inline constexpr GetUserStatsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        include_game_history_{false},
        include_achievements_{false},
        recent_games_count_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetUserStatsRequest::GetUserStatsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetUserStatsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetUserStatsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetUserStatsRequestDefaultTypeInternal() {}
  union {
    GetUserStatsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetUserStatsRequestDefaultTypeInternal _GetUserStatsRequest_default_instance_;

inline constexpr GetUserListRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : search_query_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_filter_{static_cast< ::blokus::UserStatus >(0)},
        page_{0},
        page_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetUserListRequest::GetUserListRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetUserListRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetUserListRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetUserListRequestDefaultTypeInternal() {}
  union {
    GetUserListRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetUserListRequestDefaultTypeInternal _GetUserListRequest_default_instance_;

inline constexpr GetRoomListRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : search_query_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        host_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        filter_{static_cast< ::blokus::RoomFilter >(0)},
        sort_order_{static_cast< ::blokus::RoomSortOrder >(0)},
        page_{0},
        page_size_{0},
        ascending_{false},
        include_private_{false},
        min_players_{0},
        max_players_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetRoomListRequest::GetRoomListRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetRoomListRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoomListRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoomListRequestDefaultTypeInternal() {}
  union {
    GetRoomListRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoomListRequestDefaultTypeInternal _GetRoomListRequest_default_instance_;

inline constexpr FriendListRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : include_offline_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FriendListRequest::FriendListRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FriendListRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FriendListRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FriendListRequestDefaultTypeInternal() {}
  union {
    FriendListRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FriendListRequestDefaultTypeInternal _FriendListRequest_default_instance_;

inline constexpr CreateRoomRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tags_{},
        room_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        game_mode_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        max_players_{0},
        turn_time_seconds_{0},
        min_rating_{0},
        is_private_{false},
        allow_ai_{false},
        spectators_allowed_{false},
        auto_start_{false},
        max_rating_{0},
        max_spectators_{0},
        ranked_game_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CreateRoomRequest::CreateRoomRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateRoomRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateRoomRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateRoomRequestDefaultTypeInternal() {}
  union {
    CreateRoomRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateRoomRequestDefaultTypeInternal _CreateRoomRequest_default_instance_;

inline constexpr AddFriendRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AddFriendRequest::AddFriendRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AddFriendRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddFriendRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddFriendRequestDefaultTypeInternal() {}
  union {
    AddFriendRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddFriendRequestDefaultTypeInternal _AddFriendRequest_default_instance_;

inline constexpr ServerAnnouncementNotification::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        valid_until_{nullptr},
        type_{static_cast< ::blokus::ServerAnnouncementNotification_AnnouncementType >(0)},
        requires_acknowledgment_{false},
        show_popup_{false},
        show_banner_{false},
        priority_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ServerAnnouncementNotification::ServerAnnouncementNotification(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ServerAnnouncementNotificationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerAnnouncementNotificationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerAnnouncementNotificationDefaultTypeInternal() {}
  union {
    ServerAnnouncementNotification _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerAnnouncementNotificationDefaultTypeInternal _ServerAnnouncementNotification_default_instance_;

inline constexpr PlayerLeftNotification::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        new_host_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        left_at_{nullptr},
        color_{static_cast< ::blokus::PlayerColor >(0)},
        was_kicked_{false},
        room_disbanded_{false} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerLeftNotification::PlayerLeftNotification(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlayerLeftNotificationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerLeftNotificationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerLeftNotificationDefaultTypeInternal() {}
  union {
    PlayerLeftNotification _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerLeftNotificationDefaultTypeInternal _PlayerLeftNotification_default_instance_;

inline constexpr MaintenanceNotification::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        details_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        start_time_{nullptr},
        end_time_{nullptr},
        force_disconnect_{false},
        warning_minutes_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MaintenanceNotification::MaintenanceNotification(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MaintenanceNotificationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MaintenanceNotificationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MaintenanceNotificationDefaultTypeInternal() {}
  union {
    MaintenanceNotification _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MaintenanceNotificationDefaultTypeInternal _MaintenanceNotification_default_instance_;

inline constexpr UserStatsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        recent_games_{},
        achievements_{},
        tier_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{nullptr},
        user_info_{nullptr},
        games_today_{0},
        games_this_week_{0},
        games_this_month_{0},
        consecutive_wins_{0},
        longest_win_streak_{0},
        average_game_duration_{0},
        favorite_color_{0},
        achievement_points_{0},
        current_rank_{0},
        rank_change_{0},
        rating_points_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UserStatsResponse::UserStatsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UserStatsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserStatsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserStatsResponseDefaultTypeInternal() {}
  union {
    UserStatsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserStatsResponseDefaultTypeInternal _UserStatsResponse_default_instance_;

inline constexpr UserListUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        user_info_{nullptr},
        updated_at_{nullptr},
        update_type_{static_cast< ::blokus::UserListUpdate_UpdateType >(0)},
        old_status_{static_cast< ::blokus::UserStatus >(0)},
        new_status_{static_cast< ::blokus::UserStatus >(0)},
        room_id_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UserListUpdate::UserListUpdate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UserListUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserListUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserListUpdateDefaultTypeInternal() {}
  union {
    UserListUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserListUpdateDefaultTypeInternal _UserListUpdate_default_instance_;

inline constexpr RoomListUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        updated_field_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        room_info_{nullptr},
        updated_at_{nullptr},
        update_type_{static_cast< ::blokus::RoomListUpdate_UpdateType >(0)},
        player_color_{static_cast< ::blokus::PlayerColor >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR RoomListUpdate::RoomListUpdate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RoomListUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoomListUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoomListUpdateDefaultTypeInternal() {}
  union {
    RoomListUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoomListUpdateDefaultTypeInternal _RoomListUpdate_default_instance_;

inline constexpr RoomListResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rooms_{},
        result_{nullptr},
        total_rooms_{0},
        current_page_{0},
        total_pages_{0},
        available_rooms_{0},
        playing_rooms_{0},
        total_players_in_lobby_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RoomListResponse::RoomListResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RoomListResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoomListResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoomListResponseDefaultTypeInternal() {}
  union {
    RoomListResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoomListResponseDefaultTypeInternal _RoomListResponse_default_instance_;

inline constexpr PlayerJoinedNotification::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        join_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_info_{nullptr},
        joined_at_{nullptr},
        user_info_{nullptr},
        color_{static_cast< ::blokus::PlayerColor >(0)},
        is_rejoining_{false} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerJoinedNotification::PlayerJoinedNotification(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlayerJoinedNotificationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerJoinedNotificationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerJoinedNotificationDefaultTypeInternal() {}
  union {
    PlayerJoinedNotification _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerJoinedNotificationDefaultTypeInternal _PlayerJoinedNotification_default_instance_;

inline constexpr LeaveRoomResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        new_host_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{nullptr},
        room_disbanded_{false} {}

template <typename>
PROTOBUF_CONSTEXPR LeaveRoomResponse::LeaveRoomResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LeaveRoomResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LeaveRoomResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LeaveRoomResponseDefaultTypeInternal() {}
  union {
    LeaveRoomResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LeaveRoomResponseDefaultTypeInternal _LeaveRoomResponse_default_instance_;

inline constexpr JoinRoomResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        player_slots_{},
        room_rules_{},
        welcome_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        failure_reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{nullptr},
        room_info_{nullptr},
        assigned_color_{static_cast< ::blokus::PlayerColor >(0)},
        is_rejoining_{false},
        queue_position_{0} {}

template <typename>
PROTOBUF_CONSTEXPR JoinRoomResponse::JoinRoomResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct JoinRoomResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JoinRoomResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JoinRoomResponseDefaultTypeInternal() {}
  union {
    JoinRoomResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JoinRoomResponseDefaultTypeInternal _JoinRoomResponse_default_instance_;

inline constexpr FriendListResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        friends_{},
        pending_requests_{},
        sent_requests_{},
        result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR FriendListResponse::FriendListResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FriendListResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FriendListResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FriendListResponseDefaultTypeInternal() {}
  union {
    FriendListResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FriendListResponseDefaultTypeInternal _FriendListResponse_default_instance_;

inline constexpr CreateRoomResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        validation_errors_{},
        join_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        suggested_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{nullptr},
        room_info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateRoomResponse::CreateRoomResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateRoomResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateRoomResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateRoomResponseDefaultTypeInternal() {}
  union {
    CreateRoomResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateRoomResponseDefaultTypeInternal _CreateRoomResponse_default_instance_;

inline constexpr AddFriendResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{nullptr},
        auto_accepted_{false} {}

template <typename>
PROTOBUF_CONSTEXPR AddFriendResponse::AddFriendResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AddFriendResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddFriendResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddFriendResponseDefaultTypeInternal() {}
  union {
    AddFriendResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddFriendResponseDefaultTypeInternal _AddFriendResponse_default_instance_;
}  // namespace blokus
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_lobby_2eproto[5];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_lobby_2eproto = nullptr;
const ::uint32_t
    TableStruct_lobby_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::blokus::GetRoomListRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::GetRoomListRequest, _impl_.filter_),
        PROTOBUF_FIELD_OFFSET(::blokus::GetRoomListRequest, _impl_.sort_order_),
        PROTOBUF_FIELD_OFFSET(::blokus::GetRoomListRequest, _impl_.ascending_),
        PROTOBUF_FIELD_OFFSET(::blokus::GetRoomListRequest, _impl_.page_),
        PROTOBUF_FIELD_OFFSET(::blokus::GetRoomListRequest, _impl_.page_size_),
        PROTOBUF_FIELD_OFFSET(::blokus::GetRoomListRequest, _impl_.search_query_),
        PROTOBUF_FIELD_OFFSET(::blokus::GetRoomListRequest, _impl_.host_name_),
        PROTOBUF_FIELD_OFFSET(::blokus::GetRoomListRequest, _impl_.min_players_),
        PROTOBUF_FIELD_OFFSET(::blokus::GetRoomListRequest, _impl_.max_players_),
        PROTOBUF_FIELD_OFFSET(::blokus::GetRoomListRequest, _impl_.include_private_),
        PROTOBUF_FIELD_OFFSET(::blokus::RoomListResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::blokus::RoomListResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::RoomListResponse, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::blokus::RoomListResponse, _impl_.rooms_),
        PROTOBUF_FIELD_OFFSET(::blokus::RoomListResponse, _impl_.total_rooms_),
        PROTOBUF_FIELD_OFFSET(::blokus::RoomListResponse, _impl_.current_page_),
        PROTOBUF_FIELD_OFFSET(::blokus::RoomListResponse, _impl_.total_pages_),
        PROTOBUF_FIELD_OFFSET(::blokus::RoomListResponse, _impl_.available_rooms_),
        PROTOBUF_FIELD_OFFSET(::blokus::RoomListResponse, _impl_.playing_rooms_),
        PROTOBUF_FIELD_OFFSET(::blokus::RoomListResponse, _impl_.total_players_in_lobby_),
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::blokus::RoomListUpdate, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::blokus::RoomListUpdate, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::RoomListUpdate, _impl_.update_type_),
        PROTOBUF_FIELD_OFFSET(::blokus::RoomListUpdate, _impl_.room_info_),
        PROTOBUF_FIELD_OFFSET(::blokus::RoomListUpdate, _impl_.updated_field_),
        PROTOBUF_FIELD_OFFSET(::blokus::RoomListUpdate, _impl_.updated_at_),
        PROTOBUF_FIELD_OFFSET(::blokus::RoomListUpdate, _impl_.player_username_),
        PROTOBUF_FIELD_OFFSET(::blokus::RoomListUpdate, _impl_.player_color_),
        ~0u,
        0,
        ~0u,
        1,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::blokus::CreateRoomRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::CreateRoomRequest, _impl_.room_name_),
        PROTOBUF_FIELD_OFFSET(::blokus::CreateRoomRequest, _impl_.is_private_),
        PROTOBUF_FIELD_OFFSET(::blokus::CreateRoomRequest, _impl_.password_),
        PROTOBUF_FIELD_OFFSET(::blokus::CreateRoomRequest, _impl_.game_mode_),
        PROTOBUF_FIELD_OFFSET(::blokus::CreateRoomRequest, _impl_.max_players_),
        PROTOBUF_FIELD_OFFSET(::blokus::CreateRoomRequest, _impl_.turn_time_seconds_),
        PROTOBUF_FIELD_OFFSET(::blokus::CreateRoomRequest, _impl_.allow_ai_),
        PROTOBUF_FIELD_OFFSET(::blokus::CreateRoomRequest, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::blokus::CreateRoomRequest, _impl_.tags_),
        PROTOBUF_FIELD_OFFSET(::blokus::CreateRoomRequest, _impl_.min_rating_),
        PROTOBUF_FIELD_OFFSET(::blokus::CreateRoomRequest, _impl_.max_rating_),
        PROTOBUF_FIELD_OFFSET(::blokus::CreateRoomRequest, _impl_.spectators_allowed_),
        PROTOBUF_FIELD_OFFSET(::blokus::CreateRoomRequest, _impl_.max_spectators_),
        PROTOBUF_FIELD_OFFSET(::blokus::CreateRoomRequest, _impl_.auto_start_),
        PROTOBUF_FIELD_OFFSET(::blokus::CreateRoomRequest, _impl_.ranked_game_),
        PROTOBUF_FIELD_OFFSET(::blokus::CreateRoomResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::blokus::CreateRoomResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::CreateRoomResponse, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::blokus::CreateRoomResponse, _impl_.room_info_),
        PROTOBUF_FIELD_OFFSET(::blokus::CreateRoomResponse, _impl_.join_token_),
        PROTOBUF_FIELD_OFFSET(::blokus::CreateRoomResponse, _impl_.validation_errors_),
        PROTOBUF_FIELD_OFFSET(::blokus::CreateRoomResponse, _impl_.suggested_name_),
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::blokus::JoinRoomRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::JoinRoomRequest, _impl_.room_id_),
        PROTOBUF_FIELD_OFFSET(::blokus::JoinRoomRequest, _impl_.password_),
        PROTOBUF_FIELD_OFFSET(::blokus::JoinRoomRequest, _impl_.join_token_),
        PROTOBUF_FIELD_OFFSET(::blokus::JoinRoomRequest, _impl_.preferred_color_),
        PROTOBUF_FIELD_OFFSET(::blokus::JoinRoomRequest, _impl_.as_spectator_),
        PROTOBUF_FIELD_OFFSET(::blokus::JoinRoomResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::blokus::JoinRoomResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::JoinRoomResponse, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::blokus::JoinRoomResponse, _impl_.room_info_),
        PROTOBUF_FIELD_OFFSET(::blokus::JoinRoomResponse, _impl_.assigned_color_),
        PROTOBUF_FIELD_OFFSET(::blokus::JoinRoomResponse, _impl_.player_slots_),
        PROTOBUF_FIELD_OFFSET(::blokus::JoinRoomResponse, _impl_.welcome_message_),
        PROTOBUF_FIELD_OFFSET(::blokus::JoinRoomResponse, _impl_.room_rules_),
        PROTOBUF_FIELD_OFFSET(::blokus::JoinRoomResponse, _impl_.is_rejoining_),
        PROTOBUF_FIELD_OFFSET(::blokus::JoinRoomResponse, _impl_.failure_reason_),
        PROTOBUF_FIELD_OFFSET(::blokus::JoinRoomResponse, _impl_.queue_position_),
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::blokus::LeaveRoomRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::LeaveRoomRequest, _impl_.room_id_),
        PROTOBUF_FIELD_OFFSET(::blokus::LeaveRoomRequest, _impl_.reason_),
        PROTOBUF_FIELD_OFFSET(::blokus::LeaveRoomRequest, _impl_.transfer_host_),
        PROTOBUF_FIELD_OFFSET(::blokus::LeaveRoomRequest, _impl_.new_host_username_),
        PROTOBUF_FIELD_OFFSET(::blokus::LeaveRoomResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::blokus::LeaveRoomResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::LeaveRoomResponse, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::blokus::LeaveRoomResponse, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::blokus::LeaveRoomResponse, _impl_.room_disbanded_),
        PROTOBUF_FIELD_OFFSET(::blokus::LeaveRoomResponse, _impl_.new_host_),
        0,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::blokus::PlayerJoinedNotification, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::blokus::PlayerJoinedNotification, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::PlayerJoinedNotification, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::blokus::PlayerJoinedNotification, _impl_.color_),
        PROTOBUF_FIELD_OFFSET(::blokus::PlayerJoinedNotification, _impl_.player_info_),
        PROTOBUF_FIELD_OFFSET(::blokus::PlayerJoinedNotification, _impl_.is_rejoining_),
        PROTOBUF_FIELD_OFFSET(::blokus::PlayerJoinedNotification, _impl_.joined_at_),
        PROTOBUF_FIELD_OFFSET(::blokus::PlayerJoinedNotification, _impl_.user_info_),
        PROTOBUF_FIELD_OFFSET(::blokus::PlayerJoinedNotification, _impl_.join_message_),
        ~0u,
        ~0u,
        0,
        ~0u,
        1,
        2,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::blokus::PlayerLeftNotification, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::blokus::PlayerLeftNotification, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::PlayerLeftNotification, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::blokus::PlayerLeftNotification, _impl_.color_),
        PROTOBUF_FIELD_OFFSET(::blokus::PlayerLeftNotification, _impl_.reason_),
        PROTOBUF_FIELD_OFFSET(::blokus::PlayerLeftNotification, _impl_.was_kicked_),
        PROTOBUF_FIELD_OFFSET(::blokus::PlayerLeftNotification, _impl_.left_at_),
        PROTOBUF_FIELD_OFFSET(::blokus::PlayerLeftNotification, _impl_.new_host_),
        PROTOBUF_FIELD_OFFSET(::blokus::PlayerLeftNotification, _impl_.room_disbanded_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::blokus::GetUserListRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::GetUserListRequest, _impl_.status_filter_),
        PROTOBUF_FIELD_OFFSET(::blokus::GetUserListRequest, _impl_.search_query_),
        PROTOBUF_FIELD_OFFSET(::blokus::GetUserListRequest, _impl_.page_),
        PROTOBUF_FIELD_OFFSET(::blokus::GetUserListRequest, _impl_.page_size_),
        PROTOBUF_FIELD_OFFSET(::blokus::UserListUpdate, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::blokus::UserListUpdate, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::UserListUpdate, _impl_.update_type_),
        PROTOBUF_FIELD_OFFSET(::blokus::UserListUpdate, _impl_.user_info_),
        PROTOBUF_FIELD_OFFSET(::blokus::UserListUpdate, _impl_.old_status_),
        PROTOBUF_FIELD_OFFSET(::blokus::UserListUpdate, _impl_.new_status_),
        PROTOBUF_FIELD_OFFSET(::blokus::UserListUpdate, _impl_.room_id_),
        PROTOBUF_FIELD_OFFSET(::blokus::UserListUpdate, _impl_.updated_at_),
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::blokus::GetUserStatsRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::GetUserStatsRequest, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::blokus::GetUserStatsRequest, _impl_.include_game_history_),
        PROTOBUF_FIELD_OFFSET(::blokus::GetUserStatsRequest, _impl_.include_achievements_),
        PROTOBUF_FIELD_OFFSET(::blokus::GetUserStatsRequest, _impl_.recent_games_count_),
        PROTOBUF_FIELD_OFFSET(::blokus::UserStatsResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::blokus::UserStatsResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::UserStatsResponse, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::blokus::UserStatsResponse, _impl_.user_info_),
        PROTOBUF_FIELD_OFFSET(::blokus::UserStatsResponse, _impl_.games_today_),
        PROTOBUF_FIELD_OFFSET(::blokus::UserStatsResponse, _impl_.games_this_week_),
        PROTOBUF_FIELD_OFFSET(::blokus::UserStatsResponse, _impl_.games_this_month_),
        PROTOBUF_FIELD_OFFSET(::blokus::UserStatsResponse, _impl_.consecutive_wins_),
        PROTOBUF_FIELD_OFFSET(::blokus::UserStatsResponse, _impl_.longest_win_streak_),
        PROTOBUF_FIELD_OFFSET(::blokus::UserStatsResponse, _impl_.average_game_duration_),
        PROTOBUF_FIELD_OFFSET(::blokus::UserStatsResponse, _impl_.favorite_color_),
        PROTOBUF_FIELD_OFFSET(::blokus::UserStatsResponse, _impl_.recent_games_),
        PROTOBUF_FIELD_OFFSET(::blokus::UserStatsResponse, _impl_.achievements_),
        PROTOBUF_FIELD_OFFSET(::blokus::UserStatsResponse, _impl_.achievement_points_),
        PROTOBUF_FIELD_OFFSET(::blokus::UserStatsResponse, _impl_.current_rank_),
        PROTOBUF_FIELD_OFFSET(::blokus::UserStatsResponse, _impl_.rank_change_),
        PROTOBUF_FIELD_OFFSET(::blokus::UserStatsResponse, _impl_.rating_points_),
        PROTOBUF_FIELD_OFFSET(::blokus::UserStatsResponse, _impl_.tier_),
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::blokus::FriendListRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::FriendListRequest, _impl_.include_offline_),
        PROTOBUF_FIELD_OFFSET(::blokus::FriendListResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::blokus::FriendListResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::FriendListResponse, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::blokus::FriendListResponse, _impl_.friends_),
        PROTOBUF_FIELD_OFFSET(::blokus::FriendListResponse, _impl_.pending_requests_),
        PROTOBUF_FIELD_OFFSET(::blokus::FriendListResponse, _impl_.sent_requests_),
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::blokus::AddFriendRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::AddFriendRequest, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::blokus::AddFriendRequest, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::blokus::AddFriendResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::blokus::AddFriendResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::AddFriendResponse, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::blokus::AddFriendResponse, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::blokus::AddFriendResponse, _impl_.auto_accepted_),
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::blokus::ServerAnnouncementNotification, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::blokus::ServerAnnouncementNotification, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::ServerAnnouncementNotification, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::blokus::ServerAnnouncementNotification, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::blokus::ServerAnnouncementNotification, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::blokus::ServerAnnouncementNotification, _impl_.url_),
        PROTOBUF_FIELD_OFFSET(::blokus::ServerAnnouncementNotification, _impl_.valid_until_),
        PROTOBUF_FIELD_OFFSET(::blokus::ServerAnnouncementNotification, _impl_.requires_acknowledgment_),
        PROTOBUF_FIELD_OFFSET(::blokus::ServerAnnouncementNotification, _impl_.show_popup_),
        PROTOBUF_FIELD_OFFSET(::blokus::ServerAnnouncementNotification, _impl_.show_banner_),
        PROTOBUF_FIELD_OFFSET(::blokus::ServerAnnouncementNotification, _impl_.priority_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::blokus::MaintenanceNotification, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::blokus::MaintenanceNotification, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::blokus::MaintenanceNotification, _impl_.start_time_),
        PROTOBUF_FIELD_OFFSET(::blokus::MaintenanceNotification, _impl_.end_time_),
        PROTOBUF_FIELD_OFFSET(::blokus::MaintenanceNotification, _impl_.reason_),
        PROTOBUF_FIELD_OFFSET(::blokus::MaintenanceNotification, _impl_.details_),
        PROTOBUF_FIELD_OFFSET(::blokus::MaintenanceNotification, _impl_.force_disconnect_),
        PROTOBUF_FIELD_OFFSET(::blokus::MaintenanceNotification, _impl_.warning_minutes_),
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::blokus::GetRoomListRequest)},
        {18, 34, -1, sizeof(::blokus::RoomListResponse)},
        {42, 56, -1, sizeof(::blokus::RoomListUpdate)},
        {62, -1, -1, sizeof(::blokus::CreateRoomRequest)},
        {85, 98, -1, sizeof(::blokus::CreateRoomResponse)},
        {103, -1, -1, sizeof(::blokus::JoinRoomRequest)},
        {116, 133, -1, sizeof(::blokus::JoinRoomResponse)},
        {142, -1, -1, sizeof(::blokus::LeaveRoomRequest)},
        {154, 166, -1, sizeof(::blokus::LeaveRoomResponse)},
        {170, 185, -1, sizeof(::blokus::PlayerJoinedNotification)},
        {192, 207, -1, sizeof(::blokus::PlayerLeftNotification)},
        {214, -1, -1, sizeof(::blokus::GetUserListRequest)},
        {226, 240, -1, sizeof(::blokus::UserListUpdate)},
        {246, -1, -1, sizeof(::blokus::GetUserStatsRequest)},
        {258, 282, -1, sizeof(::blokus::UserStatsResponse)},
        {298, -1, -1, sizeof(::blokus::FriendListRequest)},
        {307, 319, -1, sizeof(::blokus::FriendListResponse)},
        {323, -1, -1, sizeof(::blokus::AddFriendRequest)},
        {333, 344, -1, sizeof(::blokus::AddFriendResponse)},
        {347, 364, -1, sizeof(::blokus::ServerAnnouncementNotification)},
        {373, 387, -1, sizeof(::blokus::MaintenanceNotification)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::blokus::_GetRoomListRequest_default_instance_._instance,
    &::blokus::_RoomListResponse_default_instance_._instance,
    &::blokus::_RoomListUpdate_default_instance_._instance,
    &::blokus::_CreateRoomRequest_default_instance_._instance,
    &::blokus::_CreateRoomResponse_default_instance_._instance,
    &::blokus::_JoinRoomRequest_default_instance_._instance,
    &::blokus::_JoinRoomResponse_default_instance_._instance,
    &::blokus::_LeaveRoomRequest_default_instance_._instance,
    &::blokus::_LeaveRoomResponse_default_instance_._instance,
    &::blokus::_PlayerJoinedNotification_default_instance_._instance,
    &::blokus::_PlayerLeftNotification_default_instance_._instance,
    &::blokus::_GetUserListRequest_default_instance_._instance,
    &::blokus::_UserListUpdate_default_instance_._instance,
    &::blokus::_GetUserStatsRequest_default_instance_._instance,
    &::blokus::_UserStatsResponse_default_instance_._instance,
    &::blokus::_FriendListRequest_default_instance_._instance,
    &::blokus::_FriendListResponse_default_instance_._instance,
    &::blokus::_AddFriendRequest_default_instance_._instance,
    &::blokus::_AddFriendResponse_default_instance_._instance,
    &::blokus::_ServerAnnouncementNotification_default_instance_._instance,
    &::blokus::_MaintenanceNotification_default_instance_._instance,
};
const char descriptor_table_protodef_lobby_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\013lobby.proto\022\006blokus\032\037google/protobuf/t"
    "imestamp.proto\032\014common.proto\"\203\002\n\022GetRoom"
    "ListRequest\022\"\n\006filter\030\001 \001(\0162\022.blokus.Roo"
    "mFilter\022)\n\nsort_order\030\002 \001(\0162\025.blokus.Roo"
    "mSortOrder\022\021\n\tascending\030\003 \001(\010\022\014\n\004page\030\004 "
    "\001(\005\022\021\n\tpage_size\030\005 \001(\005\022\024\n\014search_query\030\006"
    " \001(\t\022\021\n\thost_name\030\007 \001(\t\022\023\n\013min_players\030\010"
    " \001(\005\022\023\n\013max_players\030\t \001(\005\022\027\n\017include_pri"
    "vate\030\n \001(\010\"\343\001\n\020RoomListResponse\022\036\n\006resul"
    "t\030\001 \001(\0132\016.blokus.Result\022\037\n\005rooms\030\002 \003(\0132\020"
    ".blokus.RoomInfo\022\023\n\013total_rooms\030\003 \001(\005\022\024\n"
    "\014current_page\030\004 \001(\005\022\023\n\013total_pages\030\005 \001(\005"
    "\022\027\n\017available_rooms\030\006 \001(\005\022\025\n\rplaying_roo"
    "ms\030\007 \001(\005\022\036\n\026total_players_in_lobby\030\010 \001(\005"
    "\"\203\003\n\016RoomListUpdate\0226\n\013update_type\030\001 \001(\016"
    "2!.blokus.RoomListUpdate.UpdateType\022#\n\tr"
    "oom_info\030\002 \001(\0132\020.blokus.RoomInfo\022\025\n\rupda"
    "ted_field\030\003 \001(\t\022.\n\nupdated_at\030\004 \001(\0132\032.go"
    "ogle.protobuf.Timestamp\022\027\n\017player_userna"
    "me\030\005 \001(\t\022)\n\014player_color\030\006 \001(\0162\023.blokus."
    "PlayerColor\"\210\001\n\nUpdateType\022\020\n\014ROOM_CREAT"
    "ED\020\000\022\020\n\014ROOM_UPDATED\020\001\022\020\n\014ROOM_DELETED\020\002"
    "\022\021\n\rPLAYER_JOINED\020\003\022\017\n\013PLAYER_LEFT\020\004\022\020\n\014"
    "GAME_STARTED\020\005\022\016\n\nGAME_ENDED\020\006\"\311\002\n\021Creat"
    "eRoomRequest\022\021\n\troom_name\030\001 \001(\t\022\022\n\nis_pr"
    "ivate\030\002 \001(\010\022\020\n\010password\030\003 \001(\t\022\021\n\tgame_mo"
    "de\030\004 \001(\t\022\023\n\013max_players\030\005 \001(\005\022\031\n\021turn_ti"
    "me_seconds\030\006 \001(\005\022\020\n\010allow_ai\030\007 \001(\010\022\023\n\013de"
    "scription\030\010 \001(\t\022\014\n\004tags\030\t \003(\t\022\022\n\nmin_rat"
    "ing\030\n \001(\005\022\022\n\nmax_rating\030\013 \001(\005\022\032\n\022spectat"
    "ors_allowed\030\017 \001(\010\022\026\n\016max_spectators\030\020 \001("
    "\005\022\022\n\nauto_start\030\021 \001(\010\022\023\n\013ranked_game\030\022 \001"
    "(\010\"\240\001\n\022CreateRoomResponse\022\036\n\006result\030\001 \001("
    "\0132\016.blokus.Result\022#\n\troom_info\030\002 \001(\0132\020.b"
    "lokus.RoomInfo\022\022\n\njoin_token\030\003 \001(\t\022\031\n\021va"
    "lidation_errors\030\n \003(\t\022\026\n\016suggested_name\030"
    "\013 \001(\t\"\214\001\n\017JoinRoomRequest\022\017\n\007room_id\030\001 \001"
    "(\005\022\020\n\010password\030\002 \001(\t\022\022\n\njoin_token\030\003 \001(\t"
    "\022,\n\017preferred_color\030\004 \001(\0162\023.blokus.Playe"
    "rColor\022\024\n\014as_spectator\030\005 \001(\010\"\241\002\n\020JoinRoo"
    "mResponse\022\036\n\006result\030\001 \001(\0132\016.blokus.Resul"
    "t\022#\n\troom_info\030\002 \001(\0132\020.blokus.RoomInfo\022+"
    "\n\016assigned_color\030\003 \001(\0162\023.blokus.PlayerCo"
    "lor\022(\n\014player_slots\030\004 \003(\0132\022.blokus.Playe"
    "rSlot\022\027\n\017welcome_message\030\005 \001(\t\022\022\n\nroom_r"
    "ules\030\006 \003(\t\022\024\n\014is_rejoining\030\007 \001(\010\022\026\n\016fail"
    "ure_reason\030\n \001(\t\022\026\n\016queue_position\030\013 \001(\005"
    "\"e\n\020LeaveRoomRequest\022\017\n\007room_id\030\001 \001(\005\022\016\n"
    "\006reason\030\002 \001(\t\022\025\n\rtransfer_host\030\003 \001(\010\022\031\n\021"
    "new_host_username\030\004 \001(\t\"n\n\021LeaveRoomResp"
    "onse\022\036\n\006result\030\001 \001(\0132\016.blokus.Result\022\017\n\007"
    "message\030\002 \001(\t\022\026\n\016room_disbanded\030\003 \001(\010\022\020\n"
    "\010new_host\030\004 \001(\t\"\371\001\n\030PlayerJoinedNotifica"
    "tion\022\020\n\010username\030\001 \001(\t\022\"\n\005color\030\002 \001(\0162\023."
    "blokus.PlayerColor\022\'\n\013player_info\030\003 \001(\0132"
    "\022.blokus.PlayerSlot\022\024\n\014is_rejoining\030\004 \001("
    "\010\022-\n\tjoined_at\030\005 \001(\0132\032.google.protobuf.T"
    "imestamp\022#\n\tuser_info\030\006 \001(\0132\020.blokus.Use"
    "rInfo\022\024\n\014join_message\030\007 \001(\t\"\311\001\n\026PlayerLe"
    "ftNotification\022\020\n\010username\030\001 \001(\t\022\"\n\005colo"
    "r\030\002 \001(\0162\023.blokus.PlayerColor\022\016\n\006reason\030\003"
    " \001(\t\022\022\n\nwas_kicked\030\004 \001(\010\022+\n\007left_at\030\005 \001("
    "\0132\032.google.protobuf.Timestamp\022\020\n\010new_hos"
    "t\030\006 \001(\t\022\026\n\016room_disbanded\030\007 \001(\010\"v\n\022GetUs"
    "erListRequest\022)\n\rstatus_filter\030\001 \001(\0162\022.b"
    "lokus.UserStatus\022\024\n\014search_query\030\002 \001(\t\022\014"
    "\n\004page\030\003 \001(\005\022\021\n\tpage_size\030\004 \001(\005\"\362\002\n\016User"
    "ListUpdate\0226\n\013update_type\030\001 \001(\0162!.blokus"
    ".UserListUpdate.UpdateType\022#\n\tuser_info\030"
    "\002 \001(\0132\020.blokus.UserInfo\022&\n\nold_status\030\003 "
    "\001(\0162\022.blokus.UserStatus\022&\n\nnew_status\030\004 "
    "\001(\0162\022.blokus.UserStatus\022\017\n\007room_id\030\005 \001(\005"
    "\022.\n\nupdated_at\030\006 \001(\0132\032.google.protobuf.T"
    "imestamp\"r\n\nUpdateType\022\017\n\013USER_ONLINE\020\000\022"
    "\020\n\014USER_OFFLINE\020\001\022\027\n\023USER_STATUS_CHANGED"
    "\020\002\022\024\n\020USER_JOINED_ROOM\020\003\022\022\n\016USER_LEFT_RO"
    "OM\020\004\"\177\n\023GetUserStatsRequest\022\020\n\010username\030"
    "\001 \001(\t\022\034\n\024include_game_history\030\002 \001(\010\022\034\n\024i"
    "nclude_achievements\030\003 \001(\010\022\032\n\022recent_game"
    "s_count\030\004 \001(\005\"\270\003\n\021UserStatsResponse\022\036\n\006r"
    "esult\030\001 \001(\0132\016.blokus.Result\022#\n\tuser_info"
    "\030\002 \001(\0132\020.blokus.UserInfo\022\023\n\013games_today\030"
    "\003 \001(\005\022\027\n\017games_this_week\030\004 \001(\005\022\030\n\020games_"
    "this_month\030\005 \001(\005\022\030\n\020consecutive_wins\030\006 \001"
    "(\005\022\032\n\022longest_win_streak\030\007 \001(\005\022\035\n\025averag"
    "e_game_duration\030\010 \001(\002\022\026\n\016favorite_color\030"
    "\t \001(\005\022\'\n\014recent_games\030\n \003(\0132\021.blokus.Gam"
    "eStats\022\024\n\014achievements\030\013 \003(\t\022\032\n\022achievem"
    "ent_points\030\014 \001(\005\022\024\n\014current_rank\030\r \001(\005\022\023"
    "\n\013rank_change\030\016 \001(\005\022\025\n\rrating_points\030\017 \001"
    "(\005\022\014\n\004tier\030\020 \001(\t\",\n\021FriendListRequest\022\027\n"
    "\017include_offline\030\001 \001(\010\"\254\001\n\022FriendListRes"
    "ponse\022\036\n\006result\030\001 \001(\0132\016.blokus.Result\022!\n"
    "\007friends\030\002 \003(\0132\020.blokus.UserInfo\022*\n\020pend"
    "ing_requests\030\003 \003(\0132\020.blokus.UserInfo\022\'\n\r"
    "sent_requests\030\004 \003(\0132\020.blokus.UserInfo\"5\n"
    "\020AddFriendRequest\022\020\n\010username\030\001 \001(\t\022\017\n\007m"
    "essage\030\002 \001(\t\"[\n\021AddFriendResponse\022\036\n\006res"
    "ult\030\001 \001(\0132\016.blokus.Result\022\017\n\007message\030\002 \001"
    "(\t\022\025\n\rauto_accepted\030\003 \001(\010\"\364\002\n\036ServerAnno"
    "uncementNotification\022E\n\004type\030\001 \001(\01627.blo"
    "kus.ServerAnnouncementNotification.Annou"
    "ncementType\022\r\n\005title\030\002 \001(\t\022\017\n\007message\030\003 "
    "\001(\t\022\013\n\003url\030\004 \001(\t\022/\n\013valid_until\030\005 \001(\0132\032."
    "google.protobuf.Timestamp\022\037\n\027requires_ac"
    "knowledgment\030\006 \001(\010\022\022\n\nshow_popup\030\007 \001(\010\022\023"
    "\n\013show_banner\030\010 \001(\010\022\020\n\010priority\030\t \001(\005\"Q\n"
    "\020AnnouncementType\022\010\n\004INFO\020\000\022\013\n\007WARNING\020\001"
    "\022\017\n\013MAINTENANCE\020\002\022\n\n\006UPDATE\020\003\022\t\n\005EVENT\020\004"
    "\"\313\001\n\027MaintenanceNotification\022.\n\nstart_ti"
    "me\030\001 \001(\0132\032.google.protobuf.Timestamp\022,\n\010"
    "end_time\030\002 \001(\0132\032.google.protobuf.Timesta"
    "mp\022\016\n\006reason\030\003 \001(\t\022\017\n\007details\030\004 \001(\t\022\030\n\020f"
    "orce_disconnect\030\005 \001(\010\022\027\n\017warning_minutes"
    "\030\006 \001(\005*\244\001\n\nRoomFilter\022\023\n\017ROOM_FILTER_ALL"
    "\020\000\022\031\n\025ROOM_FILTER_AVAILABLE\020\001\022\033\n\027ROOM_FI"
    "LTER_IN_PROGRESS\020\002\022\027\n\023ROOM_FILTER_FRIEND"
    "S\020\003\022\030\n\024ROOM_FILTER_BEGINNER\020\004\022\026\n\022ROOM_FI"
    "LTER_EXPERT\020\005*{\n\rRoomSortOrder\022\032\n\026ROOM_S"
    "ORT_CREATED_TIME\020\000\022\032\n\026ROOM_SORT_PLAYER_C"
    "OUNT\020\001\022\027\n\023ROOM_SORT_ROOM_NAME\020\002\022\031\n\025ROOM_"
    "SORT_HOST_RATING\020\003b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_lobby_2eproto_deps[2] =
    {
        &::descriptor_table_common_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_lobby_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_lobby_2eproto = {
    false,
    false,
    4866,
    descriptor_table_protodef_lobby_2eproto,
    "lobby.proto",
    &descriptor_table_lobby_2eproto_once,
    descriptor_table_lobby_2eproto_deps,
    2,
    21,
    schemas,
    file_default_instances,
    TableStruct_lobby_2eproto::offsets,
    file_level_enum_descriptors_lobby_2eproto,
    file_level_service_descriptors_lobby_2eproto,
};
namespace blokus {
const ::google::protobuf::EnumDescriptor* RoomListUpdate_UpdateType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_lobby_2eproto);
  return file_level_enum_descriptors_lobby_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t RoomListUpdate_UpdateType_internal_data_[] = {
    458752u, 0u, };
bool RoomListUpdate_UpdateType_IsValid(int value) {
  return 0 <= value && value <= 6;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr RoomListUpdate_UpdateType RoomListUpdate::ROOM_CREATED;
constexpr RoomListUpdate_UpdateType RoomListUpdate::ROOM_UPDATED;
constexpr RoomListUpdate_UpdateType RoomListUpdate::ROOM_DELETED;
constexpr RoomListUpdate_UpdateType RoomListUpdate::PLAYER_JOINED;
constexpr RoomListUpdate_UpdateType RoomListUpdate::PLAYER_LEFT;
constexpr RoomListUpdate_UpdateType RoomListUpdate::GAME_STARTED;
constexpr RoomListUpdate_UpdateType RoomListUpdate::GAME_ENDED;
constexpr RoomListUpdate_UpdateType RoomListUpdate::UpdateType_MIN;
constexpr RoomListUpdate_UpdateType RoomListUpdate::UpdateType_MAX;
constexpr int RoomListUpdate::UpdateType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* UserListUpdate_UpdateType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_lobby_2eproto);
  return file_level_enum_descriptors_lobby_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t UserListUpdate_UpdateType_internal_data_[] = {
    327680u, 0u, };
bool UserListUpdate_UpdateType_IsValid(int value) {
  return 0 <= value && value <= 4;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr UserListUpdate_UpdateType UserListUpdate::USER_ONLINE;
constexpr UserListUpdate_UpdateType UserListUpdate::USER_OFFLINE;
constexpr UserListUpdate_UpdateType UserListUpdate::USER_STATUS_CHANGED;
constexpr UserListUpdate_UpdateType UserListUpdate::USER_JOINED_ROOM;
constexpr UserListUpdate_UpdateType UserListUpdate::USER_LEFT_ROOM;
constexpr UserListUpdate_UpdateType UserListUpdate::UpdateType_MIN;
constexpr UserListUpdate_UpdateType UserListUpdate::UpdateType_MAX;
constexpr int UserListUpdate::UpdateType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* ServerAnnouncementNotification_AnnouncementType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_lobby_2eproto);
  return file_level_enum_descriptors_lobby_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t ServerAnnouncementNotification_AnnouncementType_internal_data_[] = {
    327680u, 0u, };
bool ServerAnnouncementNotification_AnnouncementType_IsValid(int value) {
  return 0 <= value && value <= 4;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr ServerAnnouncementNotification_AnnouncementType ServerAnnouncementNotification::INFO;
constexpr ServerAnnouncementNotification_AnnouncementType ServerAnnouncementNotification::WARNING;
constexpr ServerAnnouncementNotification_AnnouncementType ServerAnnouncementNotification::MAINTENANCE;
constexpr ServerAnnouncementNotification_AnnouncementType ServerAnnouncementNotification::UPDATE;
constexpr ServerAnnouncementNotification_AnnouncementType ServerAnnouncementNotification::EVENT;
constexpr ServerAnnouncementNotification_AnnouncementType ServerAnnouncementNotification::AnnouncementType_MIN;
constexpr ServerAnnouncementNotification_AnnouncementType ServerAnnouncementNotification::AnnouncementType_MAX;
constexpr int ServerAnnouncementNotification::AnnouncementType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* RoomFilter_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_lobby_2eproto);
  return file_level_enum_descriptors_lobby_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t RoomFilter_internal_data_[] = {
    393216u, 0u, };
bool RoomFilter_IsValid(int value) {
  return 0 <= value && value <= 5;
}
const ::google::protobuf::EnumDescriptor* RoomSortOrder_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_lobby_2eproto);
  return file_level_enum_descriptors_lobby_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t RoomSortOrder_internal_data_[] = {
    262144u, 0u, };
bool RoomSortOrder_IsValid(int value) {
  return 0 <= value && value <= 3;
}
// ===================================================================

class GetRoomListRequest::_Internal {
 public:
};

GetRoomListRequest::GetRoomListRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.GetRoomListRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetRoomListRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::GetRoomListRequest& from_msg)
      : search_query_(arena, from.search_query_),
        host_name_(arena, from.host_name_),
        _cached_size_{0} {}

GetRoomListRequest::GetRoomListRequest(
    ::google::protobuf::Arena* arena,
    const GetRoomListRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetRoomListRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, filter_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, filter_),
           offsetof(Impl_, max_players_) -
               offsetof(Impl_, filter_) +
               sizeof(Impl_::max_players_));

  // @@protoc_insertion_point(copy_constructor:blokus.GetRoomListRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetRoomListRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : search_query_(arena),
        host_name_(arena),
        _cached_size_{0} {}

inline void GetRoomListRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, filter_),
           0,
           offsetof(Impl_, max_players_) -
               offsetof(Impl_, filter_) +
               sizeof(Impl_::max_players_));
}
GetRoomListRequest::~GetRoomListRequest() {
  // @@protoc_insertion_point(destructor:blokus.GetRoomListRequest)
  SharedDtor(*this);
}
inline void GetRoomListRequest::SharedDtor(MessageLite& self) {
  GetRoomListRequest& this_ = static_cast<GetRoomListRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.search_query_.Destroy();
  this_._impl_.host_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GetRoomListRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetRoomListRequest(arena);
}
constexpr auto GetRoomListRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetRoomListRequest),
                                            alignof(GetRoomListRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetRoomListRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetRoomListRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetRoomListRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetRoomListRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetRoomListRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetRoomListRequest>(), &GetRoomListRequest::ByteSizeLong,
            &GetRoomListRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetRoomListRequest, _impl_._cached_size_),
        false,
    },
    &GetRoomListRequest::kDescriptorMethods,
    &descriptor_table_lobby_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetRoomListRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 0, 63, 2> GetRoomListRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::GetRoomListRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .blokus.RoomFilter filter = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetRoomListRequest, _impl_.filter_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GetRoomListRequest, _impl_.filter_)}},
    // .blokus.RoomSortOrder sort_order = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetRoomListRequest, _impl_.sort_order_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetRoomListRequest, _impl_.sort_order_)}},
    // bool ascending = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetRoomListRequest, _impl_.ascending_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GetRoomListRequest, _impl_.ascending_)}},
    // int32 page = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetRoomListRequest, _impl_.page_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(GetRoomListRequest, _impl_.page_)}},
    // int32 page_size = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetRoomListRequest, _impl_.page_size_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(GetRoomListRequest, _impl_.page_size_)}},
    // string search_query = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(GetRoomListRequest, _impl_.search_query_)}},
    // string host_name = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(GetRoomListRequest, _impl_.host_name_)}},
    // int32 min_players = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetRoomListRequest, _impl_.min_players_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(GetRoomListRequest, _impl_.min_players_)}},
    // int32 max_players = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetRoomListRequest, _impl_.max_players_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(GetRoomListRequest, _impl_.max_players_)}},
    // bool include_private = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetRoomListRequest, _impl_.include_private_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(GetRoomListRequest, _impl_.include_private_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .blokus.RoomFilter filter = 1;
    {PROTOBUF_FIELD_OFFSET(GetRoomListRequest, _impl_.filter_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .blokus.RoomSortOrder sort_order = 2;
    {PROTOBUF_FIELD_OFFSET(GetRoomListRequest, _impl_.sort_order_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bool ascending = 3;
    {PROTOBUF_FIELD_OFFSET(GetRoomListRequest, _impl_.ascending_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 page = 4;
    {PROTOBUF_FIELD_OFFSET(GetRoomListRequest, _impl_.page_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 page_size = 5;
    {PROTOBUF_FIELD_OFFSET(GetRoomListRequest, _impl_.page_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string search_query = 6;
    {PROTOBUF_FIELD_OFFSET(GetRoomListRequest, _impl_.search_query_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string host_name = 7;
    {PROTOBUF_FIELD_OFFSET(GetRoomListRequest, _impl_.host_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 min_players = 8;
    {PROTOBUF_FIELD_OFFSET(GetRoomListRequest, _impl_.min_players_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 max_players = 9;
    {PROTOBUF_FIELD_OFFSET(GetRoomListRequest, _impl_.max_players_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool include_private = 10;
    {PROTOBUF_FIELD_OFFSET(GetRoomListRequest, _impl_.include_private_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\31\0\0\0\0\0\14\11\0\0\0\0\0\0\0\0"
    "blokus.GetRoomListRequest"
    "search_query"
    "host_name"
  }},
};

PROTOBUF_NOINLINE void GetRoomListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.GetRoomListRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.search_query_.ClearToEmpty();
  _impl_.host_name_.ClearToEmpty();
  ::memset(&_impl_.filter_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.max_players_) -
      reinterpret_cast<char*>(&_impl_.filter_)) + sizeof(_impl_.max_players_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetRoomListRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetRoomListRequest& this_ = static_cast<const GetRoomListRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetRoomListRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetRoomListRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.GetRoomListRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .blokus.RoomFilter filter = 1;
          if (this_._internal_filter() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_filter(), target);
          }

          // .blokus.RoomSortOrder sort_order = 2;
          if (this_._internal_sort_order() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_sort_order(), target);
          }

          // bool ascending = 3;
          if (this_._internal_ascending() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_ascending(), target);
          }

          // int32 page = 4;
          if (this_._internal_page() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_page(), target);
          }

          // int32 page_size = 5;
          if (this_._internal_page_size() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_page_size(), target);
          }

          // string search_query = 6;
          if (!this_._internal_search_query().empty()) {
            const std::string& _s = this_._internal_search_query();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.GetRoomListRequest.search_query");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string host_name = 7;
          if (!this_._internal_host_name().empty()) {
            const std::string& _s = this_._internal_host_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.GetRoomListRequest.host_name");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // int32 min_players = 8;
          if (this_._internal_min_players() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<8>(
                    stream, this_._internal_min_players(), target);
          }

          // int32 max_players = 9;
          if (this_._internal_max_players() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<9>(
                    stream, this_._internal_max_players(), target);
          }

          // bool include_private = 10;
          if (this_._internal_include_private() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                10, this_._internal_include_private(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.GetRoomListRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetRoomListRequest::ByteSizeLong(const MessageLite& base) {
          const GetRoomListRequest& this_ = static_cast<const GetRoomListRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetRoomListRequest::ByteSizeLong() const {
          const GetRoomListRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.GetRoomListRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string search_query = 6;
            if (!this_._internal_search_query().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_search_query());
            }
            // string host_name = 7;
            if (!this_._internal_host_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_host_name());
            }
            // .blokus.RoomFilter filter = 1;
            if (this_._internal_filter() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_filter());
            }
            // .blokus.RoomSortOrder sort_order = 2;
            if (this_._internal_sort_order() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_sort_order());
            }
            // int32 page = 4;
            if (this_._internal_page() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_page());
            }
            // int32 page_size = 5;
            if (this_._internal_page_size() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_page_size());
            }
            // bool ascending = 3;
            if (this_._internal_ascending() != 0) {
              total_size += 2;
            }
            // bool include_private = 10;
            if (this_._internal_include_private() != 0) {
              total_size += 2;
            }
            // int32 min_players = 8;
            if (this_._internal_min_players() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_min_players());
            }
            // int32 max_players = 9;
            if (this_._internal_max_players() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_max_players());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetRoomListRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetRoomListRequest*>(&to_msg);
  auto& from = static_cast<const GetRoomListRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.GetRoomListRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_search_query().empty()) {
    _this->_internal_set_search_query(from._internal_search_query());
  }
  if (!from._internal_host_name().empty()) {
    _this->_internal_set_host_name(from._internal_host_name());
  }
  if (from._internal_filter() != 0) {
    _this->_impl_.filter_ = from._impl_.filter_;
  }
  if (from._internal_sort_order() != 0) {
    _this->_impl_.sort_order_ = from._impl_.sort_order_;
  }
  if (from._internal_page() != 0) {
    _this->_impl_.page_ = from._impl_.page_;
  }
  if (from._internal_page_size() != 0) {
    _this->_impl_.page_size_ = from._impl_.page_size_;
  }
  if (from._internal_ascending() != 0) {
    _this->_impl_.ascending_ = from._impl_.ascending_;
  }
  if (from._internal_include_private() != 0) {
    _this->_impl_.include_private_ = from._impl_.include_private_;
  }
  if (from._internal_min_players() != 0) {
    _this->_impl_.min_players_ = from._impl_.min_players_;
  }
  if (from._internal_max_players() != 0) {
    _this->_impl_.max_players_ = from._impl_.max_players_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetRoomListRequest::CopyFrom(const GetRoomListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.GetRoomListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetRoomListRequest::InternalSwap(GetRoomListRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.search_query_, &other->_impl_.search_query_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.host_name_, &other->_impl_.host_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetRoomListRequest, _impl_.max_players_)
      + sizeof(GetRoomListRequest::_impl_.max_players_)
      - PROTOBUF_FIELD_OFFSET(GetRoomListRequest, _impl_.filter_)>(
          reinterpret_cast<char*>(&_impl_.filter_),
          reinterpret_cast<char*>(&other->_impl_.filter_));
}

::google::protobuf::Metadata GetRoomListRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RoomListResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RoomListResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RoomListResponse, _impl_._has_bits_);
};

void RoomListResponse::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.result_ != nullptr) _impl_.result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void RoomListResponse::clear_rooms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rooms_.Clear();
}
RoomListResponse::RoomListResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.RoomListResponse)
}
inline PROTOBUF_NDEBUG_INLINE RoomListResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::RoomListResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        rooms_{visibility, arena, from.rooms_} {}

RoomListResponse::RoomListResponse(
    ::google::protobuf::Arena* arena,
    const RoomListResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RoomListResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::blokus::Result>(
                              arena, *from._impl_.result_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_rooms_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, total_rooms_),
           offsetof(Impl_, total_players_in_lobby_) -
               offsetof(Impl_, total_rooms_) +
               sizeof(Impl_::total_players_in_lobby_));

  // @@protoc_insertion_point(copy_constructor:blokus.RoomListResponse)
}
inline PROTOBUF_NDEBUG_INLINE RoomListResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        rooms_{visibility, arena} {}

inline void RoomListResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, result_),
           0,
           offsetof(Impl_, total_players_in_lobby_) -
               offsetof(Impl_, result_) +
               sizeof(Impl_::total_players_in_lobby_));
}
RoomListResponse::~RoomListResponse() {
  // @@protoc_insertion_point(destructor:blokus.RoomListResponse)
  SharedDtor(*this);
}
inline void RoomListResponse::SharedDtor(MessageLite& self) {
  RoomListResponse& this_ = static_cast<RoomListResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.result_;
  this_._impl_.~Impl_();
}

inline void* RoomListResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RoomListResponse(arena);
}
constexpr auto RoomListResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RoomListResponse, _impl_.rooms_) +
          decltype(RoomListResponse::_impl_.rooms_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(RoomListResponse), alignof(RoomListResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RoomListResponse::PlacementNew_,
                                 sizeof(RoomListResponse),
                                 alignof(RoomListResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RoomListResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RoomListResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RoomListResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RoomListResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RoomListResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RoomListResponse>(), &RoomListResponse::ByteSizeLong,
            &RoomListResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RoomListResponse, _impl_._cached_size_),
        false,
    },
    &RoomListResponse::kDescriptorMethods,
    &descriptor_table_lobby_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RoomListResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 2, 0, 2> RoomListResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RoomListResponse, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::RoomListResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 total_players_in_lobby = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RoomListResponse, _impl_.total_players_in_lobby_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(RoomListResponse, _impl_.total_players_in_lobby_)}},
    // .blokus.Result result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RoomListResponse, _impl_.result_)}},
    // repeated .blokus.RoomInfo rooms = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(RoomListResponse, _impl_.rooms_)}},
    // int32 total_rooms = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RoomListResponse, _impl_.total_rooms_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RoomListResponse, _impl_.total_rooms_)}},
    // int32 current_page = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RoomListResponse, _impl_.current_page_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(RoomListResponse, _impl_.current_page_)}},
    // int32 total_pages = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RoomListResponse, _impl_.total_pages_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(RoomListResponse, _impl_.total_pages_)}},
    // int32 available_rooms = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RoomListResponse, _impl_.available_rooms_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(RoomListResponse, _impl_.available_rooms_)}},
    // int32 playing_rooms = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RoomListResponse, _impl_.playing_rooms_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(RoomListResponse, _impl_.playing_rooms_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .blokus.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(RoomListResponse, _impl_.result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .blokus.RoomInfo rooms = 2;
    {PROTOBUF_FIELD_OFFSET(RoomListResponse, _impl_.rooms_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 total_rooms = 3;
    {PROTOBUF_FIELD_OFFSET(RoomListResponse, _impl_.total_rooms_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 current_page = 4;
    {PROTOBUF_FIELD_OFFSET(RoomListResponse, _impl_.current_page_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 total_pages = 5;
    {PROTOBUF_FIELD_OFFSET(RoomListResponse, _impl_.total_pages_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 available_rooms = 6;
    {PROTOBUF_FIELD_OFFSET(RoomListResponse, _impl_.available_rooms_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 playing_rooms = 7;
    {PROTOBUF_FIELD_OFFSET(RoomListResponse, _impl_.playing_rooms_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 total_players_in_lobby = 8;
    {PROTOBUF_FIELD_OFFSET(RoomListResponse, _impl_.total_players_in_lobby_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::blokus::Result>()},
    {::_pbi::TcParser::GetTable<::blokus::RoomInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RoomListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.RoomListResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rooms_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.result_ != nullptr);
    _impl_.result_->Clear();
  }
  ::memset(&_impl_.total_rooms_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.total_players_in_lobby_) -
      reinterpret_cast<char*>(&_impl_.total_rooms_)) + sizeof(_impl_.total_players_in_lobby_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RoomListResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RoomListResponse& this_ = static_cast<const RoomListResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RoomListResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RoomListResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.RoomListResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .blokus.Result result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.result_, this_._impl_.result_->GetCachedSize(), target,
                stream);
          }

          // repeated .blokus.RoomInfo rooms = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_rooms_size());
               i < n; i++) {
            const auto& repfield = this_._internal_rooms().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // int32 total_rooms = 3;
          if (this_._internal_total_rooms() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_total_rooms(), target);
          }

          // int32 current_page = 4;
          if (this_._internal_current_page() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_current_page(), target);
          }

          // int32 total_pages = 5;
          if (this_._internal_total_pages() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_total_pages(), target);
          }

          // int32 available_rooms = 6;
          if (this_._internal_available_rooms() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<6>(
                    stream, this_._internal_available_rooms(), target);
          }

          // int32 playing_rooms = 7;
          if (this_._internal_playing_rooms() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<7>(
                    stream, this_._internal_playing_rooms(), target);
          }

          // int32 total_players_in_lobby = 8;
          if (this_._internal_total_players_in_lobby() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<8>(
                    stream, this_._internal_total_players_in_lobby(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.RoomListResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RoomListResponse::ByteSizeLong(const MessageLite& base) {
          const RoomListResponse& this_ = static_cast<const RoomListResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RoomListResponse::ByteSizeLong() const {
          const RoomListResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.RoomListResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .blokus.RoomInfo rooms = 2;
            {
              total_size += 1UL * this_._internal_rooms_size();
              for (const auto& msg : this_._internal_rooms()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .blokus.Result result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.result_);
            }
          }
           {
            // int32 total_rooms = 3;
            if (this_._internal_total_rooms() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_total_rooms());
            }
            // int32 current_page = 4;
            if (this_._internal_current_page() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_current_page());
            }
            // int32 total_pages = 5;
            if (this_._internal_total_pages() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_total_pages());
            }
            // int32 available_rooms = 6;
            if (this_._internal_available_rooms() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_available_rooms());
            }
            // int32 playing_rooms = 7;
            if (this_._internal_playing_rooms() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_playing_rooms());
            }
            // int32 total_players_in_lobby = 8;
            if (this_._internal_total_players_in_lobby() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_total_players_in_lobby());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RoomListResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RoomListResponse*>(&to_msg);
  auto& from = static_cast<const RoomListResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.RoomListResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_rooms()->MergeFrom(
      from._internal_rooms());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.result_ != nullptr);
    if (_this->_impl_.result_ == nullptr) {
      _this->_impl_.result_ =
          ::google::protobuf::Message::CopyConstruct<::blokus::Result>(arena, *from._impl_.result_);
    } else {
      _this->_impl_.result_->MergeFrom(*from._impl_.result_);
    }
  }
  if (from._internal_total_rooms() != 0) {
    _this->_impl_.total_rooms_ = from._impl_.total_rooms_;
  }
  if (from._internal_current_page() != 0) {
    _this->_impl_.current_page_ = from._impl_.current_page_;
  }
  if (from._internal_total_pages() != 0) {
    _this->_impl_.total_pages_ = from._impl_.total_pages_;
  }
  if (from._internal_available_rooms() != 0) {
    _this->_impl_.available_rooms_ = from._impl_.available_rooms_;
  }
  if (from._internal_playing_rooms() != 0) {
    _this->_impl_.playing_rooms_ = from._impl_.playing_rooms_;
  }
  if (from._internal_total_players_in_lobby() != 0) {
    _this->_impl_.total_players_in_lobby_ = from._impl_.total_players_in_lobby_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RoomListResponse::CopyFrom(const RoomListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.RoomListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RoomListResponse::InternalSwap(RoomListResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.rooms_.InternalSwap(&other->_impl_.rooms_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RoomListResponse, _impl_.total_players_in_lobby_)
      + sizeof(RoomListResponse::_impl_.total_players_in_lobby_)
      - PROTOBUF_FIELD_OFFSET(RoomListResponse, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::google::protobuf::Metadata RoomListResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RoomListUpdate::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RoomListUpdate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RoomListUpdate, _impl_._has_bits_);
};

void RoomListUpdate::clear_room_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.room_info_ != nullptr) _impl_.room_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void RoomListUpdate::clear_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.updated_at_ != nullptr) _impl_.updated_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
RoomListUpdate::RoomListUpdate(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.RoomListUpdate)
}
inline PROTOBUF_NDEBUG_INLINE RoomListUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::RoomListUpdate& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        updated_field_(arena, from.updated_field_),
        player_username_(arena, from.player_username_) {}

RoomListUpdate::RoomListUpdate(
    ::google::protobuf::Arena* arena,
    const RoomListUpdate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RoomListUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.room_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::blokus::RoomInfo>(
                              arena, *from._impl_.room_info_)
                        : nullptr;
  _impl_.updated_at_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.updated_at_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, update_type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, update_type_),
           offsetof(Impl_, player_color_) -
               offsetof(Impl_, update_type_) +
               sizeof(Impl_::player_color_));

  // @@protoc_insertion_point(copy_constructor:blokus.RoomListUpdate)
}
inline PROTOBUF_NDEBUG_INLINE RoomListUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        updated_field_(arena),
        player_username_(arena) {}

inline void RoomListUpdate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, room_info_),
           0,
           offsetof(Impl_, player_color_) -
               offsetof(Impl_, room_info_) +
               sizeof(Impl_::player_color_));
}
RoomListUpdate::~RoomListUpdate() {
  // @@protoc_insertion_point(destructor:blokus.RoomListUpdate)
  SharedDtor(*this);
}
inline void RoomListUpdate::SharedDtor(MessageLite& self) {
  RoomListUpdate& this_ = static_cast<RoomListUpdate&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.updated_field_.Destroy();
  this_._impl_.player_username_.Destroy();
  delete this_._impl_.room_info_;
  delete this_._impl_.updated_at_;
  this_._impl_.~Impl_();
}

inline void* RoomListUpdate::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RoomListUpdate(arena);
}
constexpr auto RoomListUpdate::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RoomListUpdate),
                                            alignof(RoomListUpdate));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RoomListUpdate::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RoomListUpdate_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RoomListUpdate::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RoomListUpdate>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RoomListUpdate::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RoomListUpdate>(), &RoomListUpdate::ByteSizeLong,
            &RoomListUpdate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RoomListUpdate, _impl_._cached_size_),
        false,
    },
    &RoomListUpdate::kDescriptorMethods,
    &descriptor_table_lobby_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RoomListUpdate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 58, 2> RoomListUpdate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RoomListUpdate, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::RoomListUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .blokus.RoomListUpdate.UpdateType update_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RoomListUpdate, _impl_.update_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RoomListUpdate, _impl_.update_type_)}},
    // .blokus.RoomInfo room_info = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(RoomListUpdate, _impl_.room_info_)}},
    // string updated_field = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(RoomListUpdate, _impl_.updated_field_)}},
    // .google.protobuf.Timestamp updated_at = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(RoomListUpdate, _impl_.updated_at_)}},
    // string player_username = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(RoomListUpdate, _impl_.player_username_)}},
    // .blokus.PlayerColor player_color = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RoomListUpdate, _impl_.player_color_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(RoomListUpdate, _impl_.player_color_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .blokus.RoomListUpdate.UpdateType update_type = 1;
    {PROTOBUF_FIELD_OFFSET(RoomListUpdate, _impl_.update_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .blokus.RoomInfo room_info = 2;
    {PROTOBUF_FIELD_OFFSET(RoomListUpdate, _impl_.room_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string updated_field = 3;
    {PROTOBUF_FIELD_OFFSET(RoomListUpdate, _impl_.updated_field_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp updated_at = 4;
    {PROTOBUF_FIELD_OFFSET(RoomListUpdate, _impl_.updated_at_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string player_username = 5;
    {PROTOBUF_FIELD_OFFSET(RoomListUpdate, _impl_.player_username_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .blokus.PlayerColor player_color = 6;
    {PROTOBUF_FIELD_OFFSET(RoomListUpdate, _impl_.player_color_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::blokus::RoomInfo>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\25\0\0\15\0\17\0\0"
    "blokus.RoomListUpdate"
    "updated_field"
    "player_username"
  }},
};

PROTOBUF_NOINLINE void RoomListUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.RoomListUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.updated_field_.ClearToEmpty();
  _impl_.player_username_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.room_info_ != nullptr);
      _impl_.room_info_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.updated_at_ != nullptr);
      _impl_.updated_at_->Clear();
    }
  }
  ::memset(&_impl_.update_type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.player_color_) -
      reinterpret_cast<char*>(&_impl_.update_type_)) + sizeof(_impl_.player_color_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RoomListUpdate::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RoomListUpdate& this_ = static_cast<const RoomListUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RoomListUpdate::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RoomListUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.RoomListUpdate)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .blokus.RoomListUpdate.UpdateType update_type = 1;
          if (this_._internal_update_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_update_type(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .blokus.RoomInfo room_info = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.room_info_, this_._impl_.room_info_->GetCachedSize(), target,
                stream);
          }

          // string updated_field = 3;
          if (!this_._internal_updated_field().empty()) {
            const std::string& _s = this_._internal_updated_field();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.RoomListUpdate.updated_field");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // .google.protobuf.Timestamp updated_at = 4;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.updated_at_, this_._impl_.updated_at_->GetCachedSize(), target,
                stream);
          }

          // string player_username = 5;
          if (!this_._internal_player_username().empty()) {
            const std::string& _s = this_._internal_player_username();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.RoomListUpdate.player_username");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // .blokus.PlayerColor player_color = 6;
          if (this_._internal_player_color() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                6, this_._internal_player_color(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.RoomListUpdate)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RoomListUpdate::ByteSizeLong(const MessageLite& base) {
          const RoomListUpdate& this_ = static_cast<const RoomListUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RoomListUpdate::ByteSizeLong() const {
          const RoomListUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.RoomListUpdate)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string updated_field = 3;
            if (!this_._internal_updated_field().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_updated_field());
            }
            // string player_username = 5;
            if (!this_._internal_player_username().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_player_username());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .blokus.RoomInfo room_info = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.room_info_);
            }
            // .google.protobuf.Timestamp updated_at = 4;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.updated_at_);
            }
          }
           {
            // .blokus.RoomListUpdate.UpdateType update_type = 1;
            if (this_._internal_update_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_update_type());
            }
            // .blokus.PlayerColor player_color = 6;
            if (this_._internal_player_color() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_player_color());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RoomListUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RoomListUpdate*>(&to_msg);
  auto& from = static_cast<const RoomListUpdate&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.RoomListUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_updated_field().empty()) {
    _this->_internal_set_updated_field(from._internal_updated_field());
  }
  if (!from._internal_player_username().empty()) {
    _this->_internal_set_player_username(from._internal_player_username());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.room_info_ != nullptr);
      if (_this->_impl_.room_info_ == nullptr) {
        _this->_impl_.room_info_ =
            ::google::protobuf::Message::CopyConstruct<::blokus::RoomInfo>(arena, *from._impl_.room_info_);
      } else {
        _this->_impl_.room_info_->MergeFrom(*from._impl_.room_info_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.updated_at_ != nullptr);
      if (_this->_impl_.updated_at_ == nullptr) {
        _this->_impl_.updated_at_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.updated_at_);
      } else {
        _this->_impl_.updated_at_->MergeFrom(*from._impl_.updated_at_);
      }
    }
  }
  if (from._internal_update_type() != 0) {
    _this->_impl_.update_type_ = from._impl_.update_type_;
  }
  if (from._internal_player_color() != 0) {
    _this->_impl_.player_color_ = from._impl_.player_color_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RoomListUpdate::CopyFrom(const RoomListUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.RoomListUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RoomListUpdate::InternalSwap(RoomListUpdate* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.updated_field_, &other->_impl_.updated_field_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.player_username_, &other->_impl_.player_username_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RoomListUpdate, _impl_.player_color_)
      + sizeof(RoomListUpdate::_impl_.player_color_)
      - PROTOBUF_FIELD_OFFSET(RoomListUpdate, _impl_.room_info_)>(
          reinterpret_cast<char*>(&_impl_.room_info_),
          reinterpret_cast<char*>(&other->_impl_.room_info_));
}

::google::protobuf::Metadata RoomListUpdate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateRoomRequest::_Internal {
 public:
};

CreateRoomRequest::CreateRoomRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.CreateRoomRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateRoomRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::CreateRoomRequest& from_msg)
      : tags_{visibility, arena, from.tags_},
        room_name_(arena, from.room_name_),
        password_(arena, from.password_),
        game_mode_(arena, from.game_mode_),
        description_(arena, from.description_),
        _cached_size_{0} {}

CreateRoomRequest::CreateRoomRequest(
    ::google::protobuf::Arena* arena,
    const CreateRoomRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateRoomRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, max_players_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, max_players_),
           offsetof(Impl_, ranked_game_) -
               offsetof(Impl_, max_players_) +
               sizeof(Impl_::ranked_game_));

  // @@protoc_insertion_point(copy_constructor:blokus.CreateRoomRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateRoomRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : tags_{visibility, arena},
        room_name_(arena),
        password_(arena),
        game_mode_(arena),
        description_(arena),
        _cached_size_{0} {}

inline void CreateRoomRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, max_players_),
           0,
           offsetof(Impl_, ranked_game_) -
               offsetof(Impl_, max_players_) +
               sizeof(Impl_::ranked_game_));
}
CreateRoomRequest::~CreateRoomRequest() {
  // @@protoc_insertion_point(destructor:blokus.CreateRoomRequest)
  SharedDtor(*this);
}
inline void CreateRoomRequest::SharedDtor(MessageLite& self) {
  CreateRoomRequest& this_ = static_cast<CreateRoomRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.room_name_.Destroy();
  this_._impl_.password_.Destroy();
  this_._impl_.game_mode_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CreateRoomRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CreateRoomRequest(arena);
}
constexpr auto CreateRoomRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CreateRoomRequest, _impl_.tags_) +
          decltype(CreateRoomRequest::_impl_.tags_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CreateRoomRequest), alignof(CreateRoomRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CreateRoomRequest::PlacementNew_,
                                 sizeof(CreateRoomRequest),
                                 alignof(CreateRoomRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CreateRoomRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CreateRoomRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CreateRoomRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CreateRoomRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CreateRoomRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CreateRoomRequest>(), &CreateRoomRequest::ByteSizeLong,
            &CreateRoomRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CreateRoomRequest, _impl_._cached_size_),
        false,
    },
    &CreateRoomRequest::kDescriptorMethods,
    &descriptor_table_lobby_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CreateRoomRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 15, 0, 82, 2> CreateRoomRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    18, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294719488,  // skipmap
    offsetof(decltype(_table_), field_entries),
    15,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::CreateRoomRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 max_spectators = 16;
    {::_pbi::TcParser::FastV32S2,
     {384, 63, 0, PROTOBUF_FIELD_OFFSET(CreateRoomRequest, _impl_.max_spectators_)}},
    // string room_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CreateRoomRequest, _impl_.room_name_)}},
    // bool is_private = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CreateRoomRequest, _impl_.is_private_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CreateRoomRequest, _impl_.is_private_)}},
    // string password = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CreateRoomRequest, _impl_.password_)}},
    // string game_mode = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(CreateRoomRequest, _impl_.game_mode_)}},
    // int32 max_players = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CreateRoomRequest, _impl_.max_players_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(CreateRoomRequest, _impl_.max_players_)}},
    // int32 turn_time_seconds = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CreateRoomRequest, _impl_.turn_time_seconds_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(CreateRoomRequest, _impl_.turn_time_seconds_)}},
    // bool allow_ai = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CreateRoomRequest, _impl_.allow_ai_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(CreateRoomRequest, _impl_.allow_ai_)}},
    // string description = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(CreateRoomRequest, _impl_.description_)}},
    // repeated string tags = 9;
    {::_pbi::TcParser::FastUR1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(CreateRoomRequest, _impl_.tags_)}},
    // int32 min_rating = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CreateRoomRequest, _impl_.min_rating_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(CreateRoomRequest, _impl_.min_rating_)}},
    // int32 max_rating = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CreateRoomRequest, _impl_.max_rating_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(CreateRoomRequest, _impl_.max_rating_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool spectators_allowed = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CreateRoomRequest, _impl_.spectators_allowed_), 63>(),
     {120, 63, 0, PROTOBUF_FIELD_OFFSET(CreateRoomRequest, _impl_.spectators_allowed_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string room_name = 1;
    {PROTOBUF_FIELD_OFFSET(CreateRoomRequest, _impl_.room_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_private = 2;
    {PROTOBUF_FIELD_OFFSET(CreateRoomRequest, _impl_.is_private_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string password = 3;
    {PROTOBUF_FIELD_OFFSET(CreateRoomRequest, _impl_.password_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string game_mode = 4;
    {PROTOBUF_FIELD_OFFSET(CreateRoomRequest, _impl_.game_mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 max_players = 5;
    {PROTOBUF_FIELD_OFFSET(CreateRoomRequest, _impl_.max_players_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 turn_time_seconds = 6;
    {PROTOBUF_FIELD_OFFSET(CreateRoomRequest, _impl_.turn_time_seconds_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool allow_ai = 7;
    {PROTOBUF_FIELD_OFFSET(CreateRoomRequest, _impl_.allow_ai_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string description = 8;
    {PROTOBUF_FIELD_OFFSET(CreateRoomRequest, _impl_.description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string tags = 9;
    {PROTOBUF_FIELD_OFFSET(CreateRoomRequest, _impl_.tags_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // int32 min_rating = 10;
    {PROTOBUF_FIELD_OFFSET(CreateRoomRequest, _impl_.min_rating_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 max_rating = 11;
    {PROTOBUF_FIELD_OFFSET(CreateRoomRequest, _impl_.max_rating_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool spectators_allowed = 15;
    {PROTOBUF_FIELD_OFFSET(CreateRoomRequest, _impl_.spectators_allowed_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 max_spectators = 16;
    {PROTOBUF_FIELD_OFFSET(CreateRoomRequest, _impl_.max_spectators_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool auto_start = 17;
    {PROTOBUF_FIELD_OFFSET(CreateRoomRequest, _impl_.auto_start_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool ranked_game = 18;
    {PROTOBUF_FIELD_OFFSET(CreateRoomRequest, _impl_.ranked_game_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\30\11\0\10\11\0\0\0\13\4\0\0\0\0\0\0"
    "blokus.CreateRoomRequest"
    "room_name"
    "password"
    "game_mode"
    "description"
    "tags"
  }},
};

PROTOBUF_NOINLINE void CreateRoomRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.CreateRoomRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tags_.Clear();
  _impl_.room_name_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  _impl_.game_mode_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  ::memset(&_impl_.max_players_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.ranked_game_) -
      reinterpret_cast<char*>(&_impl_.max_players_)) + sizeof(_impl_.ranked_game_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CreateRoomRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CreateRoomRequest& this_ = static_cast<const CreateRoomRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CreateRoomRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CreateRoomRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.CreateRoomRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string room_name = 1;
          if (!this_._internal_room_name().empty()) {
            const std::string& _s = this_._internal_room_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.CreateRoomRequest.room_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bool is_private = 2;
          if (this_._internal_is_private() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_is_private(), target);
          }

          // string password = 3;
          if (!this_._internal_password().empty()) {
            const std::string& _s = this_._internal_password();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.CreateRoomRequest.password");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string game_mode = 4;
          if (!this_._internal_game_mode().empty()) {
            const std::string& _s = this_._internal_game_mode();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.CreateRoomRequest.game_mode");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // int32 max_players = 5;
          if (this_._internal_max_players() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_max_players(), target);
          }

          // int32 turn_time_seconds = 6;
          if (this_._internal_turn_time_seconds() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<6>(
                    stream, this_._internal_turn_time_seconds(), target);
          }

          // bool allow_ai = 7;
          if (this_._internal_allow_ai() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                7, this_._internal_allow_ai(), target);
          }

          // string description = 8;
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.CreateRoomRequest.description");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // repeated string tags = 9;
          for (int i = 0, n = this_._internal_tags_size(); i < n; ++i) {
            const auto& s = this_._internal_tags().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.CreateRoomRequest.tags");
            target = stream->WriteString(9, s, target);
          }

          // int32 min_rating = 10;
          if (this_._internal_min_rating() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<10>(
                    stream, this_._internal_min_rating(), target);
          }

          // int32 max_rating = 11;
          if (this_._internal_max_rating() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<11>(
                    stream, this_._internal_max_rating(), target);
          }

          // bool spectators_allowed = 15;
          if (this_._internal_spectators_allowed() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                15, this_._internal_spectators_allowed(), target);
          }

          // int32 max_spectators = 16;
          if (this_._internal_max_spectators() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                16, this_._internal_max_spectators(), target);
          }

          // bool auto_start = 17;
          if (this_._internal_auto_start() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                17, this_._internal_auto_start(), target);
          }

          // bool ranked_game = 18;
          if (this_._internal_ranked_game() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                18, this_._internal_ranked_game(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.CreateRoomRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CreateRoomRequest::ByteSizeLong(const MessageLite& base) {
          const CreateRoomRequest& this_ = static_cast<const CreateRoomRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CreateRoomRequest::ByteSizeLong() const {
          const CreateRoomRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.CreateRoomRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string tags = 9;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_tags().size());
              for (int i = 0, n = this_._internal_tags().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_tags().Get(i));
              }
            }
          }
           {
            // string room_name = 1;
            if (!this_._internal_room_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_room_name());
            }
            // string password = 3;
            if (!this_._internal_password().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_password());
            }
            // string game_mode = 4;
            if (!this_._internal_game_mode().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_game_mode());
            }
            // string description = 8;
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
            // int32 max_players = 5;
            if (this_._internal_max_players() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_max_players());
            }
            // int32 turn_time_seconds = 6;
            if (this_._internal_turn_time_seconds() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_turn_time_seconds());
            }
            // int32 min_rating = 10;
            if (this_._internal_min_rating() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_min_rating());
            }
            // bool is_private = 2;
            if (this_._internal_is_private() != 0) {
              total_size += 2;
            }
            // bool allow_ai = 7;
            if (this_._internal_allow_ai() != 0) {
              total_size += 2;
            }
            // bool spectators_allowed = 15;
            if (this_._internal_spectators_allowed() != 0) {
              total_size += 2;
            }
            // bool auto_start = 17;
            if (this_._internal_auto_start() != 0) {
              total_size += 3;
            }
            // int32 max_rating = 11;
            if (this_._internal_max_rating() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_max_rating());
            }
            // int32 max_spectators = 16;
            if (this_._internal_max_spectators() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_max_spectators());
            }
            // bool ranked_game = 18;
            if (this_._internal_ranked_game() != 0) {
              total_size += 3;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CreateRoomRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateRoomRequest*>(&to_msg);
  auto& from = static_cast<const CreateRoomRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.CreateRoomRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tags()->MergeFrom(from._internal_tags());
  if (!from._internal_room_name().empty()) {
    _this->_internal_set_room_name(from._internal_room_name());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  if (!from._internal_game_mode().empty()) {
    _this->_internal_set_game_mode(from._internal_game_mode());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (from._internal_max_players() != 0) {
    _this->_impl_.max_players_ = from._impl_.max_players_;
  }
  if (from._internal_turn_time_seconds() != 0) {
    _this->_impl_.turn_time_seconds_ = from._impl_.turn_time_seconds_;
  }
  if (from._internal_min_rating() != 0) {
    _this->_impl_.min_rating_ = from._impl_.min_rating_;
  }
  if (from._internal_is_private() != 0) {
    _this->_impl_.is_private_ = from._impl_.is_private_;
  }
  if (from._internal_allow_ai() != 0) {
    _this->_impl_.allow_ai_ = from._impl_.allow_ai_;
  }
  if (from._internal_spectators_allowed() != 0) {
    _this->_impl_.spectators_allowed_ = from._impl_.spectators_allowed_;
  }
  if (from._internal_auto_start() != 0) {
    _this->_impl_.auto_start_ = from._impl_.auto_start_;
  }
  if (from._internal_max_rating() != 0) {
    _this->_impl_.max_rating_ = from._impl_.max_rating_;
  }
  if (from._internal_max_spectators() != 0) {
    _this->_impl_.max_spectators_ = from._impl_.max_spectators_;
  }
  if (from._internal_ranked_game() != 0) {
    _this->_impl_.ranked_game_ = from._impl_.ranked_game_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateRoomRequest::CopyFrom(const CreateRoomRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.CreateRoomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateRoomRequest::InternalSwap(CreateRoomRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.room_name_, &other->_impl_.room_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, &other->_impl_.password_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.game_mode_, &other->_impl_.game_mode_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateRoomRequest, _impl_.ranked_game_)
      + sizeof(CreateRoomRequest::_impl_.ranked_game_)
      - PROTOBUF_FIELD_OFFSET(CreateRoomRequest, _impl_.max_players_)>(
          reinterpret_cast<char*>(&_impl_.max_players_),
          reinterpret_cast<char*>(&other->_impl_.max_players_));
}

::google::protobuf::Metadata CreateRoomRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateRoomResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CreateRoomResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateRoomResponse, _impl_._has_bits_);
};

void CreateRoomResponse::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.result_ != nullptr) _impl_.result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CreateRoomResponse::clear_room_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.room_info_ != nullptr) _impl_.room_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
CreateRoomResponse::CreateRoomResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.CreateRoomResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateRoomResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::CreateRoomResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        validation_errors_{visibility, arena, from.validation_errors_},
        join_token_(arena, from.join_token_),
        suggested_name_(arena, from.suggested_name_) {}

CreateRoomResponse::CreateRoomResponse(
    ::google::protobuf::Arena* arena,
    const CreateRoomResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateRoomResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::blokus::Result>(
                              arena, *from._impl_.result_)
                        : nullptr;
  _impl_.room_info_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::blokus::RoomInfo>(
                              arena, *from._impl_.room_info_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:blokus.CreateRoomResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateRoomResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        validation_errors_{visibility, arena},
        join_token_(arena),
        suggested_name_(arena) {}

inline void CreateRoomResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, result_),
           0,
           offsetof(Impl_, room_info_) -
               offsetof(Impl_, result_) +
               sizeof(Impl_::room_info_));
}
CreateRoomResponse::~CreateRoomResponse() {
  // @@protoc_insertion_point(destructor:blokus.CreateRoomResponse)
  SharedDtor(*this);
}
inline void CreateRoomResponse::SharedDtor(MessageLite& self) {
  CreateRoomResponse& this_ = static_cast<CreateRoomResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.join_token_.Destroy();
  this_._impl_.suggested_name_.Destroy();
  delete this_._impl_.result_;
  delete this_._impl_.room_info_;
  this_._impl_.~Impl_();
}

inline void* CreateRoomResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CreateRoomResponse(arena);
}
constexpr auto CreateRoomResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CreateRoomResponse, _impl_.validation_errors_) +
          decltype(CreateRoomResponse::_impl_.validation_errors_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CreateRoomResponse), alignof(CreateRoomResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CreateRoomResponse::PlacementNew_,
                                 sizeof(CreateRoomResponse),
                                 alignof(CreateRoomResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CreateRoomResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CreateRoomResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CreateRoomResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CreateRoomResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CreateRoomResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CreateRoomResponse>(), &CreateRoomResponse::ByteSizeLong,
            &CreateRoomResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CreateRoomResponse, _impl_._cached_size_),
        false,
    },
    &CreateRoomResponse::kDescriptorMethods,
    &descriptor_table_lobby_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CreateRoomResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 2, 75, 2> CreateRoomResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateRoomResponse, _impl_._has_bits_),
    0, // no _extensions_
    11, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965752,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::CreateRoomResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .blokus.Result result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateRoomResponse, _impl_.result_)}},
    // .blokus.RoomInfo room_info = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CreateRoomResponse, _impl_.room_info_)}},
    // string join_token = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CreateRoomResponse, _impl_.join_token_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .blokus.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(CreateRoomResponse, _impl_.result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .blokus.RoomInfo room_info = 2;
    {PROTOBUF_FIELD_OFFSET(CreateRoomResponse, _impl_.room_info_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string join_token = 3;
    {PROTOBUF_FIELD_OFFSET(CreateRoomResponse, _impl_.join_token_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string validation_errors = 10;
    {PROTOBUF_FIELD_OFFSET(CreateRoomResponse, _impl_.validation_errors_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string suggested_name = 11;
    {PROTOBUF_FIELD_OFFSET(CreateRoomResponse, _impl_.suggested_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::blokus::Result>()},
    {::_pbi::TcParser::GetTable<::blokus::RoomInfo>()},
  }}, {{
    "\31\0\0\12\21\16\0\0"
    "blokus.CreateRoomResponse"
    "join_token"
    "validation_errors"
    "suggested_name"
  }},
};

PROTOBUF_NOINLINE void CreateRoomResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.CreateRoomResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.validation_errors_.Clear();
  _impl_.join_token_.ClearToEmpty();
  _impl_.suggested_name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.result_ != nullptr);
      _impl_.result_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.room_info_ != nullptr);
      _impl_.room_info_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CreateRoomResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CreateRoomResponse& this_ = static_cast<const CreateRoomResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CreateRoomResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CreateRoomResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.CreateRoomResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .blokus.Result result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.result_, this_._impl_.result_->GetCachedSize(), target,
                stream);
          }

          // .blokus.RoomInfo room_info = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.room_info_, this_._impl_.room_info_->GetCachedSize(), target,
                stream);
          }

          // string join_token = 3;
          if (!this_._internal_join_token().empty()) {
            const std::string& _s = this_._internal_join_token();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.CreateRoomResponse.join_token");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // repeated string validation_errors = 10;
          for (int i = 0, n = this_._internal_validation_errors_size(); i < n; ++i) {
            const auto& s = this_._internal_validation_errors().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.CreateRoomResponse.validation_errors");
            target = stream->WriteString(10, s, target);
          }

          // string suggested_name = 11;
          if (!this_._internal_suggested_name().empty()) {
            const std::string& _s = this_._internal_suggested_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.CreateRoomResponse.suggested_name");
            target = stream->WriteStringMaybeAliased(11, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.CreateRoomResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CreateRoomResponse::ByteSizeLong(const MessageLite& base) {
          const CreateRoomResponse& this_ = static_cast<const CreateRoomResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CreateRoomResponse::ByteSizeLong() const {
          const CreateRoomResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.CreateRoomResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string validation_errors = 10;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_validation_errors().size());
              for (int i = 0, n = this_._internal_validation_errors().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_validation_errors().Get(i));
              }
            }
          }
           {
            // string join_token = 3;
            if (!this_._internal_join_token().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_join_token());
            }
            // string suggested_name = 11;
            if (!this_._internal_suggested_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_suggested_name());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .blokus.Result result = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.result_);
            }
            // .blokus.RoomInfo room_info = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.room_info_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CreateRoomResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateRoomResponse*>(&to_msg);
  auto& from = static_cast<const CreateRoomResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.CreateRoomResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_validation_errors()->MergeFrom(from._internal_validation_errors());
  if (!from._internal_join_token().empty()) {
    _this->_internal_set_join_token(from._internal_join_token());
  }
  if (!from._internal_suggested_name().empty()) {
    _this->_internal_set_suggested_name(from._internal_suggested_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.result_ != nullptr);
      if (_this->_impl_.result_ == nullptr) {
        _this->_impl_.result_ =
            ::google::protobuf::Message::CopyConstruct<::blokus::Result>(arena, *from._impl_.result_);
      } else {
        _this->_impl_.result_->MergeFrom(*from._impl_.result_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.room_info_ != nullptr);
      if (_this->_impl_.room_info_ == nullptr) {
        _this->_impl_.room_info_ =
            ::google::protobuf::Message::CopyConstruct<::blokus::RoomInfo>(arena, *from._impl_.room_info_);
      } else {
        _this->_impl_.room_info_->MergeFrom(*from._impl_.room_info_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateRoomResponse::CopyFrom(const CreateRoomResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.CreateRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateRoomResponse::InternalSwap(CreateRoomResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.validation_errors_.InternalSwap(&other->_impl_.validation_errors_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.join_token_, &other->_impl_.join_token_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.suggested_name_, &other->_impl_.suggested_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateRoomResponse, _impl_.room_info_)
      + sizeof(CreateRoomResponse::_impl_.room_info_)
      - PROTOBUF_FIELD_OFFSET(CreateRoomResponse, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::google::protobuf::Metadata CreateRoomResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class JoinRoomRequest::_Internal {
 public:
};

JoinRoomRequest::JoinRoomRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.JoinRoomRequest)
}
inline PROTOBUF_NDEBUG_INLINE JoinRoomRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::JoinRoomRequest& from_msg)
      : password_(arena, from.password_),
        join_token_(arena, from.join_token_),
        _cached_size_{0} {}

JoinRoomRequest::JoinRoomRequest(
    ::google::protobuf::Arena* arena,
    const JoinRoomRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  JoinRoomRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, room_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, room_id_),
           offsetof(Impl_, as_spectator_) -
               offsetof(Impl_, room_id_) +
               sizeof(Impl_::as_spectator_));

  // @@protoc_insertion_point(copy_constructor:blokus.JoinRoomRequest)
}
inline PROTOBUF_NDEBUG_INLINE JoinRoomRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : password_(arena),
        join_token_(arena),
        _cached_size_{0} {}

inline void JoinRoomRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, room_id_),
           0,
           offsetof(Impl_, as_spectator_) -
               offsetof(Impl_, room_id_) +
               sizeof(Impl_::as_spectator_));
}
JoinRoomRequest::~JoinRoomRequest() {
  // @@protoc_insertion_point(destructor:blokus.JoinRoomRequest)
  SharedDtor(*this);
}
inline void JoinRoomRequest::SharedDtor(MessageLite& self) {
  JoinRoomRequest& this_ = static_cast<JoinRoomRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.password_.Destroy();
  this_._impl_.join_token_.Destroy();
  this_._impl_.~Impl_();
}

inline void* JoinRoomRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) JoinRoomRequest(arena);
}
constexpr auto JoinRoomRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(JoinRoomRequest),
                                            alignof(JoinRoomRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull JoinRoomRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_JoinRoomRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &JoinRoomRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<JoinRoomRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &JoinRoomRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<JoinRoomRequest>(), &JoinRoomRequest::ByteSizeLong,
            &JoinRoomRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(JoinRoomRequest, _impl_._cached_size_),
        false,
    },
    &JoinRoomRequest::kDescriptorMethods,
    &descriptor_table_lobby_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* JoinRoomRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 49, 2> JoinRoomRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::JoinRoomRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 room_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(JoinRoomRequest, _impl_.room_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(JoinRoomRequest, _impl_.room_id_)}},
    // string password = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(JoinRoomRequest, _impl_.password_)}},
    // string join_token = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(JoinRoomRequest, _impl_.join_token_)}},
    // .blokus.PlayerColor preferred_color = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(JoinRoomRequest, _impl_.preferred_color_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(JoinRoomRequest, _impl_.preferred_color_)}},
    // bool as_spectator = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(JoinRoomRequest, _impl_.as_spectator_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(JoinRoomRequest, _impl_.as_spectator_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 room_id = 1;
    {PROTOBUF_FIELD_OFFSET(JoinRoomRequest, _impl_.room_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string password = 2;
    {PROTOBUF_FIELD_OFFSET(JoinRoomRequest, _impl_.password_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string join_token = 3;
    {PROTOBUF_FIELD_OFFSET(JoinRoomRequest, _impl_.join_token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .blokus.PlayerColor preferred_color = 4;
    {PROTOBUF_FIELD_OFFSET(JoinRoomRequest, _impl_.preferred_color_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bool as_spectator = 5;
    {PROTOBUF_FIELD_OFFSET(JoinRoomRequest, _impl_.as_spectator_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\26\0\10\12\0\0\0\0"
    "blokus.JoinRoomRequest"
    "password"
    "join_token"
  }},
};

PROTOBUF_NOINLINE void JoinRoomRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.JoinRoomRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.password_.ClearToEmpty();
  _impl_.join_token_.ClearToEmpty();
  ::memset(&_impl_.room_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.as_spectator_) -
      reinterpret_cast<char*>(&_impl_.room_id_)) + sizeof(_impl_.as_spectator_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* JoinRoomRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const JoinRoomRequest& this_ = static_cast<const JoinRoomRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* JoinRoomRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const JoinRoomRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.JoinRoomRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 room_id = 1;
          if (this_._internal_room_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_room_id(), target);
          }

          // string password = 2;
          if (!this_._internal_password().empty()) {
            const std::string& _s = this_._internal_password();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.JoinRoomRequest.password");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string join_token = 3;
          if (!this_._internal_join_token().empty()) {
            const std::string& _s = this_._internal_join_token();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.JoinRoomRequest.join_token");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // .blokus.PlayerColor preferred_color = 4;
          if (this_._internal_preferred_color() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_preferred_color(), target);
          }

          // bool as_spectator = 5;
          if (this_._internal_as_spectator() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_as_spectator(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.JoinRoomRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t JoinRoomRequest::ByteSizeLong(const MessageLite& base) {
          const JoinRoomRequest& this_ = static_cast<const JoinRoomRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t JoinRoomRequest::ByteSizeLong() const {
          const JoinRoomRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.JoinRoomRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string password = 2;
            if (!this_._internal_password().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_password());
            }
            // string join_token = 3;
            if (!this_._internal_join_token().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_join_token());
            }
            // int32 room_id = 1;
            if (this_._internal_room_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_room_id());
            }
            // .blokus.PlayerColor preferred_color = 4;
            if (this_._internal_preferred_color() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_preferred_color());
            }
            // bool as_spectator = 5;
            if (this_._internal_as_spectator() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void JoinRoomRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<JoinRoomRequest*>(&to_msg);
  auto& from = static_cast<const JoinRoomRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.JoinRoomRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  if (!from._internal_join_token().empty()) {
    _this->_internal_set_join_token(from._internal_join_token());
  }
  if (from._internal_room_id() != 0) {
    _this->_impl_.room_id_ = from._impl_.room_id_;
  }
  if (from._internal_preferred_color() != 0) {
    _this->_impl_.preferred_color_ = from._impl_.preferred_color_;
  }
  if (from._internal_as_spectator() != 0) {
    _this->_impl_.as_spectator_ = from._impl_.as_spectator_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void JoinRoomRequest::CopyFrom(const JoinRoomRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.JoinRoomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void JoinRoomRequest::InternalSwap(JoinRoomRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, &other->_impl_.password_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.join_token_, &other->_impl_.join_token_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JoinRoomRequest, _impl_.as_spectator_)
      + sizeof(JoinRoomRequest::_impl_.as_spectator_)
      - PROTOBUF_FIELD_OFFSET(JoinRoomRequest, _impl_.room_id_)>(
          reinterpret_cast<char*>(&_impl_.room_id_),
          reinterpret_cast<char*>(&other->_impl_.room_id_));
}

::google::protobuf::Metadata JoinRoomRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class JoinRoomResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<JoinRoomResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_._has_bits_);
};

void JoinRoomResponse::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.result_ != nullptr) _impl_.result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void JoinRoomResponse::clear_room_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.room_info_ != nullptr) _impl_.room_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void JoinRoomResponse::clear_player_slots() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_slots_.Clear();
}
JoinRoomResponse::JoinRoomResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.JoinRoomResponse)
}
inline PROTOBUF_NDEBUG_INLINE JoinRoomResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::JoinRoomResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        player_slots_{visibility, arena, from.player_slots_},
        room_rules_{visibility, arena, from.room_rules_},
        welcome_message_(arena, from.welcome_message_),
        failure_reason_(arena, from.failure_reason_) {}

JoinRoomResponse::JoinRoomResponse(
    ::google::protobuf::Arena* arena,
    const JoinRoomResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  JoinRoomResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::blokus::Result>(
                              arena, *from._impl_.result_)
                        : nullptr;
  _impl_.room_info_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::blokus::RoomInfo>(
                              arena, *from._impl_.room_info_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, assigned_color_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, assigned_color_),
           offsetof(Impl_, queue_position_) -
               offsetof(Impl_, assigned_color_) +
               sizeof(Impl_::queue_position_));

  // @@protoc_insertion_point(copy_constructor:blokus.JoinRoomResponse)
}
inline PROTOBUF_NDEBUG_INLINE JoinRoomResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        player_slots_{visibility, arena},
        room_rules_{visibility, arena},
        welcome_message_(arena),
        failure_reason_(arena) {}

inline void JoinRoomResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, result_),
           0,
           offsetof(Impl_, queue_position_) -
               offsetof(Impl_, result_) +
               sizeof(Impl_::queue_position_));
}
JoinRoomResponse::~JoinRoomResponse() {
  // @@protoc_insertion_point(destructor:blokus.JoinRoomResponse)
  SharedDtor(*this);
}
inline void JoinRoomResponse::SharedDtor(MessageLite& self) {
  JoinRoomResponse& this_ = static_cast<JoinRoomResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.welcome_message_.Destroy();
  this_._impl_.failure_reason_.Destroy();
  delete this_._impl_.result_;
  delete this_._impl_.room_info_;
  this_._impl_.~Impl_();
}

inline void* JoinRoomResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) JoinRoomResponse(arena);
}
constexpr auto JoinRoomResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_.player_slots_) +
          decltype(JoinRoomResponse::_impl_.player_slots_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_.room_rules_) +
          decltype(JoinRoomResponse::_impl_.room_rules_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(JoinRoomResponse), alignof(JoinRoomResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&JoinRoomResponse::PlacementNew_,
                                 sizeof(JoinRoomResponse),
                                 alignof(JoinRoomResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull JoinRoomResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_JoinRoomResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &JoinRoomResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<JoinRoomResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &JoinRoomResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<JoinRoomResponse>(), &JoinRoomResponse::ByteSizeLong,
            &JoinRoomResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_._cached_size_),
        false,
    },
    &JoinRoomResponse::kDescriptorMethods,
    &descriptor_table_lobby_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* JoinRoomResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 3, 79, 2> JoinRoomResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965632,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::JoinRoomResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .blokus.Result result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_.result_)}},
    // .blokus.RoomInfo room_info = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_.room_info_)}},
    // .blokus.PlayerColor assigned_color = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(JoinRoomResponse, _impl_.assigned_color_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_.assigned_color_)}},
    // repeated .blokus.PlayerSlot player_slots = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 2, PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_.player_slots_)}},
    // string welcome_message = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_.welcome_message_)}},
    // repeated string room_rules = 6;
    {::_pbi::TcParser::FastUR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_.room_rules_)}},
    // bool is_rejoining = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(JoinRoomResponse, _impl_.is_rejoining_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_.is_rejoining_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // string failure_reason = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_.failure_reason_)}},
    // int32 queue_position = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(JoinRoomResponse, _impl_.queue_position_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_.queue_position_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .blokus.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_.result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .blokus.RoomInfo room_info = 2;
    {PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_.room_info_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .blokus.PlayerColor assigned_color = 3;
    {PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_.assigned_color_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated .blokus.PlayerSlot player_slots = 4;
    {PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_.player_slots_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string welcome_message = 5;
    {PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_.welcome_message_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string room_rules = 6;
    {PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_.room_rules_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // bool is_rejoining = 7;
    {PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_.is_rejoining_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string failure_reason = 10;
    {PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_.failure_reason_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 queue_position = 11;
    {PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_.queue_position_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::blokus::Result>()},
    {::_pbi::TcParser::GetTable<::blokus::RoomInfo>()},
    {::_pbi::TcParser::GetTable<::blokus::PlayerSlot>()},
  }}, {{
    "\27\0\0\0\0\17\12\0\16\0\0\0\0\0\0\0"
    "blokus.JoinRoomResponse"
    "welcome_message"
    "room_rules"
    "failure_reason"
  }},
};

PROTOBUF_NOINLINE void JoinRoomResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.JoinRoomResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.player_slots_.Clear();
  _impl_.room_rules_.Clear();
  _impl_.welcome_message_.ClearToEmpty();
  _impl_.failure_reason_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.result_ != nullptr);
      _impl_.result_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.room_info_ != nullptr);
      _impl_.room_info_->Clear();
    }
  }
  ::memset(&_impl_.assigned_color_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.queue_position_) -
      reinterpret_cast<char*>(&_impl_.assigned_color_)) + sizeof(_impl_.queue_position_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* JoinRoomResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const JoinRoomResponse& this_ = static_cast<const JoinRoomResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* JoinRoomResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const JoinRoomResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.JoinRoomResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .blokus.Result result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.result_, this_._impl_.result_->GetCachedSize(), target,
                stream);
          }

          // .blokus.RoomInfo room_info = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.room_info_, this_._impl_.room_info_->GetCachedSize(), target,
                stream);
          }

          // .blokus.PlayerColor assigned_color = 3;
          if (this_._internal_assigned_color() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_assigned_color(), target);
          }

          // repeated .blokus.PlayerSlot player_slots = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_player_slots_size());
               i < n; i++) {
            const auto& repfield = this_._internal_player_slots().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string welcome_message = 5;
          if (!this_._internal_welcome_message().empty()) {
            const std::string& _s = this_._internal_welcome_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.JoinRoomResponse.welcome_message");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // repeated string room_rules = 6;
          for (int i = 0, n = this_._internal_room_rules_size(); i < n; ++i) {
            const auto& s = this_._internal_room_rules().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.JoinRoomResponse.room_rules");
            target = stream->WriteString(6, s, target);
          }

          // bool is_rejoining = 7;
          if (this_._internal_is_rejoining() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                7, this_._internal_is_rejoining(), target);
          }

          // string failure_reason = 10;
          if (!this_._internal_failure_reason().empty()) {
            const std::string& _s = this_._internal_failure_reason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.JoinRoomResponse.failure_reason");
            target = stream->WriteStringMaybeAliased(10, _s, target);
          }

          // int32 queue_position = 11;
          if (this_._internal_queue_position() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<11>(
                    stream, this_._internal_queue_position(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.JoinRoomResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t JoinRoomResponse::ByteSizeLong(const MessageLite& base) {
          const JoinRoomResponse& this_ = static_cast<const JoinRoomResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t JoinRoomResponse::ByteSizeLong() const {
          const JoinRoomResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.JoinRoomResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .blokus.PlayerSlot player_slots = 4;
            {
              total_size += 1UL * this_._internal_player_slots_size();
              for (const auto& msg : this_._internal_player_slots()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated string room_rules = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_room_rules().size());
              for (int i = 0, n = this_._internal_room_rules().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_room_rules().Get(i));
              }
            }
          }
           {
            // string welcome_message = 5;
            if (!this_._internal_welcome_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_welcome_message());
            }
            // string failure_reason = 10;
            if (!this_._internal_failure_reason().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_failure_reason());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .blokus.Result result = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.result_);
            }
            // .blokus.RoomInfo room_info = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.room_info_);
            }
          }
           {
            // .blokus.PlayerColor assigned_color = 3;
            if (this_._internal_assigned_color() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_assigned_color());
            }
            // bool is_rejoining = 7;
            if (this_._internal_is_rejoining() != 0) {
              total_size += 2;
            }
            // int32 queue_position = 11;
            if (this_._internal_queue_position() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_queue_position());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void JoinRoomResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<JoinRoomResponse*>(&to_msg);
  auto& from = static_cast<const JoinRoomResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.JoinRoomResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_player_slots()->MergeFrom(
      from._internal_player_slots());
  _this->_internal_mutable_room_rules()->MergeFrom(from._internal_room_rules());
  if (!from._internal_welcome_message().empty()) {
    _this->_internal_set_welcome_message(from._internal_welcome_message());
  }
  if (!from._internal_failure_reason().empty()) {
    _this->_internal_set_failure_reason(from._internal_failure_reason());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.result_ != nullptr);
      if (_this->_impl_.result_ == nullptr) {
        _this->_impl_.result_ =
            ::google::protobuf::Message::CopyConstruct<::blokus::Result>(arena, *from._impl_.result_);
      } else {
        _this->_impl_.result_->MergeFrom(*from._impl_.result_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.room_info_ != nullptr);
      if (_this->_impl_.room_info_ == nullptr) {
        _this->_impl_.room_info_ =
            ::google::protobuf::Message::CopyConstruct<::blokus::RoomInfo>(arena, *from._impl_.room_info_);
      } else {
        _this->_impl_.room_info_->MergeFrom(*from._impl_.room_info_);
      }
    }
  }
  if (from._internal_assigned_color() != 0) {
    _this->_impl_.assigned_color_ = from._impl_.assigned_color_;
  }
  if (from._internal_is_rejoining() != 0) {
    _this->_impl_.is_rejoining_ = from._impl_.is_rejoining_;
  }
  if (from._internal_queue_position() != 0) {
    _this->_impl_.queue_position_ = from._impl_.queue_position_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void JoinRoomResponse::CopyFrom(const JoinRoomResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.JoinRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void JoinRoomResponse::InternalSwap(JoinRoomResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.player_slots_.InternalSwap(&other->_impl_.player_slots_);
  _impl_.room_rules_.InternalSwap(&other->_impl_.room_rules_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.welcome_message_, &other->_impl_.welcome_message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.failure_reason_, &other->_impl_.failure_reason_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_.queue_position_)
      + sizeof(JoinRoomResponse::_impl_.queue_position_)
      - PROTOBUF_FIELD_OFFSET(JoinRoomResponse, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::google::protobuf::Metadata JoinRoomResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LeaveRoomRequest::_Internal {
 public:
};

LeaveRoomRequest::LeaveRoomRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.LeaveRoomRequest)
}
inline PROTOBUF_NDEBUG_INLINE LeaveRoomRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::LeaveRoomRequest& from_msg)
      : reason_(arena, from.reason_),
        new_host_username_(arena, from.new_host_username_),
        _cached_size_{0} {}

LeaveRoomRequest::LeaveRoomRequest(
    ::google::protobuf::Arena* arena,
    const LeaveRoomRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LeaveRoomRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, room_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, room_id_),
           offsetof(Impl_, transfer_host_) -
               offsetof(Impl_, room_id_) +
               sizeof(Impl_::transfer_host_));

  // @@protoc_insertion_point(copy_constructor:blokus.LeaveRoomRequest)
}
inline PROTOBUF_NDEBUG_INLINE LeaveRoomRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : reason_(arena),
        new_host_username_(arena),
        _cached_size_{0} {}

inline void LeaveRoomRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, room_id_),
           0,
           offsetof(Impl_, transfer_host_) -
               offsetof(Impl_, room_id_) +
               sizeof(Impl_::transfer_host_));
}
LeaveRoomRequest::~LeaveRoomRequest() {
  // @@protoc_insertion_point(destructor:blokus.LeaveRoomRequest)
  SharedDtor(*this);
}
inline void LeaveRoomRequest::SharedDtor(MessageLite& self) {
  LeaveRoomRequest& this_ = static_cast<LeaveRoomRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.reason_.Destroy();
  this_._impl_.new_host_username_.Destroy();
  this_._impl_.~Impl_();
}

inline void* LeaveRoomRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LeaveRoomRequest(arena);
}
constexpr auto LeaveRoomRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(LeaveRoomRequest),
                                            alignof(LeaveRoomRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LeaveRoomRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LeaveRoomRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LeaveRoomRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LeaveRoomRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LeaveRoomRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LeaveRoomRequest>(), &LeaveRoomRequest::ByteSizeLong,
            &LeaveRoomRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LeaveRoomRequest, _impl_._cached_size_),
        false,
    },
    &LeaveRoomRequest::kDescriptorMethods,
    &descriptor_table_lobby_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LeaveRoomRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 55, 2> LeaveRoomRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::LeaveRoomRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string new_host_username = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(LeaveRoomRequest, _impl_.new_host_username_)}},
    // int32 room_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LeaveRoomRequest, _impl_.room_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(LeaveRoomRequest, _impl_.room_id_)}},
    // string reason = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(LeaveRoomRequest, _impl_.reason_)}},
    // bool transfer_host = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(LeaveRoomRequest, _impl_.transfer_host_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(LeaveRoomRequest, _impl_.transfer_host_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 room_id = 1;
    {PROTOBUF_FIELD_OFFSET(LeaveRoomRequest, _impl_.room_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string reason = 2;
    {PROTOBUF_FIELD_OFFSET(LeaveRoomRequest, _impl_.reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool transfer_host = 3;
    {PROTOBUF_FIELD_OFFSET(LeaveRoomRequest, _impl_.transfer_host_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string new_host_username = 4;
    {PROTOBUF_FIELD_OFFSET(LeaveRoomRequest, _impl_.new_host_username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\0\6\0\21\0\0\0"
    "blokus.LeaveRoomRequest"
    "reason"
    "new_host_username"
  }},
};

PROTOBUF_NOINLINE void LeaveRoomRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.LeaveRoomRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reason_.ClearToEmpty();
  _impl_.new_host_username_.ClearToEmpty();
  ::memset(&_impl_.room_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.transfer_host_) -
      reinterpret_cast<char*>(&_impl_.room_id_)) + sizeof(_impl_.transfer_host_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LeaveRoomRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LeaveRoomRequest& this_ = static_cast<const LeaveRoomRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LeaveRoomRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LeaveRoomRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.LeaveRoomRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 room_id = 1;
          if (this_._internal_room_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_room_id(), target);
          }

          // string reason = 2;
          if (!this_._internal_reason().empty()) {
            const std::string& _s = this_._internal_reason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.LeaveRoomRequest.reason");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // bool transfer_host = 3;
          if (this_._internal_transfer_host() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_transfer_host(), target);
          }

          // string new_host_username = 4;
          if (!this_._internal_new_host_username().empty()) {
            const std::string& _s = this_._internal_new_host_username();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.LeaveRoomRequest.new_host_username");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.LeaveRoomRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LeaveRoomRequest::ByteSizeLong(const MessageLite& base) {
          const LeaveRoomRequest& this_ = static_cast<const LeaveRoomRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LeaveRoomRequest::ByteSizeLong() const {
          const LeaveRoomRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.LeaveRoomRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string reason = 2;
            if (!this_._internal_reason().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reason());
            }
            // string new_host_username = 4;
            if (!this_._internal_new_host_username().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_new_host_username());
            }
            // int32 room_id = 1;
            if (this_._internal_room_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_room_id());
            }
            // bool transfer_host = 3;
            if (this_._internal_transfer_host() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LeaveRoomRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LeaveRoomRequest*>(&to_msg);
  auto& from = static_cast<const LeaveRoomRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.LeaveRoomRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_reason().empty()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  if (!from._internal_new_host_username().empty()) {
    _this->_internal_set_new_host_username(from._internal_new_host_username());
  }
  if (from._internal_room_id() != 0) {
    _this->_impl_.room_id_ = from._impl_.room_id_;
  }
  if (from._internal_transfer_host() != 0) {
    _this->_impl_.transfer_host_ = from._impl_.transfer_host_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LeaveRoomRequest::CopyFrom(const LeaveRoomRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.LeaveRoomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LeaveRoomRequest::InternalSwap(LeaveRoomRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, &other->_impl_.reason_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.new_host_username_, &other->_impl_.new_host_username_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LeaveRoomRequest, _impl_.transfer_host_)
      + sizeof(LeaveRoomRequest::_impl_.transfer_host_)
      - PROTOBUF_FIELD_OFFSET(LeaveRoomRequest, _impl_.room_id_)>(
          reinterpret_cast<char*>(&_impl_.room_id_),
          reinterpret_cast<char*>(&other->_impl_.room_id_));
}

::google::protobuf::Metadata LeaveRoomRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LeaveRoomResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<LeaveRoomResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LeaveRoomResponse, _impl_._has_bits_);
};

void LeaveRoomResponse::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.result_ != nullptr) _impl_.result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
LeaveRoomResponse::LeaveRoomResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.LeaveRoomResponse)
}
inline PROTOBUF_NDEBUG_INLINE LeaveRoomResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::LeaveRoomResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        message_(arena, from.message_),
        new_host_(arena, from.new_host_) {}

LeaveRoomResponse::LeaveRoomResponse(
    ::google::protobuf::Arena* arena,
    const LeaveRoomResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LeaveRoomResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::blokus::Result>(
                              arena, *from._impl_.result_)
                        : nullptr;
  _impl_.room_disbanded_ = from._impl_.room_disbanded_;

  // @@protoc_insertion_point(copy_constructor:blokus.LeaveRoomResponse)
}
inline PROTOBUF_NDEBUG_INLINE LeaveRoomResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        message_(arena),
        new_host_(arena) {}

inline void LeaveRoomResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, result_),
           0,
           offsetof(Impl_, room_disbanded_) -
               offsetof(Impl_, result_) +
               sizeof(Impl_::room_disbanded_));
}
LeaveRoomResponse::~LeaveRoomResponse() {
  // @@protoc_insertion_point(destructor:blokus.LeaveRoomResponse)
  SharedDtor(*this);
}
inline void LeaveRoomResponse::SharedDtor(MessageLite& self) {
  LeaveRoomResponse& this_ = static_cast<LeaveRoomResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.new_host_.Destroy();
  delete this_._impl_.result_;
  this_._impl_.~Impl_();
}

inline void* LeaveRoomResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LeaveRoomResponse(arena);
}
constexpr auto LeaveRoomResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(LeaveRoomResponse),
                                            alignof(LeaveRoomResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LeaveRoomResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LeaveRoomResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LeaveRoomResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LeaveRoomResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LeaveRoomResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LeaveRoomResponse>(), &LeaveRoomResponse::ByteSizeLong,
            &LeaveRoomResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LeaveRoomResponse, _impl_._cached_size_),
        false,
    },
    &LeaveRoomResponse::kDescriptorMethods,
    &descriptor_table_lobby_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LeaveRoomResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 48, 2> LeaveRoomResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LeaveRoomResponse, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::LeaveRoomResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string new_host = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(LeaveRoomResponse, _impl_.new_host_)}},
    // .blokus.Result result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LeaveRoomResponse, _impl_.result_)}},
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(LeaveRoomResponse, _impl_.message_)}},
    // bool room_disbanded = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(LeaveRoomResponse, _impl_.room_disbanded_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(LeaveRoomResponse, _impl_.room_disbanded_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .blokus.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(LeaveRoomResponse, _impl_.result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(LeaveRoomResponse, _impl_.message_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool room_disbanded = 3;
    {PROTOBUF_FIELD_OFFSET(LeaveRoomResponse, _impl_.room_disbanded_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string new_host = 4;
    {PROTOBUF_FIELD_OFFSET(LeaveRoomResponse, _impl_.new_host_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::blokus::Result>()},
  }}, {{
    "\30\0\7\0\10\0\0\0"
    "blokus.LeaveRoomResponse"
    "message"
    "new_host"
  }},
};

PROTOBUF_NOINLINE void LeaveRoomResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.LeaveRoomResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.new_host_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.result_ != nullptr);
    _impl_.result_->Clear();
  }
  _impl_.room_disbanded_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LeaveRoomResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LeaveRoomResponse& this_ = static_cast<const LeaveRoomResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LeaveRoomResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LeaveRoomResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.LeaveRoomResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .blokus.Result result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.result_, this_._impl_.result_->GetCachedSize(), target,
                stream);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.LeaveRoomResponse.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // bool room_disbanded = 3;
          if (this_._internal_room_disbanded() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_room_disbanded(), target);
          }

          // string new_host = 4;
          if (!this_._internal_new_host().empty()) {
            const std::string& _s = this_._internal_new_host();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.LeaveRoomResponse.new_host");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.LeaveRoomResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LeaveRoomResponse::ByteSizeLong(const MessageLite& base) {
          const LeaveRoomResponse& this_ = static_cast<const LeaveRoomResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LeaveRoomResponse::ByteSizeLong() const {
          const LeaveRoomResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.LeaveRoomResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // string new_host = 4;
            if (!this_._internal_new_host().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_new_host());
            }
          }
           {
            // .blokus.Result result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.result_);
            }
          }
           {
            // bool room_disbanded = 3;
            if (this_._internal_room_disbanded() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LeaveRoomResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LeaveRoomResponse*>(&to_msg);
  auto& from = static_cast<const LeaveRoomResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.LeaveRoomResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (!from._internal_new_host().empty()) {
    _this->_internal_set_new_host(from._internal_new_host());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.result_ != nullptr);
    if (_this->_impl_.result_ == nullptr) {
      _this->_impl_.result_ =
          ::google::protobuf::Message::CopyConstruct<::blokus::Result>(arena, *from._impl_.result_);
    } else {
      _this->_impl_.result_->MergeFrom(*from._impl_.result_);
    }
  }
  if (from._internal_room_disbanded() != 0) {
    _this->_impl_.room_disbanded_ = from._impl_.room_disbanded_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LeaveRoomResponse::CopyFrom(const LeaveRoomResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.LeaveRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LeaveRoomResponse::InternalSwap(LeaveRoomResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.new_host_, &other->_impl_.new_host_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LeaveRoomResponse, _impl_.room_disbanded_)
      + sizeof(LeaveRoomResponse::_impl_.room_disbanded_)
      - PROTOBUF_FIELD_OFFSET(LeaveRoomResponse, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::google::protobuf::Metadata LeaveRoomResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlayerJoinedNotification::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PlayerJoinedNotification>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PlayerJoinedNotification, _impl_._has_bits_);
};

void PlayerJoinedNotification::clear_player_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_info_ != nullptr) _impl_.player_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void PlayerJoinedNotification::clear_joined_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.joined_at_ != nullptr) _impl_.joined_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void PlayerJoinedNotification::clear_user_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.user_info_ != nullptr) _impl_.user_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
PlayerJoinedNotification::PlayerJoinedNotification(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.PlayerJoinedNotification)
}
inline PROTOBUF_NDEBUG_INLINE PlayerJoinedNotification::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::PlayerJoinedNotification& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        username_(arena, from.username_),
        join_message_(arena, from.join_message_) {}

PlayerJoinedNotification::PlayerJoinedNotification(
    ::google::protobuf::Arena* arena,
    const PlayerJoinedNotification& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PlayerJoinedNotification* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.player_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::blokus::PlayerSlot>(
                              arena, *from._impl_.player_info_)
                        : nullptr;
  _impl_.joined_at_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.joined_at_)
                        : nullptr;
  _impl_.user_info_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::blokus::UserInfo>(
                              arena, *from._impl_.user_info_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, color_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, color_),
           offsetof(Impl_, is_rejoining_) -
               offsetof(Impl_, color_) +
               sizeof(Impl_::is_rejoining_));

  // @@protoc_insertion_point(copy_constructor:blokus.PlayerJoinedNotification)
}
inline PROTOBUF_NDEBUG_INLINE PlayerJoinedNotification::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        username_(arena),
        join_message_(arena) {}

inline void PlayerJoinedNotification::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_info_),
           0,
           offsetof(Impl_, is_rejoining_) -
               offsetof(Impl_, player_info_) +
               sizeof(Impl_::is_rejoining_));
}
PlayerJoinedNotification::~PlayerJoinedNotification() {
  // @@protoc_insertion_point(destructor:blokus.PlayerJoinedNotification)
  SharedDtor(*this);
}
inline void PlayerJoinedNotification::SharedDtor(MessageLite& self) {
  PlayerJoinedNotification& this_ = static_cast<PlayerJoinedNotification&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.username_.Destroy();
  this_._impl_.join_message_.Destroy();
  delete this_._impl_.player_info_;
  delete this_._impl_.joined_at_;
  delete this_._impl_.user_info_;
  this_._impl_.~Impl_();
}

inline void* PlayerJoinedNotification::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PlayerJoinedNotification(arena);
}
constexpr auto PlayerJoinedNotification::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PlayerJoinedNotification),
                                            alignof(PlayerJoinedNotification));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PlayerJoinedNotification::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PlayerJoinedNotification_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PlayerJoinedNotification::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PlayerJoinedNotification>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PlayerJoinedNotification::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PlayerJoinedNotification>(), &PlayerJoinedNotification::ByteSizeLong,
            &PlayerJoinedNotification::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PlayerJoinedNotification, _impl_._cached_size_),
        false,
    },
    &PlayerJoinedNotification::kDescriptorMethods,
    &descriptor_table_lobby_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PlayerJoinedNotification::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 3, 60, 2> PlayerJoinedNotification::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PlayerJoinedNotification, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::PlayerJoinedNotification>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string username = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerJoinedNotification, _impl_.username_)}},
    // .blokus.PlayerColor color = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerJoinedNotification, _impl_.color_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerJoinedNotification, _impl_.color_)}},
    // .blokus.PlayerSlot player_info = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(PlayerJoinedNotification, _impl_.player_info_)}},
    // bool is_rejoining = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PlayerJoinedNotification, _impl_.is_rejoining_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerJoinedNotification, _impl_.is_rejoining_)}},
    // .google.protobuf.Timestamp joined_at = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(PlayerJoinedNotification, _impl_.joined_at_)}},
    // .blokus.UserInfo user_info = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 2, 2, PROTOBUF_FIELD_OFFSET(PlayerJoinedNotification, _impl_.user_info_)}},
    // string join_message = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerJoinedNotification, _impl_.join_message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string username = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerJoinedNotification, _impl_.username_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .blokus.PlayerColor color = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerJoinedNotification, _impl_.color_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .blokus.PlayerSlot player_info = 3;
    {PROTOBUF_FIELD_OFFSET(PlayerJoinedNotification, _impl_.player_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool is_rejoining = 4;
    {PROTOBUF_FIELD_OFFSET(PlayerJoinedNotification, _impl_.is_rejoining_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .google.protobuf.Timestamp joined_at = 5;
    {PROTOBUF_FIELD_OFFSET(PlayerJoinedNotification, _impl_.joined_at_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .blokus.UserInfo user_info = 6;
    {PROTOBUF_FIELD_OFFSET(PlayerJoinedNotification, _impl_.user_info_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string join_message = 7;
    {PROTOBUF_FIELD_OFFSET(PlayerJoinedNotification, _impl_.join_message_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::blokus::PlayerSlot>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::blokus::UserInfo>()},
  }}, {{
    "\37\10\0\0\0\0\0\14"
    "blokus.PlayerJoinedNotification"
    "username"
    "join_message"
  }},
};

PROTOBUF_NOINLINE void PlayerJoinedNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.PlayerJoinedNotification)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  _impl_.join_message_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.player_info_ != nullptr);
      _impl_.player_info_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.joined_at_ != nullptr);
      _impl_.joined_at_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.user_info_ != nullptr);
      _impl_.user_info_->Clear();
    }
  }
  ::memset(&_impl_.color_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_rejoining_) -
      reinterpret_cast<char*>(&_impl_.color_)) + sizeof(_impl_.is_rejoining_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PlayerJoinedNotification::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PlayerJoinedNotification& this_ = static_cast<const PlayerJoinedNotification&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PlayerJoinedNotification::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PlayerJoinedNotification& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.PlayerJoinedNotification)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string username = 1;
          if (!this_._internal_username().empty()) {
            const std::string& _s = this_._internal_username();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.PlayerJoinedNotification.username");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .blokus.PlayerColor color = 2;
          if (this_._internal_color() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_color(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .blokus.PlayerSlot player_info = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.player_info_, this_._impl_.player_info_->GetCachedSize(), target,
                stream);
          }

          // bool is_rejoining = 4;
          if (this_._internal_is_rejoining() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_is_rejoining(), target);
          }

          // .google.protobuf.Timestamp joined_at = 5;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.joined_at_, this_._impl_.joined_at_->GetCachedSize(), target,
                stream);
          }

          // .blokus.UserInfo user_info = 6;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.user_info_, this_._impl_.user_info_->GetCachedSize(), target,
                stream);
          }

          // string join_message = 7;
          if (!this_._internal_join_message().empty()) {
            const std::string& _s = this_._internal_join_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.PlayerJoinedNotification.join_message");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.PlayerJoinedNotification)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PlayerJoinedNotification::ByteSizeLong(const MessageLite& base) {
          const PlayerJoinedNotification& this_ = static_cast<const PlayerJoinedNotification&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PlayerJoinedNotification::ByteSizeLong() const {
          const PlayerJoinedNotification& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.PlayerJoinedNotification)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string username = 1;
            if (!this_._internal_username().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_username());
            }
            // string join_message = 7;
            if (!this_._internal_join_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_join_message());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .blokus.PlayerSlot player_info = 3;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.player_info_);
            }
            // .google.protobuf.Timestamp joined_at = 5;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.joined_at_);
            }
            // .blokus.UserInfo user_info = 6;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.user_info_);
            }
          }
           {
            // .blokus.PlayerColor color = 2;
            if (this_._internal_color() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_color());
            }
            // bool is_rejoining = 4;
            if (this_._internal_is_rejoining() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PlayerJoinedNotification::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlayerJoinedNotification*>(&to_msg);
  auto& from = static_cast<const PlayerJoinedNotification&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.PlayerJoinedNotification)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_join_message().empty()) {
    _this->_internal_set_join_message(from._internal_join_message());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.player_info_ != nullptr);
      if (_this->_impl_.player_info_ == nullptr) {
        _this->_impl_.player_info_ =
            ::google::protobuf::Message::CopyConstruct<::blokus::PlayerSlot>(arena, *from._impl_.player_info_);
      } else {
        _this->_impl_.player_info_->MergeFrom(*from._impl_.player_info_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.joined_at_ != nullptr);
      if (_this->_impl_.joined_at_ == nullptr) {
        _this->_impl_.joined_at_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.joined_at_);
      } else {
        _this->_impl_.joined_at_->MergeFrom(*from._impl_.joined_at_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.user_info_ != nullptr);
      if (_this->_impl_.user_info_ == nullptr) {
        _this->_impl_.user_info_ =
            ::google::protobuf::Message::CopyConstruct<::blokus::UserInfo>(arena, *from._impl_.user_info_);
      } else {
        _this->_impl_.user_info_->MergeFrom(*from._impl_.user_info_);
      }
    }
  }
  if (from._internal_color() != 0) {
    _this->_impl_.color_ = from._impl_.color_;
  }
  if (from._internal_is_rejoining() != 0) {
    _this->_impl_.is_rejoining_ = from._impl_.is_rejoining_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerJoinedNotification::CopyFrom(const PlayerJoinedNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.PlayerJoinedNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlayerJoinedNotification::InternalSwap(PlayerJoinedNotification* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.join_message_, &other->_impl_.join_message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerJoinedNotification, _impl_.is_rejoining_)
      + sizeof(PlayerJoinedNotification::_impl_.is_rejoining_)
      - PROTOBUF_FIELD_OFFSET(PlayerJoinedNotification, _impl_.player_info_)>(
          reinterpret_cast<char*>(&_impl_.player_info_),
          reinterpret_cast<char*>(&other->_impl_.player_info_));
}

::google::protobuf::Metadata PlayerJoinedNotification::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlayerLeftNotification::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PlayerLeftNotification>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PlayerLeftNotification, _impl_._has_bits_);
};

void PlayerLeftNotification::clear_left_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.left_at_ != nullptr) _impl_.left_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
PlayerLeftNotification::PlayerLeftNotification(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.PlayerLeftNotification)
}
inline PROTOBUF_NDEBUG_INLINE PlayerLeftNotification::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::PlayerLeftNotification& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        username_(arena, from.username_),
        reason_(arena, from.reason_),
        new_host_(arena, from.new_host_) {}

PlayerLeftNotification::PlayerLeftNotification(
    ::google::protobuf::Arena* arena,
    const PlayerLeftNotification& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PlayerLeftNotification* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.left_at_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.left_at_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, color_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, color_),
           offsetof(Impl_, room_disbanded_) -
               offsetof(Impl_, color_) +
               sizeof(Impl_::room_disbanded_));

  // @@protoc_insertion_point(copy_constructor:blokus.PlayerLeftNotification)
}
inline PROTOBUF_NDEBUG_INLINE PlayerLeftNotification::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        username_(arena),
        reason_(arena),
        new_host_(arena) {}

inline void PlayerLeftNotification::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, left_at_),
           0,
           offsetof(Impl_, room_disbanded_) -
               offsetof(Impl_, left_at_) +
               sizeof(Impl_::room_disbanded_));
}
PlayerLeftNotification::~PlayerLeftNotification() {
  // @@protoc_insertion_point(destructor:blokus.PlayerLeftNotification)
  SharedDtor(*this);
}
inline void PlayerLeftNotification::SharedDtor(MessageLite& self) {
  PlayerLeftNotification& this_ = static_cast<PlayerLeftNotification&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.username_.Destroy();
  this_._impl_.reason_.Destroy();
  this_._impl_.new_host_.Destroy();
  delete this_._impl_.left_at_;
  this_._impl_.~Impl_();
}

inline void* PlayerLeftNotification::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PlayerLeftNotification(arena);
}
constexpr auto PlayerLeftNotification::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PlayerLeftNotification),
                                            alignof(PlayerLeftNotification));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PlayerLeftNotification::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PlayerLeftNotification_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PlayerLeftNotification::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PlayerLeftNotification>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PlayerLeftNotification::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PlayerLeftNotification>(), &PlayerLeftNotification::ByteSizeLong,
            &PlayerLeftNotification::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PlayerLeftNotification, _impl_._cached_size_),
        false,
    },
    &PlayerLeftNotification::kDescriptorMethods,
    &descriptor_table_lobby_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PlayerLeftNotification::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 60, 2> PlayerLeftNotification::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PlayerLeftNotification, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::PlayerLeftNotification>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string username = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerLeftNotification, _impl_.username_)}},
    // .blokus.PlayerColor color = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerLeftNotification, _impl_.color_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerLeftNotification, _impl_.color_)}},
    // string reason = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerLeftNotification, _impl_.reason_)}},
    // bool was_kicked = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PlayerLeftNotification, _impl_.was_kicked_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerLeftNotification, _impl_.was_kicked_)}},
    // .google.protobuf.Timestamp left_at = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(PlayerLeftNotification, _impl_.left_at_)}},
    // string new_host = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerLeftNotification, _impl_.new_host_)}},
    // bool room_disbanded = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PlayerLeftNotification, _impl_.room_disbanded_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerLeftNotification, _impl_.room_disbanded_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string username = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerLeftNotification, _impl_.username_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .blokus.PlayerColor color = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerLeftNotification, _impl_.color_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string reason = 3;
    {PROTOBUF_FIELD_OFFSET(PlayerLeftNotification, _impl_.reason_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool was_kicked = 4;
    {PROTOBUF_FIELD_OFFSET(PlayerLeftNotification, _impl_.was_kicked_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .google.protobuf.Timestamp left_at = 5;
    {PROTOBUF_FIELD_OFFSET(PlayerLeftNotification, _impl_.left_at_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string new_host = 6;
    {PROTOBUF_FIELD_OFFSET(PlayerLeftNotification, _impl_.new_host_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool room_disbanded = 7;
    {PROTOBUF_FIELD_OFFSET(PlayerLeftNotification, _impl_.room_disbanded_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\35\10\0\6\0\0\10\0"
    "blokus.PlayerLeftNotification"
    "username"
    "reason"
    "new_host"
  }},
};

PROTOBUF_NOINLINE void PlayerLeftNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.PlayerLeftNotification)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  _impl_.reason_.ClearToEmpty();
  _impl_.new_host_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.left_at_ != nullptr);
    _impl_.left_at_->Clear();
  }
  ::memset(&_impl_.color_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.room_disbanded_) -
      reinterpret_cast<char*>(&_impl_.color_)) + sizeof(_impl_.room_disbanded_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PlayerLeftNotification::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PlayerLeftNotification& this_ = static_cast<const PlayerLeftNotification&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PlayerLeftNotification::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PlayerLeftNotification& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.PlayerLeftNotification)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string username = 1;
          if (!this_._internal_username().empty()) {
            const std::string& _s = this_._internal_username();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.PlayerLeftNotification.username");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .blokus.PlayerColor color = 2;
          if (this_._internal_color() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_color(), target);
          }

          // string reason = 3;
          if (!this_._internal_reason().empty()) {
            const std::string& _s = this_._internal_reason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.PlayerLeftNotification.reason");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // bool was_kicked = 4;
          if (this_._internal_was_kicked() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_was_kicked(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp left_at = 5;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.left_at_, this_._impl_.left_at_->GetCachedSize(), target,
                stream);
          }

          // string new_host = 6;
          if (!this_._internal_new_host().empty()) {
            const std::string& _s = this_._internal_new_host();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.PlayerLeftNotification.new_host");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // bool room_disbanded = 7;
          if (this_._internal_room_disbanded() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                7, this_._internal_room_disbanded(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.PlayerLeftNotification)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PlayerLeftNotification::ByteSizeLong(const MessageLite& base) {
          const PlayerLeftNotification& this_ = static_cast<const PlayerLeftNotification&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PlayerLeftNotification::ByteSizeLong() const {
          const PlayerLeftNotification& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.PlayerLeftNotification)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string username = 1;
            if (!this_._internal_username().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_username());
            }
            // string reason = 3;
            if (!this_._internal_reason().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reason());
            }
            // string new_host = 6;
            if (!this_._internal_new_host().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_new_host());
            }
          }
           {
            // .google.protobuf.Timestamp left_at = 5;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.left_at_);
            }
          }
           {
            // .blokus.PlayerColor color = 2;
            if (this_._internal_color() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_color());
            }
            // bool was_kicked = 4;
            if (this_._internal_was_kicked() != 0) {
              total_size += 2;
            }
            // bool room_disbanded = 7;
            if (this_._internal_room_disbanded() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PlayerLeftNotification::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlayerLeftNotification*>(&to_msg);
  auto& from = static_cast<const PlayerLeftNotification&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.PlayerLeftNotification)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_reason().empty()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  if (!from._internal_new_host().empty()) {
    _this->_internal_set_new_host(from._internal_new_host());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.left_at_ != nullptr);
    if (_this->_impl_.left_at_ == nullptr) {
      _this->_impl_.left_at_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.left_at_);
    } else {
      _this->_impl_.left_at_->MergeFrom(*from._impl_.left_at_);
    }
  }
  if (from._internal_color() != 0) {
    _this->_impl_.color_ = from._impl_.color_;
  }
  if (from._internal_was_kicked() != 0) {
    _this->_impl_.was_kicked_ = from._impl_.was_kicked_;
  }
  if (from._internal_room_disbanded() != 0) {
    _this->_impl_.room_disbanded_ = from._impl_.room_disbanded_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerLeftNotification::CopyFrom(const PlayerLeftNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.PlayerLeftNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlayerLeftNotification::InternalSwap(PlayerLeftNotification* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, &other->_impl_.reason_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.new_host_, &other->_impl_.new_host_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerLeftNotification, _impl_.room_disbanded_)
      + sizeof(PlayerLeftNotification::_impl_.room_disbanded_)
      - PROTOBUF_FIELD_OFFSET(PlayerLeftNotification, _impl_.left_at_)>(
          reinterpret_cast<char*>(&_impl_.left_at_),
          reinterpret_cast<char*>(&other->_impl_.left_at_));
}

::google::protobuf::Metadata PlayerLeftNotification::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetUserListRequest::_Internal {
 public:
};

GetUserListRequest::GetUserListRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.GetUserListRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetUserListRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::GetUserListRequest& from_msg)
      : search_query_(arena, from.search_query_),
        _cached_size_{0} {}

GetUserListRequest::GetUserListRequest(
    ::google::protobuf::Arena* arena,
    const GetUserListRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetUserListRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_filter_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, status_filter_),
           offsetof(Impl_, page_size_) -
               offsetof(Impl_, status_filter_) +
               sizeof(Impl_::page_size_));

  // @@protoc_insertion_point(copy_constructor:blokus.GetUserListRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetUserListRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : search_query_(arena),
        _cached_size_{0} {}

inline void GetUserListRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_filter_),
           0,
           offsetof(Impl_, page_size_) -
               offsetof(Impl_, status_filter_) +
               sizeof(Impl_::page_size_));
}
GetUserListRequest::~GetUserListRequest() {
  // @@protoc_insertion_point(destructor:blokus.GetUserListRequest)
  SharedDtor(*this);
}
inline void GetUserListRequest::SharedDtor(MessageLite& self) {
  GetUserListRequest& this_ = static_cast<GetUserListRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.search_query_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GetUserListRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetUserListRequest(arena);
}
constexpr auto GetUserListRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetUserListRequest),
                                            alignof(GetUserListRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetUserListRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetUserListRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetUserListRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetUserListRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetUserListRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetUserListRequest>(), &GetUserListRequest::ByteSizeLong,
            &GetUserListRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetUserListRequest, _impl_._cached_size_),
        false,
    },
    &GetUserListRequest::kDescriptorMethods,
    &descriptor_table_lobby_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetUserListRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 46, 2> GetUserListRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::GetUserListRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 page_size = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetUserListRequest, _impl_.page_size_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(GetUserListRequest, _impl_.page_size_)}},
    // .blokus.UserStatus status_filter = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetUserListRequest, _impl_.status_filter_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GetUserListRequest, _impl_.status_filter_)}},
    // string search_query = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GetUserListRequest, _impl_.search_query_)}},
    // int32 page = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetUserListRequest, _impl_.page_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GetUserListRequest, _impl_.page_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .blokus.UserStatus status_filter = 1;
    {PROTOBUF_FIELD_OFFSET(GetUserListRequest, _impl_.status_filter_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string search_query = 2;
    {PROTOBUF_FIELD_OFFSET(GetUserListRequest, _impl_.search_query_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 page = 3;
    {PROTOBUF_FIELD_OFFSET(GetUserListRequest, _impl_.page_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 page_size = 4;
    {PROTOBUF_FIELD_OFFSET(GetUserListRequest, _impl_.page_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\31\0\14\0\0\0\0\0"
    "blokus.GetUserListRequest"
    "search_query"
  }},
};

PROTOBUF_NOINLINE void GetUserListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.GetUserListRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.search_query_.ClearToEmpty();
  ::memset(&_impl_.status_filter_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.page_size_) -
      reinterpret_cast<char*>(&_impl_.status_filter_)) + sizeof(_impl_.page_size_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetUserListRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetUserListRequest& this_ = static_cast<const GetUserListRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetUserListRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetUserListRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.GetUserListRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .blokus.UserStatus status_filter = 1;
          if (this_._internal_status_filter() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_status_filter(), target);
          }

          // string search_query = 2;
          if (!this_._internal_search_query().empty()) {
            const std::string& _s = this_._internal_search_query();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.GetUserListRequest.search_query");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int32 page = 3;
          if (this_._internal_page() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_page(), target);
          }

          // int32 page_size = 4;
          if (this_._internal_page_size() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_page_size(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.GetUserListRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetUserListRequest::ByteSizeLong(const MessageLite& base) {
          const GetUserListRequest& this_ = static_cast<const GetUserListRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetUserListRequest::ByteSizeLong() const {
          const GetUserListRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.GetUserListRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string search_query = 2;
            if (!this_._internal_search_query().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_search_query());
            }
            // .blokus.UserStatus status_filter = 1;
            if (this_._internal_status_filter() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status_filter());
            }
            // int32 page = 3;
            if (this_._internal_page() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_page());
            }
            // int32 page_size = 4;
            if (this_._internal_page_size() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_page_size());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetUserListRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetUserListRequest*>(&to_msg);
  auto& from = static_cast<const GetUserListRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.GetUserListRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_search_query().empty()) {
    _this->_internal_set_search_query(from._internal_search_query());
  }
  if (from._internal_status_filter() != 0) {
    _this->_impl_.status_filter_ = from._impl_.status_filter_;
  }
  if (from._internal_page() != 0) {
    _this->_impl_.page_ = from._impl_.page_;
  }
  if (from._internal_page_size() != 0) {
    _this->_impl_.page_size_ = from._impl_.page_size_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetUserListRequest::CopyFrom(const GetUserListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.GetUserListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetUserListRequest::InternalSwap(GetUserListRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.search_query_, &other->_impl_.search_query_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetUserListRequest, _impl_.page_size_)
      + sizeof(GetUserListRequest::_impl_.page_size_)
      - PROTOBUF_FIELD_OFFSET(GetUserListRequest, _impl_.status_filter_)>(
          reinterpret_cast<char*>(&_impl_.status_filter_),
          reinterpret_cast<char*>(&other->_impl_.status_filter_));
}

::google::protobuf::Metadata GetUserListRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UserListUpdate::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UserListUpdate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UserListUpdate, _impl_._has_bits_);
};

void UserListUpdate::clear_user_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.user_info_ != nullptr) _impl_.user_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void UserListUpdate::clear_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.updated_at_ != nullptr) _impl_.updated_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
UserListUpdate::UserListUpdate(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.UserListUpdate)
}
inline PROTOBUF_NDEBUG_INLINE UserListUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::UserListUpdate& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UserListUpdate::UserListUpdate(
    ::google::protobuf::Arena* arena,
    const UserListUpdate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UserListUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.user_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::blokus::UserInfo>(
                              arena, *from._impl_.user_info_)
                        : nullptr;
  _impl_.updated_at_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.updated_at_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, update_type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, update_type_),
           offsetof(Impl_, room_id_) -
               offsetof(Impl_, update_type_) +
               sizeof(Impl_::room_id_));

  // @@protoc_insertion_point(copy_constructor:blokus.UserListUpdate)
}
inline PROTOBUF_NDEBUG_INLINE UserListUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UserListUpdate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, user_info_),
           0,
           offsetof(Impl_, room_id_) -
               offsetof(Impl_, user_info_) +
               sizeof(Impl_::room_id_));
}
UserListUpdate::~UserListUpdate() {
  // @@protoc_insertion_point(destructor:blokus.UserListUpdate)
  SharedDtor(*this);
}
inline void UserListUpdate::SharedDtor(MessageLite& self) {
  UserListUpdate& this_ = static_cast<UserListUpdate&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.user_info_;
  delete this_._impl_.updated_at_;
  this_._impl_.~Impl_();
}

inline void* UserListUpdate::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UserListUpdate(arena);
}
constexpr auto UserListUpdate::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UserListUpdate),
                                            alignof(UserListUpdate));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UserListUpdate::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UserListUpdate_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UserListUpdate::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UserListUpdate>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UserListUpdate::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UserListUpdate>(), &UserListUpdate::ByteSizeLong,
            &UserListUpdate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UserListUpdate, _impl_._cached_size_),
        false,
    },
    &UserListUpdate::kDescriptorMethods,
    &descriptor_table_lobby_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UserListUpdate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 0, 2> UserListUpdate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UserListUpdate, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::UserListUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .blokus.UserListUpdate.UpdateType update_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserListUpdate, _impl_.update_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UserListUpdate, _impl_.update_type_)}},
    // .blokus.UserInfo user_info = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(UserListUpdate, _impl_.user_info_)}},
    // .blokus.UserStatus old_status = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserListUpdate, _impl_.old_status_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(UserListUpdate, _impl_.old_status_)}},
    // .blokus.UserStatus new_status = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserListUpdate, _impl_.new_status_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(UserListUpdate, _impl_.new_status_)}},
    // int32 room_id = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserListUpdate, _impl_.room_id_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(UserListUpdate, _impl_.room_id_)}},
    // .google.protobuf.Timestamp updated_at = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 1, 1, PROTOBUF_FIELD_OFFSET(UserListUpdate, _impl_.updated_at_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .blokus.UserListUpdate.UpdateType update_type = 1;
    {PROTOBUF_FIELD_OFFSET(UserListUpdate, _impl_.update_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .blokus.UserInfo user_info = 2;
    {PROTOBUF_FIELD_OFFSET(UserListUpdate, _impl_.user_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .blokus.UserStatus old_status = 3;
    {PROTOBUF_FIELD_OFFSET(UserListUpdate, _impl_.old_status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .blokus.UserStatus new_status = 4;
    {PROTOBUF_FIELD_OFFSET(UserListUpdate, _impl_.new_status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int32 room_id = 5;
    {PROTOBUF_FIELD_OFFSET(UserListUpdate, _impl_.room_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .google.protobuf.Timestamp updated_at = 6;
    {PROTOBUF_FIELD_OFFSET(UserListUpdate, _impl_.updated_at_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::blokus::UserInfo>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UserListUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.UserListUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.user_info_ != nullptr);
      _impl_.user_info_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.updated_at_ != nullptr);
      _impl_.updated_at_->Clear();
    }
  }
  ::memset(&_impl_.update_type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.room_id_) -
      reinterpret_cast<char*>(&_impl_.update_type_)) + sizeof(_impl_.room_id_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UserListUpdate::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UserListUpdate& this_ = static_cast<const UserListUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UserListUpdate::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UserListUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.UserListUpdate)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .blokus.UserListUpdate.UpdateType update_type = 1;
          if (this_._internal_update_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_update_type(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .blokus.UserInfo user_info = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.user_info_, this_._impl_.user_info_->GetCachedSize(), target,
                stream);
          }

          // .blokus.UserStatus old_status = 3;
          if (this_._internal_old_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_old_status(), target);
          }

          // .blokus.UserStatus new_status = 4;
          if (this_._internal_new_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_new_status(), target);
          }

          // int32 room_id = 5;
          if (this_._internal_room_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_room_id(), target);
          }

          // .google.protobuf.Timestamp updated_at = 6;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.updated_at_, this_._impl_.updated_at_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.UserListUpdate)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UserListUpdate::ByteSizeLong(const MessageLite& base) {
          const UserListUpdate& this_ = static_cast<const UserListUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UserListUpdate::ByteSizeLong() const {
          const UserListUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.UserListUpdate)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .blokus.UserInfo user_info = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.user_info_);
            }
            // .google.protobuf.Timestamp updated_at = 6;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.updated_at_);
            }
          }
           {
            // .blokus.UserListUpdate.UpdateType update_type = 1;
            if (this_._internal_update_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_update_type());
            }
            // .blokus.UserStatus old_status = 3;
            if (this_._internal_old_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_old_status());
            }
            // .blokus.UserStatus new_status = 4;
            if (this_._internal_new_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_new_status());
            }
            // int32 room_id = 5;
            if (this_._internal_room_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_room_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UserListUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UserListUpdate*>(&to_msg);
  auto& from = static_cast<const UserListUpdate&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.UserListUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.user_info_ != nullptr);
      if (_this->_impl_.user_info_ == nullptr) {
        _this->_impl_.user_info_ =
            ::google::protobuf::Message::CopyConstruct<::blokus::UserInfo>(arena, *from._impl_.user_info_);
      } else {
        _this->_impl_.user_info_->MergeFrom(*from._impl_.user_info_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.updated_at_ != nullptr);
      if (_this->_impl_.updated_at_ == nullptr) {
        _this->_impl_.updated_at_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.updated_at_);
      } else {
        _this->_impl_.updated_at_->MergeFrom(*from._impl_.updated_at_);
      }
    }
  }
  if (from._internal_update_type() != 0) {
    _this->_impl_.update_type_ = from._impl_.update_type_;
  }
  if (from._internal_old_status() != 0) {
    _this->_impl_.old_status_ = from._impl_.old_status_;
  }
  if (from._internal_new_status() != 0) {
    _this->_impl_.new_status_ = from._impl_.new_status_;
  }
  if (from._internal_room_id() != 0) {
    _this->_impl_.room_id_ = from._impl_.room_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserListUpdate::CopyFrom(const UserListUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.UserListUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UserListUpdate::InternalSwap(UserListUpdate* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserListUpdate, _impl_.room_id_)
      + sizeof(UserListUpdate::_impl_.room_id_)
      - PROTOBUF_FIELD_OFFSET(UserListUpdate, _impl_.user_info_)>(
          reinterpret_cast<char*>(&_impl_.user_info_),
          reinterpret_cast<char*>(&other->_impl_.user_info_));
}

::google::protobuf::Metadata UserListUpdate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetUserStatsRequest::_Internal {
 public:
};

GetUserStatsRequest::GetUserStatsRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.GetUserStatsRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetUserStatsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::GetUserStatsRequest& from_msg)
      : username_(arena, from.username_),
        _cached_size_{0} {}

GetUserStatsRequest::GetUserStatsRequest(
    ::google::protobuf::Arena* arena,
    const GetUserStatsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetUserStatsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, include_game_history_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, include_game_history_),
           offsetof(Impl_, recent_games_count_) -
               offsetof(Impl_, include_game_history_) +
               sizeof(Impl_::recent_games_count_));

  // @@protoc_insertion_point(copy_constructor:blokus.GetUserStatsRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetUserStatsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : username_(arena),
        _cached_size_{0} {}

inline void GetUserStatsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, include_game_history_),
           0,
           offsetof(Impl_, recent_games_count_) -
               offsetof(Impl_, include_game_history_) +
               sizeof(Impl_::recent_games_count_));
}
GetUserStatsRequest::~GetUserStatsRequest() {
  // @@protoc_insertion_point(destructor:blokus.GetUserStatsRequest)
  SharedDtor(*this);
}
inline void GetUserStatsRequest::SharedDtor(MessageLite& self) {
  GetUserStatsRequest& this_ = static_cast<GetUserStatsRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.username_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GetUserStatsRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetUserStatsRequest(arena);
}
constexpr auto GetUserStatsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetUserStatsRequest),
                                            alignof(GetUserStatsRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetUserStatsRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetUserStatsRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetUserStatsRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetUserStatsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetUserStatsRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetUserStatsRequest>(), &GetUserStatsRequest::ByteSizeLong,
            &GetUserStatsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetUserStatsRequest, _impl_._cached_size_),
        false,
    },
    &GetUserStatsRequest::kDescriptorMethods,
    &descriptor_table_lobby_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetUserStatsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 43, 2> GetUserStatsRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::GetUserStatsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 recent_games_count = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetUserStatsRequest, _impl_.recent_games_count_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(GetUserStatsRequest, _impl_.recent_games_count_)}},
    // string username = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetUserStatsRequest, _impl_.username_)}},
    // bool include_game_history = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetUserStatsRequest, _impl_.include_game_history_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetUserStatsRequest, _impl_.include_game_history_)}},
    // bool include_achievements = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetUserStatsRequest, _impl_.include_achievements_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GetUserStatsRequest, _impl_.include_achievements_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string username = 1;
    {PROTOBUF_FIELD_OFFSET(GetUserStatsRequest, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool include_game_history = 2;
    {PROTOBUF_FIELD_OFFSET(GetUserStatsRequest, _impl_.include_game_history_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool include_achievements = 3;
    {PROTOBUF_FIELD_OFFSET(GetUserStatsRequest, _impl_.include_achievements_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 recent_games_count = 4;
    {PROTOBUF_FIELD_OFFSET(GetUserStatsRequest, _impl_.recent_games_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\32\10\0\0\0\0\0\0"
    "blokus.GetUserStatsRequest"
    "username"
  }},
};

PROTOBUF_NOINLINE void GetUserStatsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.GetUserStatsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  ::memset(&_impl_.include_game_history_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.recent_games_count_) -
      reinterpret_cast<char*>(&_impl_.include_game_history_)) + sizeof(_impl_.recent_games_count_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetUserStatsRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetUserStatsRequest& this_ = static_cast<const GetUserStatsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetUserStatsRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetUserStatsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.GetUserStatsRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string username = 1;
          if (!this_._internal_username().empty()) {
            const std::string& _s = this_._internal_username();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.GetUserStatsRequest.username");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bool include_game_history = 2;
          if (this_._internal_include_game_history() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_include_game_history(), target);
          }

          // bool include_achievements = 3;
          if (this_._internal_include_achievements() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_include_achievements(), target);
          }

          // int32 recent_games_count = 4;
          if (this_._internal_recent_games_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_recent_games_count(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.GetUserStatsRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetUserStatsRequest::ByteSizeLong(const MessageLite& base) {
          const GetUserStatsRequest& this_ = static_cast<const GetUserStatsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetUserStatsRequest::ByteSizeLong() const {
          const GetUserStatsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.GetUserStatsRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string username = 1;
            if (!this_._internal_username().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_username());
            }
            // bool include_game_history = 2;
            if (this_._internal_include_game_history() != 0) {
              total_size += 2;
            }
            // bool include_achievements = 3;
            if (this_._internal_include_achievements() != 0) {
              total_size += 2;
            }
            // int32 recent_games_count = 4;
            if (this_._internal_recent_games_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_recent_games_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetUserStatsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetUserStatsRequest*>(&to_msg);
  auto& from = static_cast<const GetUserStatsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.GetUserStatsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (from._internal_include_game_history() != 0) {
    _this->_impl_.include_game_history_ = from._impl_.include_game_history_;
  }
  if (from._internal_include_achievements() != 0) {
    _this->_impl_.include_achievements_ = from._impl_.include_achievements_;
  }
  if (from._internal_recent_games_count() != 0) {
    _this->_impl_.recent_games_count_ = from._impl_.recent_games_count_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetUserStatsRequest::CopyFrom(const GetUserStatsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.GetUserStatsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetUserStatsRequest::InternalSwap(GetUserStatsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetUserStatsRequest, _impl_.recent_games_count_)
      + sizeof(GetUserStatsRequest::_impl_.recent_games_count_)
      - PROTOBUF_FIELD_OFFSET(GetUserStatsRequest, _impl_.include_game_history_)>(
          reinterpret_cast<char*>(&_impl_.include_game_history_),
          reinterpret_cast<char*>(&other->_impl_.include_game_history_));
}

::google::protobuf::Metadata GetUserStatsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UserStatsResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UserStatsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_._has_bits_);
};

void UserStatsResponse::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.result_ != nullptr) _impl_.result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void UserStatsResponse::clear_user_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.user_info_ != nullptr) _impl_.user_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void UserStatsResponse::clear_recent_games() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recent_games_.Clear();
}
UserStatsResponse::UserStatsResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.UserStatsResponse)
}
inline PROTOBUF_NDEBUG_INLINE UserStatsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::UserStatsResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        recent_games_{visibility, arena, from.recent_games_},
        achievements_{visibility, arena, from.achievements_},
        tier_(arena, from.tier_) {}

UserStatsResponse::UserStatsResponse(
    ::google::protobuf::Arena* arena,
    const UserStatsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UserStatsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::blokus::Result>(
                              arena, *from._impl_.result_)
                        : nullptr;
  _impl_.user_info_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::blokus::UserInfo>(
                              arena, *from._impl_.user_info_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, games_today_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, games_today_),
           offsetof(Impl_, rating_points_) -
               offsetof(Impl_, games_today_) +
               sizeof(Impl_::rating_points_));

  // @@protoc_insertion_point(copy_constructor:blokus.UserStatsResponse)
}
inline PROTOBUF_NDEBUG_INLINE UserStatsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        recent_games_{visibility, arena},
        achievements_{visibility, arena},
        tier_(arena) {}

inline void UserStatsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, result_),
           0,
           offsetof(Impl_, rating_points_) -
               offsetof(Impl_, result_) +
               sizeof(Impl_::rating_points_));
}
UserStatsResponse::~UserStatsResponse() {
  // @@protoc_insertion_point(destructor:blokus.UserStatsResponse)
  SharedDtor(*this);
}
inline void UserStatsResponse::SharedDtor(MessageLite& self) {
  UserStatsResponse& this_ = static_cast<UserStatsResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.tier_.Destroy();
  delete this_._impl_.result_;
  delete this_._impl_.user_info_;
  this_._impl_.~Impl_();
}

inline void* UserStatsResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UserStatsResponse(arena);
}
constexpr auto UserStatsResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.recent_games_) +
          decltype(UserStatsResponse::_impl_.recent_games_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.achievements_) +
          decltype(UserStatsResponse::_impl_.achievements_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(UserStatsResponse), alignof(UserStatsResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&UserStatsResponse::PlacementNew_,
                                 sizeof(UserStatsResponse),
                                 alignof(UserStatsResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UserStatsResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UserStatsResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UserStatsResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UserStatsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UserStatsResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UserStatsResponse>(), &UserStatsResponse::ByteSizeLong,
            &UserStatsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_._cached_size_),
        false,
    },
    &UserStatsResponse::kDescriptorMethods,
    &descriptor_table_lobby_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UserStatsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 16, 3, 65, 2> UserStatsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_._has_bits_),
    0, // no _extensions_
    16, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294901760,  // skipmap
    offsetof(decltype(_table_), field_entries),
    16,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::UserStatsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string tier = 16;
    {::_pbi::TcParser::FastUS2,
     {386, 63, 0, PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.tier_)}},
    // .blokus.Result result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.result_)}},
    // .blokus.UserInfo user_info = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.user_info_)}},
    // int32 games_today = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserStatsResponse, _impl_.games_today_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.games_today_)}},
    // int32 games_this_week = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserStatsResponse, _impl_.games_this_week_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.games_this_week_)}},
    // int32 games_this_month = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserStatsResponse, _impl_.games_this_month_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.games_this_month_)}},
    // int32 consecutive_wins = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserStatsResponse, _impl_.consecutive_wins_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.consecutive_wins_)}},
    // int32 longest_win_streak = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserStatsResponse, _impl_.longest_win_streak_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.longest_win_streak_)}},
    // float average_game_duration = 8;
    {::_pbi::TcParser::FastF32S1,
     {69, 63, 0, PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.average_game_duration_)}},
    // int32 favorite_color = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserStatsResponse, _impl_.favorite_color_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.favorite_color_)}},
    // repeated .blokus.GameStats recent_games = 10;
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 2, PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.recent_games_)}},
    // repeated string achievements = 11;
    {::_pbi::TcParser::FastUR1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.achievements_)}},
    // int32 achievement_points = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserStatsResponse, _impl_.achievement_points_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.achievement_points_)}},
    // int32 current_rank = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserStatsResponse, _impl_.current_rank_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.current_rank_)}},
    // int32 rank_change = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserStatsResponse, _impl_.rank_change_), 63>(),
     {112, 63, 0, PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.rank_change_)}},
    // int32 rating_points = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserStatsResponse, _impl_.rating_points_), 63>(),
     {120, 63, 0, PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.rating_points_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .blokus.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .blokus.UserInfo user_info = 2;
    {PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.user_info_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 games_today = 3;
    {PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.games_today_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 games_this_week = 4;
    {PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.games_this_week_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 games_this_month = 5;
    {PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.games_this_month_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 consecutive_wins = 6;
    {PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.consecutive_wins_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 longest_win_streak = 7;
    {PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.longest_win_streak_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // float average_game_duration = 8;
    {PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.average_game_duration_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // int32 favorite_color = 9;
    {PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.favorite_color_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .blokus.GameStats recent_games = 10;
    {PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.recent_games_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string achievements = 11;
    {PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.achievements_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // int32 achievement_points = 12;
    {PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.achievement_points_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 current_rank = 13;
    {PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.current_rank_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 rank_change = 14;
    {PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.rank_change_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 rating_points = 15;
    {PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.rating_points_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string tier = 16;
    {PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.tier_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::blokus::Result>()},
    {::_pbi::TcParser::GetTable<::blokus::UserInfo>()},
    {::_pbi::TcParser::GetTable<::blokus::GameStats>()},
  }}, {{
    "\30\0\0\0\0\0\0\0\0\0\0\14\0\0\0\0\4\0\0\0\0\0\0\0"
    "blokus.UserStatsResponse"
    "achievements"
    "tier"
  }},
};

PROTOBUF_NOINLINE void UserStatsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.UserStatsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.recent_games_.Clear();
  _impl_.achievements_.Clear();
  _impl_.tier_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.result_ != nullptr);
      _impl_.result_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.user_info_ != nullptr);
      _impl_.user_info_->Clear();
    }
  }
  ::memset(&_impl_.games_today_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.rating_points_) -
      reinterpret_cast<char*>(&_impl_.games_today_)) + sizeof(_impl_.rating_points_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UserStatsResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UserStatsResponse& this_ = static_cast<const UserStatsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UserStatsResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UserStatsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.UserStatsResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .blokus.Result result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.result_, this_._impl_.result_->GetCachedSize(), target,
                stream);
          }

          // .blokus.UserInfo user_info = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.user_info_, this_._impl_.user_info_->GetCachedSize(), target,
                stream);
          }

          // int32 games_today = 3;
          if (this_._internal_games_today() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_games_today(), target);
          }

          // int32 games_this_week = 4;
          if (this_._internal_games_this_week() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_games_this_week(), target);
          }

          // int32 games_this_month = 5;
          if (this_._internal_games_this_month() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_games_this_month(), target);
          }

          // int32 consecutive_wins = 6;
          if (this_._internal_consecutive_wins() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<6>(
                    stream, this_._internal_consecutive_wins(), target);
          }

          // int32 longest_win_streak = 7;
          if (this_._internal_longest_win_streak() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<7>(
                    stream, this_._internal_longest_win_streak(), target);
          }

          // float average_game_duration = 8;
          if (::absl::bit_cast<::uint32_t>(this_._internal_average_game_duration()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                8, this_._internal_average_game_duration(), target);
          }

          // int32 favorite_color = 9;
          if (this_._internal_favorite_color() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<9>(
                    stream, this_._internal_favorite_color(), target);
          }

          // repeated .blokus.GameStats recent_games = 10;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_recent_games_size());
               i < n; i++) {
            const auto& repfield = this_._internal_recent_games().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    10, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated string achievements = 11;
          for (int i = 0, n = this_._internal_achievements_size(); i < n; ++i) {
            const auto& s = this_._internal_achievements().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.UserStatsResponse.achievements");
            target = stream->WriteString(11, s, target);
          }

          // int32 achievement_points = 12;
          if (this_._internal_achievement_points() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<12>(
                    stream, this_._internal_achievement_points(), target);
          }

          // int32 current_rank = 13;
          if (this_._internal_current_rank() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<13>(
                    stream, this_._internal_current_rank(), target);
          }

          // int32 rank_change = 14;
          if (this_._internal_rank_change() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<14>(
                    stream, this_._internal_rank_change(), target);
          }

          // int32 rating_points = 15;
          if (this_._internal_rating_points() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<15>(
                    stream, this_._internal_rating_points(), target);
          }

          // string tier = 16;
          if (!this_._internal_tier().empty()) {
            const std::string& _s = this_._internal_tier();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.UserStatsResponse.tier");
            target = stream->WriteStringMaybeAliased(16, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.UserStatsResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UserStatsResponse::ByteSizeLong(const MessageLite& base) {
          const UserStatsResponse& this_ = static_cast<const UserStatsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UserStatsResponse::ByteSizeLong() const {
          const UserStatsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.UserStatsResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .blokus.GameStats recent_games = 10;
            {
              total_size += 1UL * this_._internal_recent_games_size();
              for (const auto& msg : this_._internal_recent_games()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated string achievements = 11;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_achievements().size());
              for (int i = 0, n = this_._internal_achievements().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_achievements().Get(i));
              }
            }
          }
           {
            // string tier = 16;
            if (!this_._internal_tier().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_tier());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .blokus.Result result = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.result_);
            }
            // .blokus.UserInfo user_info = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.user_info_);
            }
          }
           {
            // int32 games_today = 3;
            if (this_._internal_games_today() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_games_today());
            }
            // int32 games_this_week = 4;
            if (this_._internal_games_this_week() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_games_this_week());
            }
            // int32 games_this_month = 5;
            if (this_._internal_games_this_month() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_games_this_month());
            }
            // int32 consecutive_wins = 6;
            if (this_._internal_consecutive_wins() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_consecutive_wins());
            }
            // int32 longest_win_streak = 7;
            if (this_._internal_longest_win_streak() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_longest_win_streak());
            }
            // float average_game_duration = 8;
            if (::absl::bit_cast<::uint32_t>(this_._internal_average_game_duration()) != 0) {
              total_size += 5;
            }
            // int32 favorite_color = 9;
            if (this_._internal_favorite_color() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_favorite_color());
            }
            // int32 achievement_points = 12;
            if (this_._internal_achievement_points() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_achievement_points());
            }
            // int32 current_rank = 13;
            if (this_._internal_current_rank() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_current_rank());
            }
            // int32 rank_change = 14;
            if (this_._internal_rank_change() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_rank_change());
            }
            // int32 rating_points = 15;
            if (this_._internal_rating_points() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_rating_points());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UserStatsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UserStatsResponse*>(&to_msg);
  auto& from = static_cast<const UserStatsResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.UserStatsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_recent_games()->MergeFrom(
      from._internal_recent_games());
  _this->_internal_mutable_achievements()->MergeFrom(from._internal_achievements());
  if (!from._internal_tier().empty()) {
    _this->_internal_set_tier(from._internal_tier());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.result_ != nullptr);
      if (_this->_impl_.result_ == nullptr) {
        _this->_impl_.result_ =
            ::google::protobuf::Message::CopyConstruct<::blokus::Result>(arena, *from._impl_.result_);
      } else {
        _this->_impl_.result_->MergeFrom(*from._impl_.result_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.user_info_ != nullptr);
      if (_this->_impl_.user_info_ == nullptr) {
        _this->_impl_.user_info_ =
            ::google::protobuf::Message::CopyConstruct<::blokus::UserInfo>(arena, *from._impl_.user_info_);
      } else {
        _this->_impl_.user_info_->MergeFrom(*from._impl_.user_info_);
      }
    }
  }
  if (from._internal_games_today() != 0) {
    _this->_impl_.games_today_ = from._impl_.games_today_;
  }
  if (from._internal_games_this_week() != 0) {
    _this->_impl_.games_this_week_ = from._impl_.games_this_week_;
  }
  if (from._internal_games_this_month() != 0) {
    _this->_impl_.games_this_month_ = from._impl_.games_this_month_;
  }
  if (from._internal_consecutive_wins() != 0) {
    _this->_impl_.consecutive_wins_ = from._impl_.consecutive_wins_;
  }
  if (from._internal_longest_win_streak() != 0) {
    _this->_impl_.longest_win_streak_ = from._impl_.longest_win_streak_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_average_game_duration()) != 0) {
    _this->_impl_.average_game_duration_ = from._impl_.average_game_duration_;
  }
  if (from._internal_favorite_color() != 0) {
    _this->_impl_.favorite_color_ = from._impl_.favorite_color_;
  }
  if (from._internal_achievement_points() != 0) {
    _this->_impl_.achievement_points_ = from._impl_.achievement_points_;
  }
  if (from._internal_current_rank() != 0) {
    _this->_impl_.current_rank_ = from._impl_.current_rank_;
  }
  if (from._internal_rank_change() != 0) {
    _this->_impl_.rank_change_ = from._impl_.rank_change_;
  }
  if (from._internal_rating_points() != 0) {
    _this->_impl_.rating_points_ = from._impl_.rating_points_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserStatsResponse::CopyFrom(const UserStatsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.UserStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UserStatsResponse::InternalSwap(UserStatsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.recent_games_.InternalSwap(&other->_impl_.recent_games_);
  _impl_.achievements_.InternalSwap(&other->_impl_.achievements_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tier_, &other->_impl_.tier_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.rating_points_)
      + sizeof(UserStatsResponse::_impl_.rating_points_)
      - PROTOBUF_FIELD_OFFSET(UserStatsResponse, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::google::protobuf::Metadata UserStatsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FriendListRequest::_Internal {
 public:
};

FriendListRequest::FriendListRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.FriendListRequest)
}
FriendListRequest::FriendListRequest(
    ::google::protobuf::Arena* arena, const FriendListRequest& from)
    : FriendListRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE FriendListRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FriendListRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.include_offline_ = {};
}
FriendListRequest::~FriendListRequest() {
  // @@protoc_insertion_point(destructor:blokus.FriendListRequest)
  SharedDtor(*this);
}
inline void FriendListRequest::SharedDtor(MessageLite& self) {
  FriendListRequest& this_ = static_cast<FriendListRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* FriendListRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) FriendListRequest(arena);
}
constexpr auto FriendListRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(FriendListRequest),
                                            alignof(FriendListRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull FriendListRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_FriendListRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &FriendListRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<FriendListRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &FriendListRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<FriendListRequest>(), &FriendListRequest::ByteSizeLong,
            &FriendListRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(FriendListRequest, _impl_._cached_size_),
        false,
    },
    &FriendListRequest::kDescriptorMethods,
    &descriptor_table_lobby_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* FriendListRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> FriendListRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::FriendListRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool include_offline = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(FriendListRequest, _impl_.include_offline_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(FriendListRequest, _impl_.include_offline_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool include_offline = 1;
    {PROTOBUF_FIELD_OFFSET(FriendListRequest, _impl_.include_offline_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void FriendListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.FriendListRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.include_offline_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FriendListRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FriendListRequest& this_ = static_cast<const FriendListRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FriendListRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FriendListRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.FriendListRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool include_offline = 1;
          if (this_._internal_include_offline() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_include_offline(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.FriendListRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FriendListRequest::ByteSizeLong(const MessageLite& base) {
          const FriendListRequest& this_ = static_cast<const FriendListRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FriendListRequest::ByteSizeLong() const {
          const FriendListRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.FriendListRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bool include_offline = 1;
            if (this_._internal_include_offline() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void FriendListRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FriendListRequest*>(&to_msg);
  auto& from = static_cast<const FriendListRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.FriendListRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_include_offline() != 0) {
    _this->_impl_.include_offline_ = from._impl_.include_offline_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FriendListRequest::CopyFrom(const FriendListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.FriendListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FriendListRequest::InternalSwap(FriendListRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.include_offline_, other->_impl_.include_offline_);
}

::google::protobuf::Metadata FriendListRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FriendListResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<FriendListResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(FriendListResponse, _impl_._has_bits_);
};

void FriendListResponse::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.result_ != nullptr) _impl_.result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void FriendListResponse::clear_friends() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.friends_.Clear();
}
void FriendListResponse::clear_pending_requests() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_requests_.Clear();
}
void FriendListResponse::clear_sent_requests() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sent_requests_.Clear();
}
FriendListResponse::FriendListResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.FriendListResponse)
}
inline PROTOBUF_NDEBUG_INLINE FriendListResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::FriendListResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        friends_{visibility, arena, from.friends_},
        pending_requests_{visibility, arena, from.pending_requests_},
        sent_requests_{visibility, arena, from.sent_requests_} {}

FriendListResponse::FriendListResponse(
    ::google::protobuf::Arena* arena,
    const FriendListResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FriendListResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::blokus::Result>(
                              arena, *from._impl_.result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:blokus.FriendListResponse)
}
inline PROTOBUF_NDEBUG_INLINE FriendListResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        friends_{visibility, arena},
        pending_requests_{visibility, arena},
        sent_requests_{visibility, arena} {}

inline void FriendListResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
FriendListResponse::~FriendListResponse() {
  // @@protoc_insertion_point(destructor:blokus.FriendListResponse)
  SharedDtor(*this);
}
inline void FriendListResponse::SharedDtor(MessageLite& self) {
  FriendListResponse& this_ = static_cast<FriendListResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.result_;
  this_._impl_.~Impl_();
}

inline void* FriendListResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) FriendListResponse(arena);
}
constexpr auto FriendListResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(FriendListResponse, _impl_.friends_) +
          decltype(FriendListResponse::_impl_.friends_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FriendListResponse, _impl_.pending_requests_) +
          decltype(FriendListResponse::_impl_.pending_requests_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FriendListResponse, _impl_.sent_requests_) +
          decltype(FriendListResponse::_impl_.sent_requests_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(FriendListResponse), alignof(FriendListResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&FriendListResponse::PlacementNew_,
                                 sizeof(FriendListResponse),
                                 alignof(FriendListResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull FriendListResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_FriendListResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &FriendListResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<FriendListResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &FriendListResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<FriendListResponse>(), &FriendListResponse::ByteSizeLong,
            &FriendListResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(FriendListResponse, _impl_._cached_size_),
        false,
    },
    &FriendListResponse::kDescriptorMethods,
    &descriptor_table_lobby_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* FriendListResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2> FriendListResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FriendListResponse, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::FriendListResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .blokus.UserInfo sent_requests = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 3, PROTOBUF_FIELD_OFFSET(FriendListResponse, _impl_.sent_requests_)}},
    // .blokus.Result result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(FriendListResponse, _impl_.result_)}},
    // repeated .blokus.UserInfo friends = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(FriendListResponse, _impl_.friends_)}},
    // repeated .blokus.UserInfo pending_requests = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(FriendListResponse, _impl_.pending_requests_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .blokus.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(FriendListResponse, _impl_.result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .blokus.UserInfo friends = 2;
    {PROTOBUF_FIELD_OFFSET(FriendListResponse, _impl_.friends_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .blokus.UserInfo pending_requests = 3;
    {PROTOBUF_FIELD_OFFSET(FriendListResponse, _impl_.pending_requests_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .blokus.UserInfo sent_requests = 4;
    {PROTOBUF_FIELD_OFFSET(FriendListResponse, _impl_.sent_requests_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::blokus::Result>()},
    {::_pbi::TcParser::GetTable<::blokus::UserInfo>()},
    {::_pbi::TcParser::GetTable<::blokus::UserInfo>()},
    {::_pbi::TcParser::GetTable<::blokus::UserInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void FriendListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.FriendListResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.friends_.Clear();
  _impl_.pending_requests_.Clear();
  _impl_.sent_requests_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.result_ != nullptr);
    _impl_.result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FriendListResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FriendListResponse& this_ = static_cast<const FriendListResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FriendListResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FriendListResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.FriendListResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .blokus.Result result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.result_, this_._impl_.result_->GetCachedSize(), target,
                stream);
          }

          // repeated .blokus.UserInfo friends = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_friends_size());
               i < n; i++) {
            const auto& repfield = this_._internal_friends().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .blokus.UserInfo pending_requests = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_pending_requests_size());
               i < n; i++) {
            const auto& repfield = this_._internal_pending_requests().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .blokus.UserInfo sent_requests = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_sent_requests_size());
               i < n; i++) {
            const auto& repfield = this_._internal_sent_requests().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.FriendListResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FriendListResponse::ByteSizeLong(const MessageLite& base) {
          const FriendListResponse& this_ = static_cast<const FriendListResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FriendListResponse::ByteSizeLong() const {
          const FriendListResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.FriendListResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .blokus.UserInfo friends = 2;
            {
              total_size += 1UL * this_._internal_friends_size();
              for (const auto& msg : this_._internal_friends()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .blokus.UserInfo pending_requests = 3;
            {
              total_size += 1UL * this_._internal_pending_requests_size();
              for (const auto& msg : this_._internal_pending_requests()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .blokus.UserInfo sent_requests = 4;
            {
              total_size += 1UL * this_._internal_sent_requests_size();
              for (const auto& msg : this_._internal_sent_requests()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .blokus.Result result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void FriendListResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FriendListResponse*>(&to_msg);
  auto& from = static_cast<const FriendListResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.FriendListResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_friends()->MergeFrom(
      from._internal_friends());
  _this->_internal_mutable_pending_requests()->MergeFrom(
      from._internal_pending_requests());
  _this->_internal_mutable_sent_requests()->MergeFrom(
      from._internal_sent_requests());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.result_ != nullptr);
    if (_this->_impl_.result_ == nullptr) {
      _this->_impl_.result_ =
          ::google::protobuf::Message::CopyConstruct<::blokus::Result>(arena, *from._impl_.result_);
    } else {
      _this->_impl_.result_->MergeFrom(*from._impl_.result_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FriendListResponse::CopyFrom(const FriendListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.FriendListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FriendListResponse::InternalSwap(FriendListResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.friends_.InternalSwap(&other->_impl_.friends_);
  _impl_.pending_requests_.InternalSwap(&other->_impl_.pending_requests_);
  _impl_.sent_requests_.InternalSwap(&other->_impl_.sent_requests_);
  swap(_impl_.result_, other->_impl_.result_);
}

::google::protobuf::Metadata FriendListResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AddFriendRequest::_Internal {
 public:
};

AddFriendRequest::AddFriendRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.AddFriendRequest)
}
inline PROTOBUF_NDEBUG_INLINE AddFriendRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::AddFriendRequest& from_msg)
      : username_(arena, from.username_),
        message_(arena, from.message_),
        _cached_size_{0} {}

AddFriendRequest::AddFriendRequest(
    ::google::protobuf::Arena* arena,
    const AddFriendRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AddFriendRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:blokus.AddFriendRequest)
}
inline PROTOBUF_NDEBUG_INLINE AddFriendRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : username_(arena),
        message_(arena),
        _cached_size_{0} {}

inline void AddFriendRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AddFriendRequest::~AddFriendRequest() {
  // @@protoc_insertion_point(destructor:blokus.AddFriendRequest)
  SharedDtor(*this);
}
inline void AddFriendRequest::SharedDtor(MessageLite& self) {
  AddFriendRequest& this_ = static_cast<AddFriendRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.username_.Destroy();
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AddFriendRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AddFriendRequest(arena);
}
constexpr auto AddFriendRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AddFriendRequest),
                                            alignof(AddFriendRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AddFriendRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AddFriendRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AddFriendRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AddFriendRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AddFriendRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AddFriendRequest>(), &AddFriendRequest::ByteSizeLong,
            &AddFriendRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AddFriendRequest, _impl_._cached_size_),
        false,
    },
    &AddFriendRequest::kDescriptorMethods,
    &descriptor_table_lobby_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AddFriendRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 47, 2> AddFriendRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::AddFriendRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AddFriendRequest, _impl_.message_)}},
    // string username = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AddFriendRequest, _impl_.username_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string username = 1;
    {PROTOBUF_FIELD_OFFSET(AddFriendRequest, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(AddFriendRequest, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\10\7\0\0\0\0\0"
    "blokus.AddFriendRequest"
    "username"
    "message"
  }},
};

PROTOBUF_NOINLINE void AddFriendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.AddFriendRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AddFriendRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AddFriendRequest& this_ = static_cast<const AddFriendRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AddFriendRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AddFriendRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.AddFriendRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string username = 1;
          if (!this_._internal_username().empty()) {
            const std::string& _s = this_._internal_username();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.AddFriendRequest.username");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.AddFriendRequest.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.AddFriendRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AddFriendRequest::ByteSizeLong(const MessageLite& base) {
          const AddFriendRequest& this_ = static_cast<const AddFriendRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AddFriendRequest::ByteSizeLong() const {
          const AddFriendRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.AddFriendRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string username = 1;
            if (!this_._internal_username().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_username());
            }
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AddFriendRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AddFriendRequest*>(&to_msg);
  auto& from = static_cast<const AddFriendRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.AddFriendRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AddFriendRequest::CopyFrom(const AddFriendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.AddFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AddFriendRequest::InternalSwap(AddFriendRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
}

::google::protobuf::Metadata AddFriendRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AddFriendResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AddFriendResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AddFriendResponse, _impl_._has_bits_);
};

void AddFriendResponse::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.result_ != nullptr) _impl_.result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
AddFriendResponse::AddFriendResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.AddFriendResponse)
}
inline PROTOBUF_NDEBUG_INLINE AddFriendResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::AddFriendResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        message_(arena, from.message_) {}

AddFriendResponse::AddFriendResponse(
    ::google::protobuf::Arena* arena,
    const AddFriendResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AddFriendResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::blokus::Result>(
                              arena, *from._impl_.result_)
                        : nullptr;
  _impl_.auto_accepted_ = from._impl_.auto_accepted_;

  // @@protoc_insertion_point(copy_constructor:blokus.AddFriendResponse)
}
inline PROTOBUF_NDEBUG_INLINE AddFriendResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        message_(arena) {}

inline void AddFriendResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, result_),
           0,
           offsetof(Impl_, auto_accepted_) -
               offsetof(Impl_, result_) +
               sizeof(Impl_::auto_accepted_));
}
AddFriendResponse::~AddFriendResponse() {
  // @@protoc_insertion_point(destructor:blokus.AddFriendResponse)
  SharedDtor(*this);
}
inline void AddFriendResponse::SharedDtor(MessageLite& self) {
  AddFriendResponse& this_ = static_cast<AddFriendResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  delete this_._impl_.result_;
  this_._impl_.~Impl_();
}

inline void* AddFriendResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AddFriendResponse(arena);
}
constexpr auto AddFriendResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AddFriendResponse),
                                            alignof(AddFriendResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AddFriendResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AddFriendResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AddFriendResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AddFriendResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AddFriendResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AddFriendResponse>(), &AddFriendResponse::ByteSizeLong,
            &AddFriendResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AddFriendResponse, _impl_._cached_size_),
        false,
    },
    &AddFriendResponse::kDescriptorMethods,
    &descriptor_table_lobby_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AddFriendResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 40, 2> AddFriendResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AddFriendResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::AddFriendResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .blokus.Result result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AddFriendResponse, _impl_.result_)}},
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AddFriendResponse, _impl_.message_)}},
    // bool auto_accepted = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AddFriendResponse, _impl_.auto_accepted_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(AddFriendResponse, _impl_.auto_accepted_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .blokus.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(AddFriendResponse, _impl_.result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(AddFriendResponse, _impl_.message_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool auto_accepted = 3;
    {PROTOBUF_FIELD_OFFSET(AddFriendResponse, _impl_.auto_accepted_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::blokus::Result>()},
  }}, {{
    "\30\0\7\0\0\0\0\0"
    "blokus.AddFriendResponse"
    "message"
  }},
};

PROTOBUF_NOINLINE void AddFriendResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.AddFriendResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.result_ != nullptr);
    _impl_.result_->Clear();
  }
  _impl_.auto_accepted_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AddFriendResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AddFriendResponse& this_ = static_cast<const AddFriendResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AddFriendResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AddFriendResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.AddFriendResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .blokus.Result result = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.result_, this_._impl_.result_->GetCachedSize(), target,
                stream);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.AddFriendResponse.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // bool auto_accepted = 3;
          if (this_._internal_auto_accepted() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_auto_accepted(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.AddFriendResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AddFriendResponse::ByteSizeLong(const MessageLite& base) {
          const AddFriendResponse& this_ = static_cast<const AddFriendResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AddFriendResponse::ByteSizeLong() const {
          const AddFriendResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.AddFriendResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
          }
           {
            // .blokus.Result result = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.result_);
            }
          }
           {
            // bool auto_accepted = 3;
            if (this_._internal_auto_accepted() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AddFriendResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AddFriendResponse*>(&to_msg);
  auto& from = static_cast<const AddFriendResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.AddFriendResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.result_ != nullptr);
    if (_this->_impl_.result_ == nullptr) {
      _this->_impl_.result_ =
          ::google::protobuf::Message::CopyConstruct<::blokus::Result>(arena, *from._impl_.result_);
    } else {
      _this->_impl_.result_->MergeFrom(*from._impl_.result_);
    }
  }
  if (from._internal_auto_accepted() != 0) {
    _this->_impl_.auto_accepted_ = from._impl_.auto_accepted_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AddFriendResponse::CopyFrom(const AddFriendResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.AddFriendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AddFriendResponse::InternalSwap(AddFriendResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AddFriendResponse, _impl_.auto_accepted_)
      + sizeof(AddFriendResponse::_impl_.auto_accepted_)
      - PROTOBUF_FIELD_OFFSET(AddFriendResponse, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::google::protobuf::Metadata AddFriendResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ServerAnnouncementNotification::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ServerAnnouncementNotification>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ServerAnnouncementNotification, _impl_._has_bits_);
};

void ServerAnnouncementNotification::clear_valid_until() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.valid_until_ != nullptr) _impl_.valid_until_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ServerAnnouncementNotification::ServerAnnouncementNotification(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.ServerAnnouncementNotification)
}
inline PROTOBUF_NDEBUG_INLINE ServerAnnouncementNotification::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::ServerAnnouncementNotification& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        title_(arena, from.title_),
        message_(arena, from.message_),
        url_(arena, from.url_) {}

ServerAnnouncementNotification::ServerAnnouncementNotification(
    ::google::protobuf::Arena* arena,
    const ServerAnnouncementNotification& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ServerAnnouncementNotification* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.valid_until_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.valid_until_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, priority_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::priority_));

  // @@protoc_insertion_point(copy_constructor:blokus.ServerAnnouncementNotification)
}
inline PROTOBUF_NDEBUG_INLINE ServerAnnouncementNotification::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        title_(arena),
        message_(arena),
        url_(arena) {}

inline void ServerAnnouncementNotification::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, valid_until_),
           0,
           offsetof(Impl_, priority_) -
               offsetof(Impl_, valid_until_) +
               sizeof(Impl_::priority_));
}
ServerAnnouncementNotification::~ServerAnnouncementNotification() {
  // @@protoc_insertion_point(destructor:blokus.ServerAnnouncementNotification)
  SharedDtor(*this);
}
inline void ServerAnnouncementNotification::SharedDtor(MessageLite& self) {
  ServerAnnouncementNotification& this_ = static_cast<ServerAnnouncementNotification&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.title_.Destroy();
  this_._impl_.message_.Destroy();
  this_._impl_.url_.Destroy();
  delete this_._impl_.valid_until_;
  this_._impl_.~Impl_();
}

inline void* ServerAnnouncementNotification::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ServerAnnouncementNotification(arena);
}
constexpr auto ServerAnnouncementNotification::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ServerAnnouncementNotification),
                                            alignof(ServerAnnouncementNotification));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ServerAnnouncementNotification::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ServerAnnouncementNotification_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ServerAnnouncementNotification::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ServerAnnouncementNotification>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ServerAnnouncementNotification::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ServerAnnouncementNotification>(), &ServerAnnouncementNotification::ByteSizeLong,
            &ServerAnnouncementNotification::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ServerAnnouncementNotification, _impl_._cached_size_),
        false,
    },
    &ServerAnnouncementNotification::kDescriptorMethods,
    &descriptor_table_lobby_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ServerAnnouncementNotification::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 1, 69, 2> ServerAnnouncementNotification::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ServerAnnouncementNotification, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::ServerAnnouncementNotification>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .blokus.ServerAnnouncementNotification.AnnouncementType type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ServerAnnouncementNotification, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ServerAnnouncementNotification, _impl_.type_)}},
    // string title = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ServerAnnouncementNotification, _impl_.title_)}},
    // string message = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ServerAnnouncementNotification, _impl_.message_)}},
    // string url = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ServerAnnouncementNotification, _impl_.url_)}},
    // .google.protobuf.Timestamp valid_until = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(ServerAnnouncementNotification, _impl_.valid_until_)}},
    // bool requires_acknowledgment = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ServerAnnouncementNotification, _impl_.requires_acknowledgment_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(ServerAnnouncementNotification, _impl_.requires_acknowledgment_)}},
    // bool show_popup = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ServerAnnouncementNotification, _impl_.show_popup_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(ServerAnnouncementNotification, _impl_.show_popup_)}},
    // bool show_banner = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ServerAnnouncementNotification, _impl_.show_banner_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(ServerAnnouncementNotification, _impl_.show_banner_)}},
    // int32 priority = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ServerAnnouncementNotification, _impl_.priority_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(ServerAnnouncementNotification, _impl_.priority_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .blokus.ServerAnnouncementNotification.AnnouncementType type = 1;
    {PROTOBUF_FIELD_OFFSET(ServerAnnouncementNotification, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string title = 2;
    {PROTOBUF_FIELD_OFFSET(ServerAnnouncementNotification, _impl_.title_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string message = 3;
    {PROTOBUF_FIELD_OFFSET(ServerAnnouncementNotification, _impl_.message_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string url = 4;
    {PROTOBUF_FIELD_OFFSET(ServerAnnouncementNotification, _impl_.url_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp valid_until = 5;
    {PROTOBUF_FIELD_OFFSET(ServerAnnouncementNotification, _impl_.valid_until_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool requires_acknowledgment = 6;
    {PROTOBUF_FIELD_OFFSET(ServerAnnouncementNotification, _impl_.requires_acknowledgment_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool show_popup = 7;
    {PROTOBUF_FIELD_OFFSET(ServerAnnouncementNotification, _impl_.show_popup_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool show_banner = 8;
    {PROTOBUF_FIELD_OFFSET(ServerAnnouncementNotification, _impl_.show_banner_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 priority = 9;
    {PROTOBUF_FIELD_OFFSET(ServerAnnouncementNotification, _impl_.priority_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\45\0\5\7\3\0\0\0\0\0\0\0\0\0\0\0"
    "blokus.ServerAnnouncementNotification"
    "title"
    "message"
    "url"
  }},
};

PROTOBUF_NOINLINE void ServerAnnouncementNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.ServerAnnouncementNotification)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.title_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  _impl_.url_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.valid_until_ != nullptr);
    _impl_.valid_until_->Clear();
  }
  ::memset(&_impl_.type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.priority_) -
      reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.priority_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ServerAnnouncementNotification::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ServerAnnouncementNotification& this_ = static_cast<const ServerAnnouncementNotification&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ServerAnnouncementNotification::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ServerAnnouncementNotification& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.ServerAnnouncementNotification)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .blokus.ServerAnnouncementNotification.AnnouncementType type = 1;
          if (this_._internal_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_type(), target);
          }

          // string title = 2;
          if (!this_._internal_title().empty()) {
            const std::string& _s = this_._internal_title();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.ServerAnnouncementNotification.title");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string message = 3;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.ServerAnnouncementNotification.message");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string url = 4;
          if (!this_._internal_url().empty()) {
            const std::string& _s = this_._internal_url();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.ServerAnnouncementNotification.url");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp valid_until = 5;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.valid_until_, this_._impl_.valid_until_->GetCachedSize(), target,
                stream);
          }

          // bool requires_acknowledgment = 6;
          if (this_._internal_requires_acknowledgment() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_requires_acknowledgment(), target);
          }

          // bool show_popup = 7;
          if (this_._internal_show_popup() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                7, this_._internal_show_popup(), target);
          }

          // bool show_banner = 8;
          if (this_._internal_show_banner() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_show_banner(), target);
          }

          // int32 priority = 9;
          if (this_._internal_priority() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<9>(
                    stream, this_._internal_priority(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.ServerAnnouncementNotification)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ServerAnnouncementNotification::ByteSizeLong(const MessageLite& base) {
          const ServerAnnouncementNotification& this_ = static_cast<const ServerAnnouncementNotification&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ServerAnnouncementNotification::ByteSizeLong() const {
          const ServerAnnouncementNotification& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.ServerAnnouncementNotification)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string title = 2;
            if (!this_._internal_title().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_title());
            }
            // string message = 3;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // string url = 4;
            if (!this_._internal_url().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_url());
            }
          }
           {
            // .google.protobuf.Timestamp valid_until = 5;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.valid_until_);
            }
          }
           {
            // .blokus.ServerAnnouncementNotification.AnnouncementType type = 1;
            if (this_._internal_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
            // bool requires_acknowledgment = 6;
            if (this_._internal_requires_acknowledgment() != 0) {
              total_size += 2;
            }
            // bool show_popup = 7;
            if (this_._internal_show_popup() != 0) {
              total_size += 2;
            }
            // bool show_banner = 8;
            if (this_._internal_show_banner() != 0) {
              total_size += 2;
            }
            // int32 priority = 9;
            if (this_._internal_priority() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_priority());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ServerAnnouncementNotification::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ServerAnnouncementNotification*>(&to_msg);
  auto& from = static_cast<const ServerAnnouncementNotification&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.ServerAnnouncementNotification)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (!from._internal_url().empty()) {
    _this->_internal_set_url(from._internal_url());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.valid_until_ != nullptr);
    if (_this->_impl_.valid_until_ == nullptr) {
      _this->_impl_.valid_until_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.valid_until_);
    } else {
      _this->_impl_.valid_until_->MergeFrom(*from._impl_.valid_until_);
    }
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  if (from._internal_requires_acknowledgment() != 0) {
    _this->_impl_.requires_acknowledgment_ = from._impl_.requires_acknowledgment_;
  }
  if (from._internal_show_popup() != 0) {
    _this->_impl_.show_popup_ = from._impl_.show_popup_;
  }
  if (from._internal_show_banner() != 0) {
    _this->_impl_.show_banner_ = from._impl_.show_banner_;
  }
  if (from._internal_priority() != 0) {
    _this->_impl_.priority_ = from._impl_.priority_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ServerAnnouncementNotification::CopyFrom(const ServerAnnouncementNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.ServerAnnouncementNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ServerAnnouncementNotification::InternalSwap(ServerAnnouncementNotification* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.url_, &other->_impl_.url_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ServerAnnouncementNotification, _impl_.priority_)
      + sizeof(ServerAnnouncementNotification::_impl_.priority_)
      - PROTOBUF_FIELD_OFFSET(ServerAnnouncementNotification, _impl_.valid_until_)>(
          reinterpret_cast<char*>(&_impl_.valid_until_),
          reinterpret_cast<char*>(&other->_impl_.valid_until_));
}

::google::protobuf::Metadata ServerAnnouncementNotification::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MaintenanceNotification::_Internal {
 public:
  using HasBits =
      decltype(std::declval<MaintenanceNotification>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MaintenanceNotification, _impl_._has_bits_);
};

void MaintenanceNotification::clear_start_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.start_time_ != nullptr) _impl_.start_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void MaintenanceNotification::clear_end_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.end_time_ != nullptr) _impl_.end_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
MaintenanceNotification::MaintenanceNotification(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:blokus.MaintenanceNotification)
}
inline PROTOBUF_NDEBUG_INLINE MaintenanceNotification::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::blokus::MaintenanceNotification& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        reason_(arena, from.reason_),
        details_(arena, from.details_) {}

MaintenanceNotification::MaintenanceNotification(
    ::google::protobuf::Arena* arena,
    const MaintenanceNotification& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MaintenanceNotification* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.start_time_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.start_time_)
                        : nullptr;
  _impl_.end_time_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.end_time_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, force_disconnect_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, force_disconnect_),
           offsetof(Impl_, warning_minutes_) -
               offsetof(Impl_, force_disconnect_) +
               sizeof(Impl_::warning_minutes_));

  // @@protoc_insertion_point(copy_constructor:blokus.MaintenanceNotification)
}
inline PROTOBUF_NDEBUG_INLINE MaintenanceNotification::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        reason_(arena),
        details_(arena) {}

inline void MaintenanceNotification::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, start_time_),
           0,
           offsetof(Impl_, warning_minutes_) -
               offsetof(Impl_, start_time_) +
               sizeof(Impl_::warning_minutes_));
}
MaintenanceNotification::~MaintenanceNotification() {
  // @@protoc_insertion_point(destructor:blokus.MaintenanceNotification)
  SharedDtor(*this);
}
inline void MaintenanceNotification::SharedDtor(MessageLite& self) {
  MaintenanceNotification& this_ = static_cast<MaintenanceNotification&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.reason_.Destroy();
  this_._impl_.details_.Destroy();
  delete this_._impl_.start_time_;
  delete this_._impl_.end_time_;
  this_._impl_.~Impl_();
}

inline void* MaintenanceNotification::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MaintenanceNotification(arena);
}
constexpr auto MaintenanceNotification::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MaintenanceNotification),
                                            alignof(MaintenanceNotification));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MaintenanceNotification::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MaintenanceNotification_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MaintenanceNotification::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MaintenanceNotification>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MaintenanceNotification::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MaintenanceNotification>(), &MaintenanceNotification::ByteSizeLong,
            &MaintenanceNotification::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MaintenanceNotification, _impl_._cached_size_),
        false,
    },
    &MaintenanceNotification::kDescriptorMethods,
    &descriptor_table_lobby_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MaintenanceNotification::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 52, 2> MaintenanceNotification::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MaintenanceNotification, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::blokus::MaintenanceNotification>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Timestamp start_time = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MaintenanceNotification, _impl_.start_time_)}},
    // .google.protobuf.Timestamp end_time = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(MaintenanceNotification, _impl_.end_time_)}},
    // string reason = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(MaintenanceNotification, _impl_.reason_)}},
    // string details = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(MaintenanceNotification, _impl_.details_)}},
    // bool force_disconnect = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MaintenanceNotification, _impl_.force_disconnect_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(MaintenanceNotification, _impl_.force_disconnect_)}},
    // int32 warning_minutes = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MaintenanceNotification, _impl_.warning_minutes_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(MaintenanceNotification, _impl_.warning_minutes_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp start_time = 1;
    {PROTOBUF_FIELD_OFFSET(MaintenanceNotification, _impl_.start_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp end_time = 2;
    {PROTOBUF_FIELD_OFFSET(MaintenanceNotification, _impl_.end_time_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string reason = 3;
    {PROTOBUF_FIELD_OFFSET(MaintenanceNotification, _impl_.reason_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string details = 4;
    {PROTOBUF_FIELD_OFFSET(MaintenanceNotification, _impl_.details_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool force_disconnect = 5;
    {PROTOBUF_FIELD_OFFSET(MaintenanceNotification, _impl_.force_disconnect_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 warning_minutes = 6;
    {PROTOBUF_FIELD_OFFSET(MaintenanceNotification, _impl_.warning_minutes_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\36\0\0\6\7\0\0\0"
    "blokus.MaintenanceNotification"
    "reason"
    "details"
  }},
};

PROTOBUF_NOINLINE void MaintenanceNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:blokus.MaintenanceNotification)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reason_.ClearToEmpty();
  _impl_.details_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.start_time_ != nullptr);
      _impl_.start_time_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.end_time_ != nullptr);
      _impl_.end_time_->Clear();
    }
  }
  ::memset(&_impl_.force_disconnect_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.warning_minutes_) -
      reinterpret_cast<char*>(&_impl_.force_disconnect_)) + sizeof(_impl_.warning_minutes_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MaintenanceNotification::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MaintenanceNotification& this_ = static_cast<const MaintenanceNotification&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MaintenanceNotification::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MaintenanceNotification& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:blokus.MaintenanceNotification)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp start_time = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.start_time_, this_._impl_.start_time_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp end_time = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.end_time_, this_._impl_.end_time_->GetCachedSize(), target,
                stream);
          }

          // string reason = 3;
          if (!this_._internal_reason().empty()) {
            const std::string& _s = this_._internal_reason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.MaintenanceNotification.reason");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string details = 4;
          if (!this_._internal_details().empty()) {
            const std::string& _s = this_._internal_details();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "blokus.MaintenanceNotification.details");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // bool force_disconnect = 5;
          if (this_._internal_force_disconnect() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_force_disconnect(), target);
          }

          // int32 warning_minutes = 6;
          if (this_._internal_warning_minutes() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<6>(
                    stream, this_._internal_warning_minutes(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:blokus.MaintenanceNotification)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MaintenanceNotification::ByteSizeLong(const MessageLite& base) {
          const MaintenanceNotification& this_ = static_cast<const MaintenanceNotification&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MaintenanceNotification::ByteSizeLong() const {
          const MaintenanceNotification& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:blokus.MaintenanceNotification)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string reason = 3;
            if (!this_._internal_reason().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reason());
            }
            // string details = 4;
            if (!this_._internal_details().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_details());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .google.protobuf.Timestamp start_time = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.start_time_);
            }
            // .google.protobuf.Timestamp end_time = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.end_time_);
            }
          }
           {
            // bool force_disconnect = 5;
            if (this_._internal_force_disconnect() != 0) {
              total_size += 2;
            }
            // int32 warning_minutes = 6;
            if (this_._internal_warning_minutes() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_warning_minutes());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MaintenanceNotification::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MaintenanceNotification*>(&to_msg);
  auto& from = static_cast<const MaintenanceNotification&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:blokus.MaintenanceNotification)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_reason().empty()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  if (!from._internal_details().empty()) {
    _this->_internal_set_details(from._internal_details());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.start_time_ != nullptr);
      if (_this->_impl_.start_time_ == nullptr) {
        _this->_impl_.start_time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.start_time_);
      } else {
        _this->_impl_.start_time_->MergeFrom(*from._impl_.start_time_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.end_time_ != nullptr);
      if (_this->_impl_.end_time_ == nullptr) {
        _this->_impl_.end_time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.end_time_);
      } else {
        _this->_impl_.end_time_->MergeFrom(*from._impl_.end_time_);
      }
    }
  }
  if (from._internal_force_disconnect() != 0) {
    _this->_impl_.force_disconnect_ = from._impl_.force_disconnect_;
  }
  if (from._internal_warning_minutes() != 0) {
    _this->_impl_.warning_minutes_ = from._impl_.warning_minutes_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MaintenanceNotification::CopyFrom(const MaintenanceNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blokus.MaintenanceNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MaintenanceNotification::InternalSwap(MaintenanceNotification* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, &other->_impl_.reason_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.details_, &other->_impl_.details_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MaintenanceNotification, _impl_.warning_minutes_)
      + sizeof(MaintenanceNotification::_impl_.warning_minutes_)
      - PROTOBUF_FIELD_OFFSET(MaintenanceNotification, _impl_.start_time_)>(
          reinterpret_cast<char*>(&_impl_.start_time_),
          reinterpret_cast<char*>(&other->_impl_.start_time_));
}

::google::protobuf::Metadata MaintenanceNotification::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace blokus
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_lobby_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
