syntax = "proto3";

package blokus;

import "google/protobuf/timestamp.proto";

// ========================================
// 기본 게임 타입들
// ========================================

// 플레이어 색상
enum PlayerColor {
  PLAYER_COLOR_NONE = 0;
  PLAYER_COLOR_BLUE = 1;
  PLAYER_COLOR_YELLOW = 2;
  PLAYER_COLOR_RED = 3;
  PLAYER_COLOR_GREEN = 4;
}

// 블록 타입 (21개 폴리오미노)
enum BlockType {
  BLOCK_TYPE_SINGLE = 0;
  
  // 2칸 블록
  BLOCK_TYPE_DOMINO = 1;
  
  // 3칸 블록
  BLOCK_TYPE_TRIO_LINE = 2;
  BLOCK_TYPE_TRIO_ANGLE = 3;
  
  // 4칸 블록 (테트로미노)
  BLOCK_TYPE_TETRO_I = 4;
  BLOCK_TYPE_TETRO_O = 5;
  BLOCK_TYPE_TETRO_T = 6;
  BLOCK_TYPE_TETRO_L = 7;
  BLOCK_TYPE_TETRO_S = 8;
  
  // 5칸 블록 (펜토미노)
  BLOCK_TYPE_PENTO_F = 9;
  BLOCK_TYPE_PENTO_I = 10;
  BLOCK_TYPE_PENTO_L = 11;
  BLOCK_TYPE_PENTO_N = 12;
  BLOCK_TYPE_PENTO_P = 13;
  BLOCK_TYPE_PENTO_T = 14;
  BLOCK_TYPE_PENTO_U = 15;
  BLOCK_TYPE_PENTO_V = 16;
  BLOCK_TYPE_PENTO_W = 17;
  BLOCK_TYPE_PENTO_X = 18;
  BLOCK_TYPE_PENTO_Y = 19;
  BLOCK_TYPE_PENTO_Z = 20;
}

// 블록 회전 상태
enum Rotation {
  ROTATION_0 = 0;    // 0도
  ROTATION_90 = 1;   // 90도 시계방향
  ROTATION_180 = 2;  // 180도
  ROTATION_270 = 3;  // 270도 시계방향
}

// 블록 뒤집기 상태
enum FlipState {
  FLIP_NORMAL = 0;      // 정상
  FLIP_HORIZONTAL = 1;  // 수평 뒤집기
  FLIP_VERTICAL = 2;    // 수직 뒤집기
  FLIP_BOTH = 3;        // 양쪽 뒤집기
}

// 게임 상태
enum GameState {
  GAME_STATE_WAITING = 0;   // 플레이어 대기 중
  GAME_STATE_PLAYING = 1;   // 게임 진행 중
  GAME_STATE_FINISHED = 2;  // 게임 종료
  GAME_STATE_PAUSED = 3;    // 일시정지
}

// 사용자 상태
enum UserStatus {
  USER_STATUS_OFFLINE = 0;
  USER_STATUS_ONLINE = 1;
  USER_STATUS_IN_LOBBY = 2;
  USER_STATUS_IN_GAME = 3;
  USER_STATUS_AWAY = 4;
}

// ========================================
// 기본 데이터 구조
// ========================================

// 2D 위치
message Position {
  int32 row = 1;
  int32 col = 2;
}

// 블록 배치 정보
message BlockPlacement {
  BlockType type = 1;
  Position position = 2;
  Rotation rotation = 3;
  FlipState flip = 4;
  PlayerColor player = 5;
}

// 사용자 기본 정보
message UserInfo {
  string username = 1;
  int32 level = 2;
  int32 total_games = 3;
  int32 wins = 4;
  int32 losses = 5;
  int32 rating = 6;
  UserStatus status = 7;
  google.protobuf.Timestamp last_seen = 8;
}

// 플레이어 슬롯 정보
message PlayerSlot {
  PlayerColor color = 1;
  string username = 2;
  bool is_ai = 3;
  int32 ai_difficulty = 4;  // 1-3 (쉬움-어려움)
  bool is_host = 5;
  bool is_ready = 6;
  int32 score = 7;
  int32 remaining_blocks = 8;
  repeated BlockType used_blocks = 9;
}

// 방 기본 정보
message RoomInfo {
  int32 room_id = 1;
  string room_name = 2;
  string host_username = 3;
  int32 current_players = 4;
  int32 max_players = 5;
  bool is_private = 6;
  bool is_playing = 7;
  string game_mode = 8;  // "클래식", "듀오" 등
  google.protobuf.Timestamp created_at = 9;
}

// 게임 보드 상태 (압축된 형태)
message BoardState {
  // 20x20 보드를 효율적으로 인코딩
  // 각 셀은 4비트 (0-4: PlayerColor)
  // 400셀 → 200바이트로 압축
  bytes compressed_board = 1;
  int32 board_version = 2;  // 상태 버전 (충돌 감지용)
}

// 게임 통계
message GameStats {
  int32 total_moves = 1;
  int32 game_duration_seconds = 2;
  map<string, int32> player_scores = 3;
  map<string, int32> blocks_used = 4;
  string winner = 5;
}

// 서버 상태 정보
message ServerInfo {
  int32 online_users = 1;
  int32 active_rooms = 2;
  int32 ongoing_games = 3;
  float server_load = 4;
  string server_version = 5;
  google.protobuf.Timestamp server_time = 6;
}

// ========================================
// 공통 결과 타입
// ========================================

// 성공/실패 결과
enum ResultCode {
  RESULT_SUCCESS = 0;
  RESULT_UNKNOWN_ERROR = 1;
  RESULT_INVALID_REQUEST = 2;
  RESULT_PERMISSION_DENIED = 3;
  RESULT_NOT_FOUND = 4;
  RESULT_ALREADY_EXISTS = 5;
  RESULT_GAME_RULE_VIOLATION = 6;
  RESULT_TIMEOUT = 7;
  RESULT_SERVER_BUSY = 8;
}

// 공통 응답 결과
message Result {
  ResultCode code = 1;
  string message = 2;
  map<string, string> details = 3;  // 추가 정보
}