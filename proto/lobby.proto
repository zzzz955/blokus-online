syntax = "proto3";

package blokus;

import "google/protobuf/timestamp.proto";
import "common.proto";

// ========================================
// �κ� ���� ������
// ========================================

enum RoomFilter {
  ROOM_FILTER_ALL = 0;
  ROOM_FILTER_AVAILABLE = 1;    // ���� ������ ��
  ROOM_FILTER_IN_PROGRESS = 2;  // ���� ���� ��
  ROOM_FILTER_FRIENDS = 3;      // ģ���� �ִ� ��
  ROOM_FILTER_BEGINNER = 4;     // �ʺ��� ��
  ROOM_FILTER_EXPERT = 5;       // ������
}

enum RoomSortOrder {
  ROOM_SORT_CREATED_TIME = 0;   // ���� �ð���
  ROOM_SORT_PLAYER_COUNT = 1;   // �÷��̾� ����
  ROOM_SORT_ROOM_NAME = 2;      // �� �̸���
  ROOM_SORT_HOST_RATING = 3;    // ���� �����ü�
}

// ========================================
// �� ��� ��û/����
// ========================================

message GetRoomListRequest {
  RoomFilter filter = 1;
  RoomSortOrder sort_order = 2;
  bool ascending = 3;          // ��������/��������
  
  // ����¡
  int32 page = 4;
  int32 page_size = 5;
  
  // �˻� ����
  string search_query = 6;     // �� �̸� �˻�
  string host_name = 7;        // Ư�� ȣ��Ʈ �˻�
  int32 min_players = 8;       // �ּ� �÷��̾� ��
  int32 max_players = 9;       // �ִ� �÷��̾� ��
  bool include_private = 10;   // ����� �� ���� ����
}

message RoomListResponse {
  Result result = 1;
  repeated RoomInfo rooms = 2;
  
  // ����¡ ����
  int32 total_rooms = 3;
  int32 current_page = 4;
  int32 total_pages = 5;
  
  // ��� ����
  int32 available_rooms = 6;   // ���� ������ �� ��
  int32 playing_rooms = 7;     // ���� ���� ���� �� ��
  int32 total_players_in_lobby = 8; // �κ� �� �� �÷��̾� ��
}

// ========================================
// �ǽð� �� ��� ������Ʈ
// ========================================

message RoomListUpdate {
  enum UpdateType {
    ROOM_CREATED = 0;
    ROOM_UPDATED = 1;
    ROOM_DELETED = 2;
    PLAYER_JOINED = 3;
    PLAYER_LEFT = 4;
    GAME_STARTED = 5;
    GAME_ENDED = 6;
  }
  
  UpdateType update_type = 1;
  RoomInfo room_info = 2;
  string updated_field = 3;    // � �ʵ尡 ����Ǿ�����
  google.protobuf.Timestamp updated_at = 4;
  
  // �߰� ����
  string player_username = 5;  // ����/������ �÷��̾�
  PlayerColor player_color = 6; // �÷��̾� ����
}

// ========================================
// �� ���� ��û/����
// ========================================

message CreateRoomRequest {
  string room_name = 1;
  bool is_private = 2;
  string password = 3;         // ����� �� ��й�ȣ
  
  // ���� ����
  string game_mode = 4;        // "Ŭ����", "���", "����" ��
  int32 max_players = 5;       // �ִ� �÷��̾� �� (2-4)
  int32 turn_time_seconds = 6; // �� ���ѽð�
  
  // �� ����
  string description = 8;      // �� ����
  repeated string tags = 9;    // �� �±� (�ʺ���, ����, �������� ��)
  int32 min_rating = 10;       // �ּ� ������ ����
  int32 max_rating = 11;       // �ִ� ������ ����
  
  // ���� ����
  bool spectators_allowed = 15; // ������ ���
  int32 max_spectators = 16;   // �ִ� ������ ��
  bool auto_start = 17;        // �ο� ���� �� �ڵ� ����
  bool ranked_game = 18;       // ��ũ ���� ����
}

message CreateRoomResponse {
  Result result = 1;
  RoomInfo room_info = 2;      // ������ �� ����
  string join_token = 3;       // �� ���� ��ū (�ӽ�)
  
  // ���� �� �� ����
  repeated string validation_errors = 10;
  string suggested_name = 11;  // �ߺ��� �̸��� �� ���ȸ�
}

// ========================================
// �� ���� ��û/����
// ========================================

message JoinRoomRequest {
  int32 room_id = 1;
  string password = 2;         // ����� �� ��й�ȣ
  string join_token = 3;       // �ʴ� ��ū
  PlayerColor preferred_color = 4; // ��ȣ�ϴ� ����
  bool as_spectator = 5;       // �����ڷ� ����
}

message JoinRoomResponse {
  Result result = 1;
  RoomInfo room_info = 2;
  PlayerColor assigned_color = 3; // �Ҵ�� ����
  repeated PlayerSlot player_slots = 4; // ��� �÷��̾� ���� ����
  
  // �� �� ����
  string welcome_message = 5;  // ������ ������ ȯ�� �޽���
  repeated string room_rules = 6; // �� ��Ģ
  bool is_rejoining = 7;       // ������ ���� (���� ���� �� ������)
  
  // ���� �� ����
  string failure_reason = 10;
  int32 queue_position = 11;   // ��⿭ ��ġ (���� ������ ���)
}

// ========================================
// �� ������ ��û/����
// ========================================

message LeaveRoomRequest {
  int32 room_id = 1;
  string reason = 2;           // ������ ���� (����)
  bool transfer_host = 3;      // ���� ���� �̾� (������ ���)
  string new_host_username = 4; // �� ���� ����
}

message LeaveRoomResponse {
  Result result = 1;
  string message = 2;
  bool room_disbanded = 3;     // ���� ��ü�Ǿ�����
  string new_host = 4;         // ���ο� ����
}

// ========================================
// �÷��̾� ����/���� �˸�
// ========================================

message PlayerJoinedNotification {
  string username = 1;
  PlayerColor color = 2;
  PlayerSlot player_info = 3;
  bool is_rejoining = 4;       // ������ ����
  google.protobuf.Timestamp joined_at = 5;
  
  // ������ �÷��̾� ����
  UserInfo user_info = 6;
  string join_message = 7;     // ���� �޽���
}

message PlayerLeftNotification {
  string username = 1;
  PlayerColor color = 2;
  string reason = 3;           // ���� ����
  bool was_kicked = 4;         // ���� ����
  google.protobuf.Timestamp left_at = 5;
  
  // �� ���� ����
  string new_host = 6;         // ���ο� ���� (���� ������ ���� ���)
  bool room_disbanded = 7;     // �� ��ü ����
}

// ========================================
// ����� ��� ����
// ========================================

message GetUserListRequest {
  UserStatus status_filter = 1; // ���º� ���͸�
  string search_query = 2;     // ����ڸ� �˻�
  int32 page = 3;
  int32 page_size = 4;
}

message UserListUpdate {
  enum UpdateType {
    USER_ONLINE = 0;
    USER_OFFLINE = 1;
    USER_STATUS_CHANGED = 2;
    USER_JOINED_ROOM = 3;
    USER_LEFT_ROOM = 4;
  }
  
  UpdateType update_type = 1;
  UserInfo user_info = 2;
  UserStatus old_status = 3;   // ���� ����
  UserStatus new_status = 4;   // ���ο� ����
  int32 room_id = 5;          // ���� �� ID
  google.protobuf.Timestamp updated_at = 6;
}

// ========================================
// ����� ��� ��û/����
// ========================================

message GetUserStatsRequest {
  string username = 1;         // ��ȸ�� ����� (�� ���̸� �ڽ�)
  bool include_game_history = 2; // ���� ��� ����
  bool include_achievements = 3;  // ���� ����
  int32 recent_games_count = 4;   // �ֱ� ���� ��
}

message UserStatsResponse {
  Result result = 1;
  UserInfo user_info = 2;
  
  // �� ���
  int32 games_today = 3;
  int32 games_this_week = 4;
  int32 games_this_month = 5;
  int32 consecutive_wins = 6;
  int32 longest_win_streak = 7;
  float average_game_duration = 8;
  int32 favorite_color = 9;    // ���� ���� ����� ����
  
  // �ֱ� ���� ���
  repeated GameStats recent_games = 10;
  
  // ���� ����
  repeated string achievements = 11;
  int32 achievement_points = 12;
  
  // ��ŷ ����
  int32 current_rank = 13;
  int32 rank_change = 14;      // ��ũ ���� (+/-����)
  int32 rating_points = 15;
  string tier = 16;            // "�����", "�ǹ�", "���" ��
}

// ========================================
// Game Ready and Start
// ========================================

message SetPlayerReadyRequest {
  int32 room_id = 1;
  bool ready = 2;              // true: ready, false: not ready
}

message SetPlayerReadyResponse {
  Result result = 1;
  string message = 2;
}

// StartGameRequest and StartGameResponse moved to game.proto

message PlayerReadyNotification {
  string username = 1;
  PlayerColor color = 2;
  bool ready = 3;              // Ready status
  google.protobuf.Timestamp updated_at = 4;
}

// GameStartNotification merged into GameStartedNotification in game.proto

// ========================================
// ģ�� �ý��� (�⺻)
// ========================================

message FriendListRequest {
  bool include_offline = 1;    // �������� ģ�� ����
}

message FriendListResponse {
  Result result = 1;
  repeated UserInfo friends = 2;
  repeated UserInfo pending_requests = 3; // ��� ���� ģ�� ��û
  repeated UserInfo sent_requests = 4;    // ���� ģ�� ��û
}

message AddFriendRequest {
  string username = 1;
  string message = 2;          // ģ�� ��û �޽���
}

message AddFriendResponse {
  Result result = 1;
  string message = 2;
  bool auto_accepted = 3;      // �ڵ� ���� ����
}

// ========================================
// ���� ���� �� ����
// ========================================

message ServerAnnouncementNotification {
  enum AnnouncementType {
    INFO = 0;
    WARNING = 1;
    MAINTENANCE = 2;
    UPDATE = 3;
    EVENT = 4;
  }
  
  AnnouncementType type = 1;
  string title = 2;
  string message = 3;
  string url = 4;              // �� ���� URL
  google.protobuf.Timestamp valid_until = 5;
  bool requires_acknowledgment = 6; // ����� Ȯ�� �ʿ�
  
  // ǥ�� ����
  bool show_popup = 7;         // Show popup
  bool show_banner = 8;        // Show banner
  int32 priority = 9;          // Priority (higher = display first)
}

message MaintenanceNotification {
  google.protobuf.Timestamp start_time = 1;
  google.protobuf.Timestamp end_time = 2;
  string reason = 3;
  string details = 4;
  bool force_disconnect = 5;   // ���� ���� ���� ����
  int32 warning_minutes = 6;   // ���� ��� �ð�
}