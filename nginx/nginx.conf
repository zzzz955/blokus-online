# ==================================================
# Nginx Configuration - Blokus Online
# - 443: HTTPS (웹앱/Next.js API/싱글API/OIDC)
# - 80 : HTTP -> HTTPS 리다이렉트 (+ ACME)
# - 3000/8080/9000 : HTTP로 외부 프록시 공개 (Unity 접근용)
# ==================================================

user  nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M;

    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # WebSocket 업그레이드 헬퍼
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # ===============================
    # Upstreams (Docker 내부 컨테이너)
    # ===============================
    upstream blokus_web {
        server blokus-web:3000 max_fails=0;
        keepalive 32;
    }
    upstream blokus_single_api {
        server blokus-single-api:8080 max_fails=0;
        keepalive 16;
    }
    upstream blokus_oidc {
        server blokus-oidc-server:9000 max_fails=0;
        keepalive 16;
    }

    # ===============================
    # :80 - HTTP -> HTTPS 리다이렉트
    # ===============================
    server {
        listen 80;
        server_name blokus-online.mooo.com localhost;

        # ACME challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;  # $server_name 대신 $host 사용
        }
    }

    # ===============================
    # :3000 - HTTP 공개 (웹앱 프록시)
    # ===============================
    server {
        listen 3000;
        server_name blokus-online.mooo.com;

        location /healthz { return 200 "ok"; add_header Content-Type text/plain; }

        location / {
            proxy_pass http://blokus_web;
            proxy_http_version 1.1;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
            proxy_set_header Accept-Encoding gzip;
        }
    }

    # ===============================
    # :8080 - HTTP 공개 (싱글 API 프록시)
    #  Unity에서 http://blokus-online.mooo.com:8080/api/... 로 접근 가능
    # ===============================
    server {
        listen 8080;
        server_name blokus-online.mooo.com;

        location = /healthz { return 200 "ok"; add_header Content-Type text/plain; }

        location / {
            proxy_pass http://blokus_single_api;
            proxy_http_version 1.1;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_buffering off;
            proxy_request_buffering off;
            proxy_read_timeout 30s;
            proxy_connect_timeout 10s;
        }
    }

    # ===============================
    # :9000 - HTTP 공개 (OIDC 프록시)
    #  Unity에서 http://blokus-online.mooo.com:9000/... 로 접근 가능
    #  (Issuer를 이 포트로 사용할 경우 OIDC 서버 설정도 동일해야 함)
    # ===============================
    server {
        listen 9000;
        server_name blokus-online.mooo.com;

        location / {
            proxy_pass http://blokus_oidc;
            proxy_http_version 1.1;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Proto $scheme; # http
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_redirect off;
            proxy_buffering off;
            proxy_request_buffering off;

            proxy_buffer_size 16k;
            proxy_buffers 8 16k;

            proxy_read_timeout 30s;
            proxy_connect_timeout 10s;
        }
    }

    # ===============================
    # :443 - HTTPS 메인 서버
    #  - /                → blokus_web (Next.js)
    #  - /api/            → blokus_web (Next.js API Routes)
    #  - /single-api/     → blokus_single_api (내부 8080 API)
    #  - /oidc/           → blokus_oidc (서브패스 OIDC)
    # ===============================
    server {
        listen 443 ssl http2;
        server_name blokus-online.mooo.com;

        # SSL certs
        ssl_certificate     /etc/letsencrypt/live/blokus-online.mooo.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/blokus-online.mooo.com/privkey.pem;

        # TLS 호환성 우선 설정
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_ecdh_curve X25519:secp384r1:prime256v1;

        # 보안 헤더
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;

        location = /healthz { return 200 "ok"; add_header Content-Type text/plain; }

        # -------- 웹앱(Next.js) --------
        location / {
            proxy_pass http://blokus_web;
            proxy_http_version 1.1;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;

            proxy_set_header Accept-Encoding gzip;
            proxy_cache_bypass $http_upgrade;

            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }

        # -------- 정적 파일 캐시 (프록시 경유) --------
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2)$ {
            proxy_pass http://blokus_web;
            proxy_http_version 1.1;

            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto https;

            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
        }

        # -------- Next.js API Routes --------
        location /api/ {
            proxy_pass http://blokus_web;
            proxy_http_version 1.1;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;

            proxy_buffering off;
            proxy_request_buffering off;
        }

        # -------- Single API (내부 8080) --------
        location /single-api/ {
            rewrite ^/single-api/(.*) /$1 break;
            proxy_pass http://blokus_single_api;
            proxy_http_version 1.1;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;

            proxy_buffering off;
            proxy_request_buffering off;
            proxy_read_timeout 30s;
            proxy_connect_timeout 10s;
        }

        # -------- OIDC (서브패스) --------
        location /oidc/ {
            rewrite ^/oidc/(.*) /$1 break;
            proxy_pass http://blokus_oidc;
            proxy_http_version 1.1;

            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Prefix /oidc;   # ★ 중요
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_redirect off;

            proxy_buffering off;
            proxy_request_buffering off;

            proxy_buffer_size 16k;
            proxy_buffers 8 16k;

            proxy_read_timeout 30s;
            proxy_connect_timeout 10s;

            # 메타데이터는 캐시하고, 토큰/authorize는 캐시 X (패턴별 처리하려면 location 분리 가능)
        }

        # -------- 다운로드 --------
        location /downloads/ {
            alias /var/www/downloads/;
            sendfile on;
            tcp_nopush on;

            expires 1d;
            add_header Cache-Control "public, immutable";

            location ~* \.(exe|msi|zip)$ {
                add_header Content-Disposition 'attachment';
            }
        }
    }
}
